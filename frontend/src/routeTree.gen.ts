/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as OauthSuccessRouteImport } from './routes/oauth/success'
import { Route as AuthenticatedTuningRouteImport } from './routes/_authenticated/tuning'
import { Route as AuthenticatedSearchRouteImport } from './routes/_authenticated/search'
import { Route as AuthenticatedKnowledgeManagementRouteImport } from './routes/_authenticated/knowledgeManagement'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedChatRouteImport } from './routes/_authenticated/chat'
import { Route as AuthenticatedApiKeyRouteImport } from './routes/_authenticated/api-key'
import { Route as AuthenticatedAgentRouteImport } from './routes/_authenticated/agent'
import { Route as AuthenticatedIntegrationsIndexRouteImport } from './routes/_authenticated/integrations/index'
import { Route as AuthenticatedIntegrationsSlackRouteImport } from './routes/_authenticated/integrations/slack'
import { Route as AuthenticatedIntegrationsMcpRouteImport } from './routes/_authenticated/integrations/mcp'
import { Route as AuthenticatedIntegrationsGoogleRouteImport } from './routes/_authenticated/integrations/google'
import { Route as AuthenticatedIntegrationsFileuploadRouteImport } from './routes/_authenticated/integrations/fileupload'
import { Route as AuthenticatedDataSourceDocIdRouteImport } from './routes/_authenticated/dataSource.$docId'
import { Route as AuthenticatedChatChatIdRouteImport } from './routes/_authenticated/chat.$chatId'
import { Route as AuthenticatedAdminIntegrationsIndexRouteImport } from './routes/_authenticated/admin/integrations/index'
import { Route as AuthenticatedTraceChatIdMsgIdRouteImport } from './routes/_authenticated/trace.$chatId.$msgId'
import { Route as AuthenticatedAdminIntegrationsSlackRouteImport } from './routes/_authenticated/admin/integrations/slack'
import { Route as AuthenticatedAdminIntegrationsMcpRouteImport } from './routes/_authenticated/admin/integrations/mcp'
import { Route as AuthenticatedAdminIntegrationsGoogleRouteImport } from './routes/_authenticated/admin/integrations/google'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const OauthSuccessRoute = OauthSuccessRouteImport.update({
  id: '/oauth/success',
  path: '/oauth/success',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedTuningRoute = AuthenticatedTuningRouteImport.update({
  id: '/tuning',
  path: '/tuning',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSearchRoute = AuthenticatedSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedKnowledgeManagementRoute =
  AuthenticatedKnowledgeManagementRouteImport.update({
    id: '/knowledgeManagement',
    path: '/knowledgeManagement',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedChatRoute = AuthenticatedChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedApiKeyRoute = AuthenticatedApiKeyRouteImport.update({
  id: '/api-key',
  path: '/api-key',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAgentRoute = AuthenticatedAgentRouteImport.update({
  id: '/agent',
  path: '/agent',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedIntegrationsIndexRoute =
  AuthenticatedIntegrationsIndexRouteImport.update({
    id: '/integrations/',
    path: '/integrations/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedIntegrationsSlackRoute =
  AuthenticatedIntegrationsSlackRouteImport.update({
    id: '/integrations/slack',
    path: '/integrations/slack',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedIntegrationsMcpRoute =
  AuthenticatedIntegrationsMcpRouteImport.update({
    id: '/integrations/mcp',
    path: '/integrations/mcp',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedIntegrationsGoogleRoute =
  AuthenticatedIntegrationsGoogleRouteImport.update({
    id: '/integrations/google',
    path: '/integrations/google',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedIntegrationsFileuploadRoute =
  AuthenticatedIntegrationsFileuploadRouteImport.update({
    id: '/integrations/fileupload',
    path: '/integrations/fileupload',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDataSourceDocIdRoute =
  AuthenticatedDataSourceDocIdRouteImport.update({
    id: '/dataSource/$docId',
    path: '/dataSource/$docId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedChatChatIdRoute = AuthenticatedChatChatIdRouteImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => AuthenticatedChatRoute,
} as any)
const AuthenticatedAdminIntegrationsIndexRoute =
  AuthenticatedAdminIntegrationsIndexRouteImport.update({
    id: '/admin/integrations/',
    path: '/admin/integrations/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedTraceChatIdMsgIdRoute =
  AuthenticatedTraceChatIdMsgIdRouteImport.update({
    id: '/trace/$chatId/$msgId',
    path: '/trace/$chatId/$msgId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminIntegrationsSlackRoute =
  AuthenticatedAdminIntegrationsSlackRouteImport.update({
    id: '/admin/integrations/slack',
    path: '/admin/integrations/slack',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminIntegrationsMcpRoute =
  AuthenticatedAdminIntegrationsMcpRouteImport.update({
    id: '/admin/integrations/mcp',
    path: '/admin/integrations/mcp',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminIntegrationsGoogleRoute =
  AuthenticatedAdminIntegrationsGoogleRouteImport.update({
    id: '/admin/integrations/google',
    path: '/admin/integrations/google',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/agent': typeof AuthenticatedAgentRoute
  '/api-key': typeof AuthenticatedApiKeyRoute
  '/chat': typeof AuthenticatedChatRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/knowledgeManagement': typeof AuthenticatedKnowledgeManagementRoute
  '/search': typeof AuthenticatedSearchRoute
  '/tuning': typeof AuthenticatedTuningRoute
  '/oauth/success': typeof OauthSuccessRoute
  '/': typeof AuthenticatedIndexRoute
  '/chat/$chatId': typeof AuthenticatedChatChatIdRoute
  '/dataSource/$docId': typeof AuthenticatedDataSourceDocIdRoute
  '/integrations/fileupload': typeof AuthenticatedIntegrationsFileuploadRoute
  '/integrations/google': typeof AuthenticatedIntegrationsGoogleRoute
  '/integrations/mcp': typeof AuthenticatedIntegrationsMcpRoute
  '/integrations/slack': typeof AuthenticatedIntegrationsSlackRoute
  '/integrations': typeof AuthenticatedIntegrationsIndexRoute
  '/admin/integrations/google': typeof AuthenticatedAdminIntegrationsGoogleRoute
  '/admin/integrations/mcp': typeof AuthenticatedAdminIntegrationsMcpRoute
  '/admin/integrations/slack': typeof AuthenticatedAdminIntegrationsSlackRoute
  '/trace/$chatId/$msgId': typeof AuthenticatedTraceChatIdMsgIdRoute
  '/admin/integrations': typeof AuthenticatedAdminIntegrationsIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/agent': typeof AuthenticatedAgentRoute
  '/api-key': typeof AuthenticatedApiKeyRoute
  '/chat': typeof AuthenticatedChatRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/knowledgeManagement': typeof AuthenticatedKnowledgeManagementRoute
  '/search': typeof AuthenticatedSearchRoute
  '/tuning': typeof AuthenticatedTuningRoute
  '/oauth/success': typeof OauthSuccessRoute
  '/': typeof AuthenticatedIndexRoute
  '/chat/$chatId': typeof AuthenticatedChatChatIdRoute
  '/dataSource/$docId': typeof AuthenticatedDataSourceDocIdRoute
  '/integrations/fileupload': typeof AuthenticatedIntegrationsFileuploadRoute
  '/integrations/google': typeof AuthenticatedIntegrationsGoogleRoute
  '/integrations/mcp': typeof AuthenticatedIntegrationsMcpRoute
  '/integrations/slack': typeof AuthenticatedIntegrationsSlackRoute
  '/integrations': typeof AuthenticatedIntegrationsIndexRoute
  '/admin/integrations/google': typeof AuthenticatedAdminIntegrationsGoogleRoute
  '/admin/integrations/mcp': typeof AuthenticatedAdminIntegrationsMcpRoute
  '/admin/integrations/slack': typeof AuthenticatedAdminIntegrationsSlackRoute
  '/trace/$chatId/$msgId': typeof AuthenticatedTraceChatIdMsgIdRoute
  '/admin/integrations': typeof AuthenticatedAdminIntegrationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRoute
  '/_authenticated/agent': typeof AuthenticatedAgentRoute
  '/_authenticated/api-key': typeof AuthenticatedApiKeyRoute
  '/_authenticated/chat': typeof AuthenticatedChatRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/knowledgeManagement': typeof AuthenticatedKnowledgeManagementRoute
  '/_authenticated/search': typeof AuthenticatedSearchRoute
  '/_authenticated/tuning': typeof AuthenticatedTuningRoute
  '/oauth/success': typeof OauthSuccessRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/chat/$chatId': typeof AuthenticatedChatChatIdRoute
  '/_authenticated/dataSource/$docId': typeof AuthenticatedDataSourceDocIdRoute
  '/_authenticated/integrations/fileupload': typeof AuthenticatedIntegrationsFileuploadRoute
  '/_authenticated/integrations/google': typeof AuthenticatedIntegrationsGoogleRoute
  '/_authenticated/integrations/mcp': typeof AuthenticatedIntegrationsMcpRoute
  '/_authenticated/integrations/slack': typeof AuthenticatedIntegrationsSlackRoute
  '/_authenticated/integrations/': typeof AuthenticatedIntegrationsIndexRoute
  '/_authenticated/admin/integrations/google': typeof AuthenticatedAdminIntegrationsGoogleRoute
  '/_authenticated/admin/integrations/mcp': typeof AuthenticatedAdminIntegrationsMcpRoute
  '/_authenticated/admin/integrations/slack': typeof AuthenticatedAdminIntegrationsSlackRoute
  '/_authenticated/trace/$chatId/$msgId': typeof AuthenticatedTraceChatIdMsgIdRoute
  '/_authenticated/admin/integrations/': typeof AuthenticatedAdminIntegrationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/agent'
    | '/api-key'
    | '/chat'
    | '/dashboard'
    | '/knowledgeManagement'
    | '/search'
    | '/tuning'
    | '/oauth/success'
    | '/'
    | '/chat/$chatId'
    | '/dataSource/$docId'
    | '/integrations/fileupload'
    | '/integrations/google'
    | '/integrations/mcp'
    | '/integrations/slack'
    | '/integrations'
    | '/admin/integrations/google'
    | '/admin/integrations/mcp'
    | '/admin/integrations/slack'
    | '/trace/$chatId/$msgId'
    | '/admin/integrations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/agent'
    | '/api-key'
    | '/chat'
    | '/dashboard'
    | '/knowledgeManagement'
    | '/search'
    | '/tuning'
    | '/oauth/success'
    | '/'
    | '/chat/$chatId'
    | '/dataSource/$docId'
    | '/integrations/fileupload'
    | '/integrations/google'
    | '/integrations/mcp'
    | '/integrations/slack'
    | '/integrations'
    | '/admin/integrations/google'
    | '/admin/integrations/mcp'
    | '/admin/integrations/slack'
    | '/trace/$chatId/$msgId'
    | '/admin/integrations'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/_authenticated/agent'
    | '/_authenticated/api-key'
    | '/_authenticated/chat'
    | '/_authenticated/dashboard'
    | '/_authenticated/knowledgeManagement'
    | '/_authenticated/search'
    | '/_authenticated/tuning'
    | '/oauth/success'
    | '/_authenticated/'
    | '/_authenticated/chat/$chatId'
    | '/_authenticated/dataSource/$docId'
    | '/_authenticated/integrations/fileupload'
    | '/_authenticated/integrations/google'
    | '/_authenticated/integrations/mcp'
    | '/_authenticated/integrations/slack'
    | '/_authenticated/integrations/'
    | '/_authenticated/admin/integrations/google'
    | '/_authenticated/admin/integrations/mcp'
    | '/_authenticated/admin/integrations/slack'
    | '/_authenticated/trace/$chatId/$msgId'
    | '/_authenticated/admin/integrations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRoute
  OauthSuccessRoute: typeof OauthSuccessRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/oauth/success': {
      id: '/oauth/success'
      path: '/oauth/success'
      fullPath: '/oauth/success'
      preLoaderRoute: typeof OauthSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/tuning': {
      id: '/_authenticated/tuning'
      path: '/tuning'
      fullPath: '/tuning'
      preLoaderRoute: typeof AuthenticatedTuningRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/search': {
      id: '/_authenticated/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthenticatedSearchRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/knowledgeManagement': {
      id: '/_authenticated/knowledgeManagement'
      path: '/knowledgeManagement'
      fullPath: '/knowledgeManagement'
      preLoaderRoute: typeof AuthenticatedKnowledgeManagementRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/chat': {
      id: '/_authenticated/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthenticatedChatRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/api-key': {
      id: '/_authenticated/api-key'
      path: '/api-key'
      fullPath: '/api-key'
      preLoaderRoute: typeof AuthenticatedApiKeyRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/agent': {
      id: '/_authenticated/agent'
      path: '/agent'
      fullPath: '/agent'
      preLoaderRoute: typeof AuthenticatedAgentRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/integrations/': {
      id: '/_authenticated/integrations/'
      path: '/integrations'
      fullPath: '/integrations'
      preLoaderRoute: typeof AuthenticatedIntegrationsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/integrations/slack': {
      id: '/_authenticated/integrations/slack'
      path: '/integrations/slack'
      fullPath: '/integrations/slack'
      preLoaderRoute: typeof AuthenticatedIntegrationsSlackRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/integrations/mcp': {
      id: '/_authenticated/integrations/mcp'
      path: '/integrations/mcp'
      fullPath: '/integrations/mcp'
      preLoaderRoute: typeof AuthenticatedIntegrationsMcpRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/integrations/google': {
      id: '/_authenticated/integrations/google'
      path: '/integrations/google'
      fullPath: '/integrations/google'
      preLoaderRoute: typeof AuthenticatedIntegrationsGoogleRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/integrations/fileupload': {
      id: '/_authenticated/integrations/fileupload'
      path: '/integrations/fileupload'
      fullPath: '/integrations/fileupload'
      preLoaderRoute: typeof AuthenticatedIntegrationsFileuploadRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dataSource/$docId': {
      id: '/_authenticated/dataSource/$docId'
      path: '/dataSource/$docId'
      fullPath: '/dataSource/$docId'
      preLoaderRoute: typeof AuthenticatedDataSourceDocIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/chat/$chatId': {
      id: '/_authenticated/chat/$chatId'
      path: '/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof AuthenticatedChatChatIdRouteImport
      parentRoute: typeof AuthenticatedChatRoute
    }
    '/_authenticated/admin/integrations/': {
      id: '/_authenticated/admin/integrations/'
      path: '/admin/integrations'
      fullPath: '/admin/integrations'
      preLoaderRoute: typeof AuthenticatedAdminIntegrationsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/trace/$chatId/$msgId': {
      id: '/_authenticated/trace/$chatId/$msgId'
      path: '/trace/$chatId/$msgId'
      fullPath: '/trace/$chatId/$msgId'
      preLoaderRoute: typeof AuthenticatedTraceChatIdMsgIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/integrations/slack': {
      id: '/_authenticated/admin/integrations/slack'
      path: '/admin/integrations/slack'
      fullPath: '/admin/integrations/slack'
      preLoaderRoute: typeof AuthenticatedAdminIntegrationsSlackRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/integrations/mcp': {
      id: '/_authenticated/admin/integrations/mcp'
      path: '/admin/integrations/mcp'
      fullPath: '/admin/integrations/mcp'
      preLoaderRoute: typeof AuthenticatedAdminIntegrationsMcpRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/integrations/google': {
      id: '/_authenticated/admin/integrations/google'
      path: '/admin/integrations/google'
      fullPath: '/admin/integrations/google'
      preLoaderRoute: typeof AuthenticatedAdminIntegrationsGoogleRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedChatRouteChildren {
  AuthenticatedChatChatIdRoute: typeof AuthenticatedChatChatIdRoute
}

const AuthenticatedChatRouteChildren: AuthenticatedChatRouteChildren = {
  AuthenticatedChatChatIdRoute: AuthenticatedChatChatIdRoute,
}

const AuthenticatedChatRouteWithChildren =
  AuthenticatedChatRoute._addFileChildren(AuthenticatedChatRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedAgentRoute: typeof AuthenticatedAgentRoute
  AuthenticatedApiKeyRoute: typeof AuthenticatedApiKeyRoute
  AuthenticatedChatRoute: typeof AuthenticatedChatRouteWithChildren
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedKnowledgeManagementRoute: typeof AuthenticatedKnowledgeManagementRoute
  AuthenticatedSearchRoute: typeof AuthenticatedSearchRoute
  AuthenticatedTuningRoute: typeof AuthenticatedTuningRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedDataSourceDocIdRoute: typeof AuthenticatedDataSourceDocIdRoute
  AuthenticatedIntegrationsFileuploadRoute: typeof AuthenticatedIntegrationsFileuploadRoute
  AuthenticatedIntegrationsGoogleRoute: typeof AuthenticatedIntegrationsGoogleRoute
  AuthenticatedIntegrationsMcpRoute: typeof AuthenticatedIntegrationsMcpRoute
  AuthenticatedIntegrationsSlackRoute: typeof AuthenticatedIntegrationsSlackRoute
  AuthenticatedIntegrationsIndexRoute: typeof AuthenticatedIntegrationsIndexRoute
  AuthenticatedAdminIntegrationsGoogleRoute: typeof AuthenticatedAdminIntegrationsGoogleRoute
  AuthenticatedAdminIntegrationsMcpRoute: typeof AuthenticatedAdminIntegrationsMcpRoute
  AuthenticatedAdminIntegrationsSlackRoute: typeof AuthenticatedAdminIntegrationsSlackRoute
  AuthenticatedTraceChatIdMsgIdRoute: typeof AuthenticatedTraceChatIdMsgIdRoute
  AuthenticatedAdminIntegrationsIndexRoute: typeof AuthenticatedAdminIntegrationsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAgentRoute: AuthenticatedAgentRoute,
  AuthenticatedApiKeyRoute: AuthenticatedApiKeyRoute,
  AuthenticatedChatRoute: AuthenticatedChatRouteWithChildren,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedKnowledgeManagementRoute: AuthenticatedKnowledgeManagementRoute,
  AuthenticatedSearchRoute: AuthenticatedSearchRoute,
  AuthenticatedTuningRoute: AuthenticatedTuningRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedDataSourceDocIdRoute: AuthenticatedDataSourceDocIdRoute,
  AuthenticatedIntegrationsFileuploadRoute:
    AuthenticatedIntegrationsFileuploadRoute,
  AuthenticatedIntegrationsGoogleRoute: AuthenticatedIntegrationsGoogleRoute,
  AuthenticatedIntegrationsMcpRoute: AuthenticatedIntegrationsMcpRoute,
  AuthenticatedIntegrationsSlackRoute: AuthenticatedIntegrationsSlackRoute,
  AuthenticatedIntegrationsIndexRoute: AuthenticatedIntegrationsIndexRoute,
  AuthenticatedAdminIntegrationsGoogleRoute:
    AuthenticatedAdminIntegrationsGoogleRoute,
  AuthenticatedAdminIntegrationsMcpRoute:
    AuthenticatedAdminIntegrationsMcpRoute,
  AuthenticatedAdminIntegrationsSlackRoute:
    AuthenticatedAdminIntegrationsSlackRoute,
  AuthenticatedTraceChatIdMsgIdRoute: AuthenticatedTraceChatIdMsgIdRoute,
  AuthenticatedAdminIntegrationsIndexRoute:
    AuthenticatedAdminIntegrationsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRoute,
  OauthSuccessRoute: OauthSuccessRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
