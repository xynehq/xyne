[
{"id":"id:my_content:jql_query::TS.3","fields":{"description":"Search for deployment failures in task summaries","why":"Operational issue tracking and deployment monitoring.","entities_flat":["issuetype:Task","summary:deployment failed"],"synonyms":["deployment failure tasks","failed deployment tasks"],"section":"D. Text Search and Field Operations","jql_fields":["issuetype","summary"],"notes":"summary ~ searches specifically in summary/title field","jql":"issuetype = Task AND summary ~ \"deployment failed\"","id":"TS.3","nlq":"Tasks with summary containing deployment failed","query_summary":"Natural query: 'Tasks with summary containing deployment failed'. Searches for deployment failures in task titles/summaries.","paraphrases":["Show deployment failure tasks","Find failed deployment issues"],"intents":["browse","text","deployment"],"entities":"{\"issuetype\":\"Task\",\"summary\":\"deployment failed\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.12","fields":{"description":"Common JQL functions for dynamic values.","entities_flat":["field:{FIELD}","function:{FUNCTION}"],"section":"R. Small Template Bank","jql_fields":["{FIELD}"],"jql":"{FIELD} = {FUNCTION}()","id":"R.12","nlq":"Use functions like currentUser, membersOf, openSprints","query_summary":"Template for dynamic JQL functions like currentUser(), membersOf(), openSprints().","intents":["browse","function"],"entities":"{\"field\":\"{FIELD}\",\"function\":\"{FUNCTION}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.20","fields":{"description":"Mix severity + dependencies; substitute a seed set for empty key.","why":"Mixes blocking dependencies with critical severity.","entities_flat":["priority:Critical","issueLink:blocks"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["priority","issueLink"],"jql":"priority = Critical OR issue IN linkedIssues(\"\", \"blocks\")","id":"S.20","nlq":"Blockers (priority Critical or blocks link)","query_summary":"Find blockers by either Critical priority or issues blocking others.","intents":["browse","priority","linkedIssues"],"entities":"{\"priority\":\"Critical\",\"issueLink\":\"blocks\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.4","fields":{"description":"Dependency hotlist.","why":"Highlights critical unresolved dependencies tied to key issues.","entities_flat":["linkedIssues:ALPHA-1","linkedIssues:BETA-2","resolution:EMPTY"],"synonyms":["dependencies on ALPHA-1 or BETA-2","linked unresolved issues"],"section":"P. Examples Combining Many Concepts","jql_fields":["issueLink","resolution"],"notes":"Uses OR with linkedIssues for multiple parents.","jql":"(issue IN linkedIssues(ALPHA-1) OR issue IN linkedIssues(BETA-2)) AND resolution IS EMPTY","id":"P.4","nlq":"Items linked to ALPHA-1 or BETA-2 and not resolved","query_summary":"Natural query: 'Items linked to ALPHA-1 or BETA-2 and not resolved'. Synonyms: dependencies on ALPHA-1 or BETA-2, linked unresolved issues. Paraphrases: 'Show unresolved issues linked to ALPHA-1 or BETA-2', 'List blocking tickets connected to ALPHA-1 or BETA-2'. This JQL filters issues linked to ALPHA-1 or BETA-2 where resolution is empty. Fields: issueLink, resolution. Entities: ALPHA-1, BETA-2, EMPTY. Purpose: Useful for dependency hotlists.","paraphrases":["Show unresolved issues linked to ALPHA-1 or BETA-2","List blocking tickets connected to ALPHA-1 or BETA-2"],"intents":["browse","linkedIssues","resolution"],"entities":"{\"linkedIssues\":[\"ALPHA-1\",\"BETA-2\"],\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::DT.3","fields":{"description":"Show bugs modified since beginning of current day","why":"Daily status tracking and monitoring recent changes.","entities_flat":["issuetype:Bug","updated:startOfDay()"],"synonyms":["bugs modified today","bugs changed today"],"section":"A. Date and Time Functions","jql_fields":["issuetype","updated"],"notes":"startOfDay() provides precise daily boundary","jql":"issuetype = Bug AND updated >= startOfDay()","id":"DT.3","nlq":"Bugs updated today","query_summary":"Natural query: 'Bugs updated today'. Filters bugs updated since start of current day using startOfDay() function.","paraphrases":["Show bugs updated since midnight","List bugs modified in current day"],"intents":["browse","time","updated"],"entities":"{\"issuetype\":\"Bug\",\"updated\":\"startOfDay()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ATT.2","fields":{"description":"Find tasks with recent image uploads","why":"Tracks visual documentation and UI-related attachments","entities_flat":["issuetype:Task","attachment_type:images","timeframe:this week"],"synonyms":["recent image uploads","new picture attachments"],"section":"Attachments","jql_fields":["issuetype","attachments"],"notes":"Combines file type filtering with attachment change history","jql":"issuetype = Task AND attachments ~ \"*.jpg OR *.png OR *.gif\" AND attachments CHANGED DURING (-7d, now())","id":"ATT.2","nlq":"Tasks with image attachments uploaded this week","query_summary":"Natural query: 'Tasks with image attachments uploaded this week'. Combines file type and time filtering. Purpose: Visual content tracking.","paraphrases":["Show tasks with images added this week","List recent image uploads"],"intents":["attachment","images","recent"],"entities":"{\"issuetype\":\"Task\",\"attachment_type\":\"images\",\"timeframe\":\"this week\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.9","fields":{"description":"Multiple issue types.","why":"Combines multiple issuetypes to see general work items.","entities_flat":["issuetype:Story","issuetype:Task"],"synonyms":["stories","tasks","items"],"section":"A. Basic Filters","jql_fields":["issuetype"],"notes":"Story and Task are common types in Jira Software instances.","jql":"issuetype IN (Story, Task)","id":"A.9","nlq":"Stories and Tasks","query_summary":"Natural query: 'Stories and Tasks'. Synonyms: stories, tasks, items. Paraphrases: 'List all stories and tasks', 'Show work items (Story/Task)', 'Tickets that are stories or tasks'. This JQL filters issues where issuetype is either Story or Task. Fields involved: issuetype. Entity values: Story, Task. Purpose: Useful for tracking standard work items outside of bugs and epics.","paraphrases":["List all stories and tasks","Show work items (Story/Task)","Tickets that are stories or tasks"],"intents":["browse","issuetype"],"entities":"{\"issuetype\":[\"Story\",\"Task\"]}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::K.6","fields":{"description":"Text search inside worklogs.","why":"Helps locate logged activities related to investigations or analysis.","entities_flat":["worklogComment:~ investigation"],"synonyms":["log notes with investigation","comments include investigation"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["worklogComment"],"notes":"worklogComment search depends on indexing configuration.","jql":"worklogComment ~ \"investigation\"","id":"K.6","nlq":"Worklog comment contains \"investigation\"","query_summary":"Natural query: 'Worklog comment contains investigation'. Synonyms: log notes with investigation, comments include investigation. Paraphrases: 'Show issues with worklogs containing investigation', 'List tasks where logs mention investigation'. This JQL filters issues where worklogComment contains the word investigation. Field: worklogComment. Entity: ~ investigation. Purpose: Useful for analyzing investigation-related logged work.","paraphrases":["Show issues with worklogs containing investigation","List tasks where logs mention investigation"],"intents":["browse","worklog","comment"],"entities":"{\"worklogComment\":\"~ investigation\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::K.3","fields":{"description":"Actual time recorded.","why":"Useful for identifying tasks that consumed significant effort.","entities_flat":["timespent:> 3h"],"synonyms":["time recorded","work logged"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["timespent"],"notes":"timespent tracks actual logged work on an issue.","jql":"timespent > 3h","id":"K.3","nlq":"Logged time > 3h","query_summary":"Natural query: 'Logged time > 3h'. Synonyms: time recorded, work logged. Paraphrases: 'Show issues with more than 3 hours logged', 'List tasks with significant time spent'. This JQL filters issues where timespent exceeds 3 hours. Field: timespent. Entity: > 3h. Purpose: Useful for analyzing effort distribution.","paraphrases":["Show issues with more than 3 hours logged","List tasks with significant time spent"],"intents":["browse","timespent"],"entities":"{\"timespent\":\"> 3h\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::K.2","fields":{"description":"Nearly done.","why":"Helps focus on tasks that are nearly complete.","entities_flat":["remainingEstimate:<= 2h"],"synonyms":["almost finished","low remaining time"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["remainingEstimate"],"notes":"remainingEstimate shows how much time is left on a task.","jql":"remainingEstimate <= 2h","id":"K.2","nlq":"Remaining estimate <= 2h","query_summary":"Natural query: 'Remaining estimate <= 2h'. Synonyms: almost finished, low remaining time. Paraphrases: 'Show tasks with 2h or less remaining', 'List issues close to completion'. This JQL filters issues where remainingEstimate is less than or equal to 2 hours. Field: remainingEstimate. Entity: <= 2h. Purpose: Useful for tracking tasks about to finish.","paraphrases":["Show tasks with 2h or less remaining","List issues close to completion"],"intents":["browse","estimate"],"entities":"{\"remainingEstimate\":\"<= 2h\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.6","fields":{"description":"Personal sprint scope.","why":"Helps individuals focus on their specific sprint workload.","entities_flat":["issuetype:Story","sprint:openSprints()","assignee:currentUser()"],"synonyms":["my sprint stories","personal sprint workload"],"section":"G. Agile: Sprints & Boards","jql_fields":["issuetype","sprint","assignee"],"notes":"Combines issuetype, sprint, and assignee in a single query.","jql":"issuetype = Story AND sprint IN openSprints() AND assignee = currentUser()","id":"G.6","nlq":"Stories in current sprint assigned to me","query_summary":"Natural query: 'Stories in current sprint assigned to me'. Synonyms: my sprint stories, personal sprint workload. Paraphrases: 'Show my stories in current sprint', 'List sprint items assigned to me'. This JQL filters issues where issuetype = Story, sprint in openSprints(), and assignee equals currentUser(). Fields: issuetype, sprint, assignee. Entities: Story, openSprints(), currentUser(). Purpose: Useful for personal sprint tracking.","paraphrases":["Show my stories in current sprint","List sprint items assigned to me"],"intents":["browse","issuetype","sprint","assignee"],"entities":"{\"issuetype\":\"Story\",\"sprint\":\"openSprints()\",\"assignee\":\"currentUser()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::I.2","fields":{"description":"Specific link type.","why":"Focuses specifically on blocking dependencies to understand upstream blockers.","entities_flat":["linkedIssue:BETA-7","linkType:blocks"],"synonyms":["blocking BETA-7","dependencies for BETA-7"],"section":"I. Linking & Dependencies","jql_fields":["issueLink"],"notes":"linkedIssues(issue, linkType) filters by a specific type like blocks, is blocked by, relates to, etc.","jql":"issue IN linkedIssues(BETA-7, \"blocks\")","id":"I.2","nlq":"Issues that block BETA-7","query_summary":"Natural query: 'Issues that block BETA-7'. Synonyms: blocking BETA-7, dependencies for BETA-7. Paraphrases: 'Show issues blocking BETA-7', 'List tickets that block BETA-7'. This JQL retrieves issues linked to BETA-7 with the blocks link type. Fields: issueLink. Entities: BETA-7, blocks. Purpose: Useful for identifying blockers preventing BETA-7’s completion.","paraphrases":["Show issues blocking BETA-7","List tickets that block BETA-7"],"intents":["browse","linkedIssues","dependencies"],"entities":"{\"linkedIssue\":\"BETA-7\",\"linkType\":\"blocks\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.5","fields":{"description":"Negated text search.","why":"Useful for excluding noise or outdated items from search results.","entities_flat":["text:!~ deprecated"],"synonyms":["filter out deprecated","remove deprecated mentions"],"section":"D. Text & Content Search","jql_fields":["text"],"notes":"!~ operator excludes items containing the term in any indexed field.","jql":"text !~ \"deprecated\"","id":"D.5","nlq":"Exclude items mentioning \"deprecated\"","query_summary":"Natural query: 'Exclude items mentioning deprecated'. Synonyms: filter out deprecated, remove deprecated mentions. Paraphrases: 'List issues without deprecated keyword', 'Show tickets excluding deprecated'. This JQL excludes issues where text fields contain the word deprecated. Fields: text. Entity: !~ deprecated. Purpose: Useful for filtering out legacy or irrelevant items.","paraphrases":["List issues without deprecated keyword","Show tickets excluding deprecated"],"intents":["search","text"],"entities":"{\"text\":\"!~ deprecated\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.4","fields":{"description":"Long-stale backlog.","why":"Helps clean up old unresolved issues.","entities_flat":["updated:<= -30d","resolution:EMPTY"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["updated","resolution"],"jql":"updated <= -30d AND resolution IS EMPTY","id":"S.4","nlq":"Not updated in 30 days but still unresolved","query_summary":"Find unresolved issues not updated in 30 days.","intents":["browse","updated","resolution"],"entities":"{\"updated\":\"<= -30d\",\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.4","fields":{"description":"Finds comment text containing your username (depends on indexing).","why":"Helps users quickly find where they were mentioned in discussions.","entities_flat":["comment:~ currentUser()"],"synonyms":["comments with my name","mentioned in discussion"],"section":"J. Users, Groups, Teams","jql_fields":["comment"],"notes":"Relies on text indexing of comments; may not always match structured @mentions reliably.","jql":"comment ~ currentUser()","id":"J.4","nlq":"Mentioned me in comments","query_summary":"Natural query: 'Mentioned me in comments'. Synonyms: comments with my name, mentioned in discussion. Paraphrases: 'Find tickets where I’m mentioned in comments', 'Show issues with my username in comments'. This JQL filters issues where comment field contains currentUser(). Field: comment. Entity: ~ currentUser(). Purpose: Useful for tracking mentions in conversations.","paraphrases":["Find tickets where I’m mentioned in comments","Show issues with my username in comments"],"intents":["browse","comment","user mention"],"entities":"{\"comment\":\"~ currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SLA.1","fields":{"description":"Service desk requests that missed resolution time SLA in current week","why":"Essential for tracking recent SLA failures and escalations","entities_flat":["sla_field:Time to resolution","sla_status:breached","timeframe:this week"],"synonyms":["resolution SLA failed","missed resolution deadline","resolution time exceeded"],"section":"SLA Management","jql_fields":["Time to resolution","updated"],"notes":"Combines SLA breach detection with current week filtering","jql":"\"Time to resolution\" = breached() AND updated >= startOfWeek()","id":"SLA.1","nlq":"Customer requests that breached Time to resolution SLA this week","query_summary":"Natural query: 'Customer requests that breached Time to resolution SLA this week'. Combines SLA breach function with time filtering to identify recent resolution deadline failures. Purpose: Critical for SLA monitoring and customer satisfaction tracking.","paraphrases":["Which requests failed resolution SLA this week","Show resolution time breaches from this week","List tickets missing resolution SLA recently"],"intents":["sla","breach","time"],"entities":"{\"sla_field\":\"Time to resolution\",\"sla_status\":\"breached\",\"timeframe\":\"this week\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::R.7","fields":{"description":"Detect missing or populated values in any field.","entities_flat":["field:{FIELD}","emptiness:EMPTY | NOT EMPTY"],"section":"R. Small Template Bank","jql_fields":["{FIELD}"],"jql":"{FIELD} IS (NOT) EMPTY","id":"R.7","nlq":"Check if a field is empty or not","query_summary":"Template to check if a field is empty or not empty.","intents":["browse","emptiness"],"entities":"{\"field\":\"{FIELD}\",\"emptiness\":\"EMPTY | NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.6","fields":{"description":"Filter issues by one or more priority values.","entities_flat":["priority:{PRIORITIES...}","operator:{OP}"],"section":"R. Small Template Bank","jql_fields":["priority"],"jql":"priority {OP} {PRIORITIES...}","id":"R.6","nlq":"Filter by priority","query_summary":"Template to filter issues by one or more priority values.","intents":["browse","priority"],"entities":"{\"priority\":\"{PRIORITIES...}\",\"operator\":\"{OP}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.6","fields":{"description":"Excludes specific values from a multi-select custom field.","why":"Helps filter out low-value tiers when focusing only on premium customers.","entities_flat":["Customer Tier:NOT IN (Bronze, Silver)"],"synonyms":["exclude low tier customers","not Bronze or Silver"],"section":"L. Custom Fields","jql_fields":["Customer Tier"],"notes":"NOT IN operator works with multi-value categorical fields to exclude certain options.","jql":"\"Customer Tier\" NOT IN (Bronze, Silver)","id":"L.6","nlq":"Customer Tier not Bronze or Silver","query_summary":"Natural query: 'Customer Tier not Bronze or Silver'. Synonyms: exclude low tier customers, not Bronze or Silver. Paraphrases: 'Show issues where customer tier is not Bronze or Silver', 'List tickets excluding Bronze and Silver customers'. This JQL filters issues where the Customer Tier custom field does not include Bronze or Silver. Field: Customer Tier. Entity: NOT IN (Bronze, Silver). Purpose: Useful for segmenting higher-value work.","paraphrases":["Show issues where customer tier is not Bronze or Silver","List tickets excluding Bronze and Silver customers"],"intents":["browse","customfield","categorical"],"entities":"{\"Customer Tier\":\"NOT IN (Bronze, Silver)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::WATCH.1","fields":{"description":"Popular issues that have stagnated despite community interest","why":"Highlights popular issues needing attention","entities_flat":["watcher_count:15","activity_threshold:30 days"],"synonyms":["stagnant popular issues","inactive watched items"],"section":"Watchers & Engagement","jql_fields":["watchers","updated"],"notes":"Identifies community interest without corresponding activity","jql":"watchers > 15 AND updated <= \"-30d\"","id":"WATCH.1","nlq":"Issues with more than 15 watchers but no recent activity","query_summary":"Natural query: 'Issues with more than 15 watchers but no recent activity'. Community engagement gaps. Purpose: Popular issue prioritization.","paraphrases":["Show popular issues with no recent updates","List watched but inactive items"],"intents":["watchers","activity","stagnation"],"entities":"{\"watcher_count\":\"15\",\"activity_threshold\":\"30 days\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.3","fields":{"description":"SLA met.","why":"Helps teams track requests that successfully met resolution SLA commitments.","entities_flat":["Time to resolution:met()"],"synonyms":["SLA met","resolved within SLA"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["Time to resolution"],"notes":"met() checks if the SLA target was achieved.","jql":"\"Time to resolution\" = met()","id":"M.3","nlq":"Requests resolved within target","query_summary":"Natural query: 'Requests resolved within target'. Synonyms: SLA met, resolved within SLA. Paraphrases: 'Show requests resolved within target', 'List tickets that met the resolution SLA'. This JQL filters issues where 'Time to resolution' SLA was met(). Field: Time to resolution. Entity: met(). Purpose: Useful for SLA compliance reporting.","paraphrases":["Show requests resolved within target","List tickets that met the resolution SLA"],"intents":["browse","sla"],"entities":"{\"Time to resolution\":\"met()\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::S.11","fields":{"description":"Heuristic quality gate.","why":"Checks for missing acceptance criteria in requirements.","entities_flat":["issuetype:Story","issuetype:Task","text:!~ Acceptance Criteria"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["text","issuetype"],"jql":"text !~ \"Acceptance Criteria\" AND issuetype IN (Story, Task)","id":"S.11","nlq":"Items with acceptance criteria missing","query_summary":"Find stories and tasks where 'Acceptance Criteria' phrase is not present.","intents":["browse","textsearch","issuetype"],"entities":"{\"issuetype\":[\"Story\",\"Task\"],\"text\":\"!~ Acceptance Criteria\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SLA_TIME.2","fields":{"description":"Urgent SLA risk detection for current day","why":"Proactive daily SLA risk management for critical items","entities_flat":["priority:High","priority:Critical","sla_remaining:2h","timeframe:today"],"synonyms":["urgent SLA risk today","high-priority SLA deadline today"],"section":"SLA + Time Combinations","jql_fields":["priority","Time to resolution","updated"],"notes":"Combines priority filtering with SLA remaining time and daily boundaries","jql":"priority IN (High, Critical) AND \"Time to resolution\" <= remaining(2h) AND updated >= startOfDay()","id":"SLA_TIME.2","nlq":"High-priority requests close to breaching SLA today","query_summary":"Natural query: 'High-priority requests close to breaching SLA today'. Combines priority, SLA risk, and daily time filtering. Purpose: Daily SLA risk monitoring.","paraphrases":["Show high-priority items at risk of SLA breach today","List urgent requests close to SLA failure today"],"intents":["sla","priority","risk","today"],"entities":"{\"priority\":[\"High\",\"Critical\"],\"sla_remaining\":\"2h\",\"timeframe\":\"today\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::D.6","fields":{"description":"Prefix via wildcard.","why":"Commonly used in projects following commit/PR naming conventions.","entities_flat":["summary:feat:*"],"synonyms":["title prefix feat","subject begins with feat"],"section":"D. Text & Content Search","jql_fields":["summary"],"notes":"Wildcard searches allow prefix matching; use cautiously for performance.","jql":"summary ~ \"feat:*\"","id":"D.6","nlq":"Summary starts with \"feat:\"","query_summary":"Natural query: 'Summary starts with feat:'. Synonyms: title prefix feat, subject begins with feat. Paraphrases: 'Find issues whose summary starts with feat:', 'List tickets with summary prefix feat:'. This JQL filters issues where the summary field starts with feat:. Fields: summary. Entity: feat:*. Purpose: Useful for teams using conventional commit styles.","paraphrases":["Find issues whose summary starts with feat:","List tickets with summary prefix feat:"],"intents":["search","summary"],"entities":"{\"summary\":\"feat:*\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::VOTE.4","fields":{"description":"Project popularity ranking for recent issues","why":"Tracks project-specific community engagement and priorities","entities_flat":["project:ALPHA","timeframe:this quarter","sort:votes DESC"],"synonyms":["popular ALPHA issues","top voted project items"],"section":"Voting & Popularity","jql_fields":["project","votes","created"],"notes":"Combines project filtering with vote-based ranking and time constraints","jql":"project = ALPHA AND votes > 0 AND created >= startOfQuarter() ORDER BY votes DESC","id":"VOTE.4","nlq":"Most voted issues in ALPHA project this quarter","query_summary":"Natural query: 'Most voted issues in ALPHA project this quarter'. Project-specific popularity ranking. Purpose: Community engagement tracking.","paraphrases":["Show most popular ALPHA issues this quarter","List top-voted recent ALPHA items"],"intents":["voting","ranking","project"],"entities":"{\"project\":\"ALPHA\",\"timeframe\":\"this quarter\",\"sort\":\"votes DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.1","fields":{"description":"Triage my bugs.","why":"Helps individual contributors focus on their most recent, highest-priority bugs.","entities_flat":["project:ALPHA","issuetype:Bug","assignee:currentUser()","resolution:EMPTY","updated:>= -24h"],"synonyms":["my active bugs","bugs I own in ALPHA"],"section":"P. Examples Combining Many Concepts","jql_fields":["project","issuetype","assignee","resolution","updated","priority"],"notes":"Combines multiple filters and sorts to narrow focus to urgent bug triage.","jql":"project = ALPHA AND issuetype = Bug AND assignee = currentUser() AND resolution IS EMPTY AND updated >= -24h ORDER BY priority DESC","id":"P.1","nlq":"My open bugs in ALPHA updated in last 24h, sorted by priority","query_summary":"Natural query: 'My open bugs in ALPHA updated in last 24h, sorted by priority'. Synonyms: my active bugs, bugs I own in ALPHA. Paraphrases: 'Show my unresolved bugs in ALPHA updated within 24h, sorted by priority', 'List my open bugs in ALPHA updated in last 24h ordered by severity'. This JQL filters issues in project ALPHA where issuetype = Bug, assignee = currentUser(), resolution is empty, updated in last 24h, and orders by priority descending. Fields: project, issuetype, assignee, resolution, updated, priority. Purpose: Useful for personal triage.","paraphrases":["Show my unresolved bugs in ALPHA updated within 24h, sorted by priority","List my open bugs in ALPHA updated in last 24h ordered by severity"],"intents":["browse","project","issuetype","assignee","status","time","ordering"],"entities":"{\"project\":\"ALPHA\",\"issuetype\":\"Bug\",\"assignee\":\"currentUser()\",\"resolution\":\"EMPTY\",\"updated\":\">= -24h\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::AI.6","fields":{"description":"Find stories linked to specific epic using Epic Link field","why":"Demonstrates correct epic-story linking syntax","entities_flat":["PROJ-123","stories"],"synonyms":["stories","tasks"],"section":"AI. Accuracy Improvements - Epic Relationships","jql_fields":["Epic Link"],"notes":"Use Epic Link field to find stories under an epic","jql":"\"Epic Link\" = PROJ-123","id":"AI.6","nlq":"Stories under epic PROJ-123","query_summary":"Natural query: 'Stories under epic PROJ-123'. Synonyms: stories, tasks. This JQL finds stories under a specific epic. Fields: Epic Link. Entity: PROJ-123.","paraphrases":["Stories in epic PROJ-123","Tasks under epic PROJ-123"],"intents":["filter","epic","relationships"],"entities":"\"{\\\"epic\\\": \\\"PROJ-123\\\"}\"","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.19","fields":{"description":"Regression events.","why":"Tracks regression rate for current month.","entities_flat":["status:CHANGED TO Reopened DURING month"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["status"],"jql":"status CHANGED TO \"Reopened\" DURING (startOfMonth(), endOfMonth())","id":"S.19","nlq":"Reopened issues this month","query_summary":"Show issues reopened within this month.","intents":["browse","status history"],"entities":"{\"status\":\"CHANGED TO Reopened DURING month\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.9","fields":{"description":"Two-level hierarchy: epic → story → subtask.","why":"Useful when teams want the deepest breakdown of an epic’s scope, including subtasks.","entities_flat":["epic:ALPHA-123"],"synonyms":["nested subtasks under epic","all subtasks of stories in epic"],"section":"H. Epics, Parents & Subtasks","jql_fields":["parent","issueFunction"],"notes":"Requires ScriptRunner: issuesInEpics() combined with parent IN clause.","jql":"parent IN (issueFunction IN issuesInEpics(\"key = ALPHA-123\"))","id":"H.9","nlq":"Subtasks of stories under epic ALPHA-123","query_summary":"Natural query: 'Subtasks of stories under epic ALPHA-123'. Synonyms: nested subtasks under epic, all subtasks of stories in epic. Paraphrases: 'Show subtasks of stories in epic ALPHA-123', 'List all child subtasks belonging to epic ALPHA-123'. This JQL (with ScriptRunner) retrieves subtasks whose parent stories belong to epic ALPHA-123. Fields: parent, issueFunction. Entity: ALPHA-123. Purpose: Useful for full epic scope visibility.","paraphrases":["Show subtasks of stories in epic ALPHA-123","List all child subtasks belonging to epic ALPHA-123"],"intents":["browse","epic","subtask","function"],"entities":"{\"epic\":\"ALPHA-123\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.18","fields":{"description":"Past-due items (use endOfDay() if now() unsupported).","why":"Helps individuals track their own overdue work.","entities_flat":["assignee:currentUser()","due:< now()","resolution:EMPTY"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["assignee","due","resolution"],"jql":"assignee = currentUser() AND due < now() AND resolution IS EMPTY","id":"S.18","nlq":"My overdue tasks","query_summary":"List tasks assigned to current user where due date has passed and resolution is empty.","intents":["browse","assignee","due","resolution"],"entities":"{\"assignee\":\"currentUser()\",\"due\":\"< now()\",\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.10","fields":{"description":"Finds issues due in a custom date window.","why":"Allows planning based on a flexible short-term due range.","entities_flat":["due_range:+1d","due_range:+7d"],"synonyms":["upcoming deadlines","issues expiring soon"],"section":"B. Time & Date Filters","jql_fields":["due"],"jql":"due >= startOfDay(+1d) AND due <= endOfDay(+7d)","id":"B.10","nlq":"Issues due between tomorrow and next Friday","query_summary":"Natural query: 'Issues due between tomorrow and next Friday'. Synonyms: upcoming deadlines, issues expiring soon. Paraphrases: 'Show tickets due between tomorrow and Friday', 'List items with deadline in the next week'. This JQL uses due >= startOfDay(+1d) and due <= endOfDay(+7d) to capture a custom range of upcoming deadlines. Purpose: helpful for sprint or release planning.","paraphrases":["Show tickets due between tomorrow and Friday","List items with deadline in the next week"],"intents":["time","due"],"entities":"{\"due_range\":[\"+1d\",\"+7d\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::COMM.2","fields":{"description":"Unresolved bugs with error information in comments","why":"Helps prioritize bugs with concrete error evidence","entities_flat":["issuetype:Bug","comment_content:error codes","status:unresolved"],"synonyms":["error code bugs","unresolved errors","debugging comments"],"section":"Advanced Comments","jql_fields":["issuetype","comment","resolution"],"notes":"Identifies bugs with technical error information that remain unresolved","jql":"issuetype = Bug AND comment ~ \"ERROR|WARN|FATAL\" AND resolution IS EMPTY","id":"COMM.2","nlq":"Bugs with comments containing error codes but no resolution","query_summary":"Natural query: 'Bugs with comments containing error codes but no resolution'. Error tracking. Purpose: Technical issue prioritization.","paraphrases":["Show bugs with error codes still open","List unresolved error discussions"],"intents":["comments","errors","debugging"],"entities":"{\"issuetype\":\"Bug\",\"comment_content\":\"error codes\",\"status\":\"unresolved\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.3","fields":{"description":"Your reported items.","why":"Helps individuals review all items they’ve reported.","entities_flat":["reporter:currentUser()"],"synonyms":["my created issues","tickets I filed"],"section":"J. Users, Groups, Teams","jql_fields":["reporter"],"notes":"Uses currentUser() to dynamically resolve to logged-in user.","jql":"reporter = currentUser()","id":"J.3","nlq":"Created by me","query_summary":"Natural query: 'Created by me'. Synonyms: my created issues, tickets I filed. Paraphrases: 'Show issues I reported', 'List bugs created by me'. This JQL filters issues where reporter equals currentUser(). Field: reporter. Entity: currentUser(). Purpose: Useful for personal ticket tracking.","paraphrases":["Show issues I reported","List bugs created by me"],"intents":["browse","reporter"],"entities":"{\"reporter\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TM.2","fields":{"description":"Filter stories reported by design team members","why":"Team contribution tracking and story ownership.","entities_flat":["issuetype:Story","reporter:membersOf(designers)"],"synonyms":["design team stories","designer stories"],"section":"E. Team and Group Management","jql_fields":["issuetype","reporter"],"notes":"reporter IN membersOf tracks story originators by team","jql":"issuetype = Story AND reporter IN membersOf(\"designers\")","id":"TM.2","nlq":"Stories created by Designers team","query_summary":"Natural query: 'Stories created by Designers team'. Filters stories created by any member of the designers team group.","paraphrases":["Show stories from design team","List designer-created stories"],"intents":["browse","team","reporter"],"entities":"{\"issuetype\":\"Story\",\"reporter\":\"membersOf(designers)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.5","fields":{"description":"Jira Software ranking.","why":"Preserves manual ranking order used in Agile boards.","entities_flat":["Rank:ASC"],"synonyms":["backlog rank","board order"],"section":"F. Sorting & Ordering","jql_fields":["Rank"],"notes":"Rank is an Agile field in Jira Software used for backlog and sprint ordering.","jql":"ORDER BY Rank ASC","id":"F.5","nlq":"Rank order (board backlog)","query_summary":"Natural query: 'Rank order (board backlog)'. Synonyms: backlog rank, board order. Paraphrases: 'Show issues by rank order', 'List backlog in board priority order'. This JQL sorts issues by Rank in ascending order. Field: Rank. Entity: ASC. Purpose: Useful for reflecting Agile board ordering.","paraphrases":["Show issues by rank order","List backlog in board priority order"],"intents":["sort","rank"],"entities":"{\"Rank\":\"ASC\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.27","fields":{"description":"Board rank sorting (GreenHopper/Agile).","why":"Lets teams pull the top of backlog or sprint board.","entities_flat":["project:ALPHA","issuetype:Story","resolution:EMPTY","order:Rank ASC"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["project","issuetype","resolution","Rank"],"jql":"project = ALPHA AND issuetype = Story AND resolution IS EMPTY ORDER BY Rank ASC","id":"S.27","nlq":"Top-ranked open stories on board ALPHA","query_summary":"Show unresolved stories in ALPHA project ordered by board rank.","intents":["browse","project","issuetype","resolution","ordering"],"entities":"{\"project\":\"ALPHA\",\"issuetype\":\"Story\",\"resolution\":\"EMPTY\",\"order\":\"Rank ASC\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::CUSTOMER_SLA.2","fields":{"description":"Organization-specific acknowledgment SLA breach tracking","why":"Customer-specific acknowledgment SLA tracking","entities_flat":["organization:Acme Corp","sla_field:Time to acknowledge","sla_status:breached"],"synonyms":["Acme acknowledgment SLA failures","organization acknowledge breaches"],"section":"Customer + SLA Combinations","jql_fields":["organizations","Time to acknowledge"],"notes":"Organization-specific acknowledgment SLA performance monitoring","jql":"organizations = \"Acme Corp\" AND \"Time to acknowledge\" = breached()","id":"CUSTOMER_SLA.2","nlq":"Acme Corp tickets with Time to acknowledge SLA breached","query_summary":"Natural query: 'Acme Corp tickets with Time to acknowledge SLA breached'. Organization acknowledgment SLA monitoring. Purpose: Customer-specific SLA performance.","paraphrases":["Show Acme Corp acknowledgment SLA breaches","List Acme tickets with failed acknowledge SLA"],"intents":["organization","sla","acknowledge","breach"],"entities":"{\"organization\":\"Acme Corp\",\"sla_field\":\"Time to acknowledge\",\"sla_status\":\"breached\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::L.3","fields":{"description":"Using custom field id.","why":"Useful when custom fields are referenced by ID instead of display name.","entities_flat":["cf[12345]:APAC"],"synonyms":["region APAC","APAC-specific issues"],"section":"L. Custom Fields","jql_fields":["cf[12345]"],"notes":"cf[12345] refers to custom field id; names may differ across instances.","jql":"cf[12345] = APAC","id":"L.3","nlq":"Region equals APAC","query_summary":"Natural query: 'Region equals APAC'. Synonyms: region APAC, APAC-specific issues. Paraphrases: 'Show tickets where region is APAC', 'List issues tagged with APAC region'. This JQL filters issues where custom field cf[12345] equals APAC. Field: cf[12345]. Entity: APAC. Purpose: Useful for region-based reporting or routing.","paraphrases":["Show tickets where region is APAC","List issues tagged with APAC region"],"intents":["browse","customfield"],"entities":"{\"cf[12345]\":\"APAC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::STATUS_TIME.1","fields":{"description":"Bug status regression tracking within current week","why":"Quality tracking via status regression monitoring","entities_flat":["issuetype:Bug","from_status:In Progress","to_status:Reopened","timeframe:this week"],"synonyms":["bug regressions this week","reopened bugs this week"],"section":"Status Transitions + Time","jql_fields":["issuetype","status"],"notes":"Tracks quality regressions by monitoring status changes within weekly boundaries","jql":"issuetype = Bug AND status CHANGED FROM \"In Progress\" TO \"Reopened\" DURING (startOfWeek(), now())","id":"STATUS_TIME.1","nlq":"Bugs changed from In Progress to Reopened this week","query_summary":"Natural query: 'Bugs changed from In Progress to Reopened this week'. Weekly status regression tracking. Purpose: Quality regression monitoring.","paraphrases":["Show bugs that regressed this week","List bugs reopened from In Progress this week"],"intents":["status","transition","regression","weekly"],"entities":"{\"issuetype\":\"Bug\",\"from_status\":\"In Progress\",\"to_status\":\"Reopened\",\"timeframe\":\"this week\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::AI.5","fields":{"description":"Correct epic-story relationship check using Epic Link field","why":"Fixes common error of using wrong function for epic relationships","entities_flat":["Epic","stories"],"synonyms":["epics","stories"],"section":"AI. Accuracy Improvements - Epic Relationships","jql_fields":["issuetype","Epic Link"],"notes":"CRITICAL: Use 'Epic Link' field, NOT hasSubtasks() for epic-story relationships","jql":"issuetype = Epic AND \"Epic Link\" IS EMPTY","id":"AI.5","nlq":"Epics without any linked stories","query_summary":"Natural query: 'Epics without any linked stories'. Synonyms: epics, stories. This JQL checks epic-story relationships correctly. Fields: issuetype, Epic Link. Entity: Epic.","paraphrases":["Epics with no stories","Empty epics","Unlinked epics"],"intents":["filter","epic","relationships"],"entities":"\"{\\\"issuetype\\\": \\\"Epic\\\"}\"","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::E.10","fields":{"description":"Excludes specific version.","why":"Helps focus on work not tied to a particular version.","entities_flat":["fixVersion:NOT IN (2.0)"],"synonyms":["exclude version 2.0","not scheduled for 2.0"],"section":"E. Versions, Components, Labels","jql_fields":["fixVersion"],"jql":"fixVersion NOT IN (\"2.0\")","id":"E.10","nlq":"Issues not in version 2.0","query_summary":"Natural query: 'Issues not in version 2.0'. Synonyms: exclude version 2.0, not scheduled for 2.0. Paraphrases: 'Show issues not in fix version 2.0', 'List tickets outside release 2.0'. This JQL filters issues where fixVersion is NOT IN (2.0). Fields: fixVersion. Purpose: Useful for filtering backlog outside a given release.","paraphrases":["Show issues not in fix version 2.0","List tickets outside release 2.0"],"intents":["browse","fixVersion"],"entities":"{\"fixVersion\":\"NOT IN (2.0)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.13","fields":{"description":"Requires Issue Security scheme.","why":"Filters issues by security level, restricting visibility to certain groups.","entities_flat":["level:Critical"],"synonyms":["critical security","confidential level"],"section":"C. Logical Combinations & Set Ops","jql_fields":["level"],"notes":"Requires Issue Security scheme to be configured in the project.","jql":"level = Critical","id":"C.13","nlq":"Security level is Critical","query_summary":"Natural query: 'Security level is Critical'. Synonyms: critical security, confidential level. Paraphrases: 'List issues with Critical security level', 'Show tickets at Critical confidentiality'. This JQL filters issues where the security level equals Critical. Fields involved: level. Entity value: Critical. Purpose: Used to enforce restricted visibility and handle sensitive issues.","paraphrases":["List issues with Critical security level","Show tickets at Critical confidentiality"],"intents":["browse","security"],"entities":"{\"level\":\"Critical\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.2","fields":{"description":"Filter issues in a set of projects.","entities_flat":["project:{PROJECTS...}"],"section":"R. Small Template Bank","jql_fields":["project"],"jql":"project IN ({PROJECTS...})","id":"R.2","nlq":"Filter by multiple projects","query_summary":"Template to filter issues by multiple project keys.","intents":["browse","project"],"entities":"{\"project\":\"{PROJECTS...}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.10","fields":{"description":"Sorting by fields, ascending or descending.","entities_flat":["field:{FIELD}","direction:{ASC|DESC}"],"section":"R. Small Template Bank","jql_fields":["{FIELD}"],"jql":"ORDER BY {FIELD} {ASC|DESC}","id":"R.10","nlq":"Order results by a field","query_summary":"Template to order query results by a field in ascending or descending order.","intents":["ordering"],"entities":"{\"field\":\"{FIELD}\",\"direction\":\"{ASC|DESC}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SLA.2","fields":{"description":"Customer-specific SLA breach tracking for first response times","why":"Enables customer-specific SLA performance tracking","entities_flat":["organization:Acme Corp","sla_field:Time to first response","sla_status:breached"],"synonyms":["first response SLA failed for Acme","Acme response time breached"],"section":"SLA Management","jql_fields":["organizations","Time to first response"],"notes":"Organization-specific SLA breach monitoring for first response metrics","jql":"organizations = \"Acme Corp\" AND \"Time to first response\" = breached()","id":"SLA.2","nlq":"Tickets from Acme Corp where Time to first response was missed","query_summary":"Natural query: 'Tickets from Acme Corp where Time to first response was missed'. Filters by organization and SLA breach status. Purpose: Customer-specific SLA performance monitoring.","paraphrases":["Show Acme Corp tickets with missed response SLA","List Acme requests where first response failed"],"intents":["sla","customer","breach"],"entities":"{\"organization\":\"Acme Corp\",\"sla_field\":\"Time to first response\",\"sla_status\":\"breached\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::P.11","fields":{"description":"Requires ScriptRunner. Mix of epics, release, and child status.","why":"Ensures planned release epics don’t ship with unfinished children.","entities_flat":["issuetype:Epic","fixVersion:releasedVersions()","fixVersionReleaseDate:>= startOfMonth()","issueFunction:epicsOf()","statusCategory:!= Done"],"synonyms":["epics in release with unfinished work","release epics not done"],"section":"P. Examples Combining Many Concepts","jql_fields":["issuetype","fixVersion","fixVersionReleaseDate","issueFunction"],"notes":"Great for release readiness dashboards.","jql":"issuetype = Epic AND fixVersion IN releasedVersions() AND fixVersionReleaseDate >= startOfMonth() AND issueFunction IN epicsOf(\"statusCategory != Done\")","id":"P.11","nlq":"Epics planned for release this month with unresolved children","query_summary":"Natural query: 'Epics planned for release this month with unresolved children'. Synonyms: epics in release with unfinished work, release epics not done. Paraphrases: 'Show epics tied to this month’s releases with open children', 'List release-bound epics containing unresolved stories'. This JQL requires ScriptRunner and blends fixVersion dates with epicsOf(child filters).","paraphrases":["Show epics tied to this month’s releases with open children","List release-bound epics containing unresolved stories"],"intents":["browse","epic","release","status"],"entities":"{\"issuetype\":\"Epic\",\"fixVersion\":\"releasedVersions()\",\"fixVersionReleaseDate\":\">= startOfMonth()\",\"issueFunction\":\"epicsOf()\",\"statusCategory\":\"!= Done\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::F.3","fields":{"description":"Severity sort.","why":"Ensures urgent or critical issues are reviewed first.","entities_flat":["priority:DESC"],"synonyms":["sort by severity","urgent first"],"section":"F. Sorting & Ordering","jql_fields":["priority"],"notes":"Ordering by priority depends on priority scheme ordering in Jira instance.","jql":"ORDER BY priority DESC","id":"F.3","nlq":"Highest priority first","query_summary":"Natural query: 'Highest priority first'. Synonyms: sort by severity, urgent first. Paraphrases: 'List highest priority issues first', 'Sort tickets by severity descending'. This JQL sorts issues by priority in descending order. Field: priority. Entity: DESC. Purpose: Useful for triaging and focusing on most critical issues.","paraphrases":["List highest priority issues first","Sort tickets by severity descending"],"intents":["sort","priority"],"entities":"{\"priority\":\"DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::I.1","fields":{"description":"Any link type; Issue Linking must be enabled.","why":"Fetches all issues connected to a given issue regardless of link type.","entities_flat":["linkedIssue:ALPHA-1"],"synonyms":["related to ALPHA-1","associated with ALPHA-1"],"section":"I. Linking & Dependencies","jql_fields":["issueLink"],"notes":"linkedIssues() works for any link type, as long as issue linking is enabled in Jira instance.","jql":"issue IN linkedIssues(ALPHA-1)","id":"I.1","nlq":"Issues linked to ALPHA-1","query_summary":"Natural query: 'Issues linked to ALPHA-1'. Synonyms: related to ALPHA-1, associated with ALPHA-1. Paraphrases: 'Show issues linked to ALPHA-1', 'List related tickets of ALPHA-1'. This JQL retrieves all issues linked to ALPHA-1 via linkedIssues(). Fields: issueLink. Entity: ALPHA-1. Purpose: Useful for dependency analysis or reviewing related issues.","paraphrases":["Show issues linked to ALPHA-1","List related tickets of ALPHA-1"],"intents":["browse","linkedIssues"],"entities":"{\"linkedIssue\":\"ALPHA-1\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.14","fields":{"description":"Quote all field values including priority levels","why":"Shows correct quoting for both issuetype and priority fields","entities_flat":["High","Bug","priority"],"synonyms":["critical","urgent","important"],"section":"AI. Accuracy Improvements - Priority Quoting","jql_fields":["issuetype","priority"],"notes":"CRITICAL: All field values need quotes: priority = \"High\" not priority = High","jql":"issuetype = \"Bug\" AND priority = \"High\"","id":"AI.14","nlq":"High priority bugs","query_summary":"Natural query: 'High priority bugs'. Shows proper quoting for priority and issuetype fields. Fields: issuetype, priority. Entity: High, Bug.","paraphrases":["Urgent bugs","Critical defects"],"intents":["priority","bugs"],"entities":"\"{\\\"priority\\\": \\\"High\\\", \\\"issuetype\\\": \\\"Bug\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.2","fields":{"description":"Ascending create time.","why":"Helps surface stale or long-pending backlog items.","entities_flat":["created:ASC"],"synonyms":["earliest issues first","oldest tickets first"],"section":"F. Sorting & Ordering","jql_fields":["created"],"notes":"ASC means ascending order, oldest items appear first.","jql":"ORDER BY created ASC","id":"F.2","nlq":"Oldest first","query_summary":"Natural query: 'Oldest first'. Synonyms: earliest issues first, oldest tickets first. Paraphrases: 'Sort issues by oldest created first', 'List earliest tickets'. This JQL sorts issues by created field in ascending order. Field: created. Entity: ASC. Purpose: Useful for identifying oldest unresolved tickets.","paraphrases":["Sort issues by oldest created first","List earliest tickets"],"intents":["sort","created"],"entities":"{\"created\":\"ASC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.12","fields":{"description":"No label set.","why":"Helps identify items lacking categorization.","entities_flat":["labels:EMPTY"],"synonyms":["unlabeled","no tags"],"section":"E. Versions, Components, Labels","jql_fields":["labels"],"jql":"labels IS EMPTY","id":"E.12","nlq":"Issues without any labels","query_summary":"Natural query: 'Issues without any labels'. Synonyms: unlabeled, no tags. Paraphrases: 'Show issues with no labels', 'List tickets missing tags'. This JQL filters issues where labels field is empty. Fields: labels. Entity: EMPTY. Purpose: Useful for tagging hygiene and backlog organization.","paraphrases":["Show issues with no labels","List tickets missing tags"],"intents":["browse","labels"],"entities":"{\"labels\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::PERF.2","fields":{"description":"Sprint scope items completed outside sprint boundaries","why":"Measures sprint planning effectiveness and scope control","entities_flat":["sprint_status:closed","completion_timing:after end"],"synonyms":["post-sprint completion","overrun items","late deliveries"],"section":"Performance Analysis","jql_fields":["sprint","resolved"],"notes":"Tracks sprint planning accuracy and scope management","jql":"sprint IN closedSprints() AND resolved > sprint.endDate","id":"PERF.2","nlq":"Sprint items completed after sprint end date","query_summary":"Natural query: 'Sprint items completed after sprint end date'. Sprint performance tracking. Purpose: Planning accuracy assessment.","paraphrases":["Show items finished after sprint ended","List post-sprint completions"],"intents":["performance","sprint","timing"],"entities":"{\"sprint_status\":\"closed\",\"completion_timing\":\"after end\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::TEXT.1","fields":{"description":"Verbose issue descriptions indicating detailed requirements","why":"Identifies issues with comprehensive documentation","entities_flat":["field:description","length:1000 characters"],"synonyms":["verbose descriptions","detailed requirements","long explanations"],"section":"Advanced Text Search","jql_fields":["description.length"],"notes":"Uses text length property to identify detailed documentation","jql":"description.length > 1000","id":"TEXT.1","nlq":"Issues with descriptions longer than 1000 characters","query_summary":"Natural query: 'Issues with descriptions longer than 1000 characters'. Text length analysis. Purpose: Documentation detail assessment.","paraphrases":["Show issues with detailed descriptions","List verbose requirement descriptions"],"intents":["text","length","detail"],"entities":"{\"field\":\"description\",\"length\":\"1000 characters\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.6","fields":{"description":"QA-raised severe defects.","why":"Helps track serious defects raised by QA within a timeframe.","entities_flat":["reporter:membersOf(qa)","created:>= startOfMonth()","priority:High","priority:Critical"],"synonyms":["QA severe defects","critical QA issues"],"section":"P. Examples Combining Many Concepts","jql_fields":["reporter","created","priority"],"notes":"Filters by QA group membership and severity.","jql":"reporter IN membersOf(\"qa\") AND created >= startOfMonth() AND priority IN (High, Critical)","id":"P.6","nlq":"Created by QA team this month, priority >= High","query_summary":"Natural query: 'Created by QA team this month, priority >= High'. Synonyms: QA severe defects, critical QA issues. Paraphrases: 'Show high-priority issues created by QA this month', 'List critical bugs raised by QA team this month'. This JQL filters issues reported by QA group, created since start of month, with priority High or Critical. Fields: reporter, created, priority. Entities: QA group, >= startOfMonth(), High, Critical. Purpose: Useful for QA defect management.","paraphrases":["Show high-priority issues created by QA this month","List critical bugs raised by QA team this month"],"intents":["browse","reporter","priority","created"],"entities":"{\"reporter\":\"membersOf(qa)\",\"created\":\">= startOfMonth()\",\"priority\":[\"High\",\"Critical\"]}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::R.9","fields":{"description":"Date functions like startOfWeek(-1), endOfMonth(), -7d can be used with operators.","entities_flat":["datefield:{DATEFIELD}","operator:{OP}","datefunc:{DATEFUNC}"],"section":"R. Small Template Bank","jql_fields":["{DATEFIELD}"],"jql":"{DATEFIELD} {OP} {DATEFUNC}","id":"R.9","nlq":"Date field comparison","query_summary":"Template for comparing dates using functions like startOfWeek(-1), endOfMonth(), or relative offsets like -7d.","intents":["browse","date"],"entities":"{\"datefield\":\"{DATEFIELD}\",\"operator\":\"{OP}\",\"datefunc\":\"{DATEFUNC}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::I.4","fields":{"description":"Downstream dependency for a specific issue.","why":"Teams often need to see what’s preventing progress on a ticket.","entities_flat":["linkedIssue:ALPHA-2","linkType:is blocked by"],"synonyms":["upstream blockers for ALPHA-2","tasks blocking ALPHA-2"],"section":"I. Linking & Dependencies","jql_fields":["issueLink"],"notes":"Distinguishes inbound blocking vs outbound blocking.","jql":"issue IN linkedIssues(ALPHA-2, \"is blocked by\")","id":"I.4","nlq":"Issues that ALPHA-2 is blocked by","query_summary":"Natural query: 'Issues that ALPHA-2 is blocked by'. Synonyms: upstream blockers for ALPHA-2, tasks blocking ALPHA-2. Paraphrases: 'List issues that ALPHA-2 is blocked by', 'Show dependencies preventing ALPHA-2'. This JQL finds issues linked to ALPHA-2 with link type 'is blocked by'. Field: issueLink. Entities: ALPHA-2, is blocked by. Purpose: Useful for identifying blockers upstream of a ticket.","paraphrases":["List issues that ALPHA-2 is blocked by","Show dependencies preventing ALPHA-2"],"intents":["browse","linkedIssues","dependencies"],"entities":"{\"linkedIssue\":\"ALPHA-2\",\"linkType\":\"is blocked by\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.9","fields":{"description":"Membership in multiple sprints by ID.","why":"Helps compare or merge results across multiple sprint scopes.","entities_flat":["sprint:42","sprint:43"],"synonyms":["tickets in sprint 42 or 43","items from two sprints"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint"],"notes":"Explicit sprint IDs allow checking multiple iterations together.","jql":"sprint IN (42, 43)","id":"G.9","nlq":"Issues in sprints 42 or 43","query_summary":"Natural query: 'Issues in sprints 42 or 43'. Synonyms: tickets in sprint 42 or 43, items from two sprints. Paraphrases: 'Show issues in sprint 42 or sprint 43', 'List tickets belonging to 42 and 43'. This JQL filters issues where sprint equals 42 or 43. Field: sprint. Entities: 42, 43. Purpose: Useful for multi-sprint reporting.","paraphrases":["Show issues in sprint 42 or sprint 43","List tickets belonging to 42 and 43"],"intents":["browse","sprint"],"entities":"{\"sprint\":[\"42\",\"43\"]}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::L.7","fields":{"description":"Custom date field comparison.","why":"Useful for tracking deadlines or milestones scheduled in the current month.","entities_flat":["Go Live Date:<= endOfMonth()"],"synonyms":["deadline before month end","go live this month"],"section":"L. Custom Fields","jql_fields":["Go Live Date"],"notes":"Custom date fields can use relative functions like endOfMonth() for deadline checks.","jql":"\"Go Live Date\" <= endOfMonth()","id":"L.7","nlq":"Go Live Date before end of month","query_summary":"Natural query: 'Go Live Date before end of month'. Synonyms: deadline before month end, go live this month. Paraphrases: 'Show issues where Go Live Date is before end of this month', 'List tickets with go live scheduled this month'. This JQL filters issues where the custom field Go Live Date is less than or equal to endOfMonth(). Field: Go Live Date. Entity: <= endOfMonth(). Purpose: Useful for milestone and deadline management.","paraphrases":["Show issues where Go Live Date is before end of this month","List tickets with go live scheduled this month"],"intents":["browse","customfield","date"],"entities":"{\"Go Live Date\":\"<= endOfMonth()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.5","fields":{"description":"Negative membership + emptiness.","why":"Find issues lacking component assignment and labels simultaneously.","entities_flat":["component:NOT IN (Backend)","labels:EMPTY"],"synonyms":["missing backend component and labels"],"section":"C. Logical Combinations & Set Ops","jql_fields":["component","labels"],"notes":"Combines NOT IN with IS EMPTY for multiple fields.","jql":"component NOT IN (Backend) AND labels IS EMPTY","id":"C.5","nlq":"Without Backend component and without labels","query_summary":"Natural query: 'Without Backend component and without labels'. Synonyms: missing backend component and labels. Paraphrases: 'List issues without Backend component and labels', 'Tickets not in Backend and unlabeled'. This JQL filters issues where the component is not Backend and labels field is empty. Fields involved: component, labels. Entities: NOT IN Backend, EMPTY. Purpose: Useful for cleanup and data hygiene.","paraphrases":["List issues without Backend component and labels","Tickets not in Backend and unlabeled"],"intents":["browse","component","labels"],"entities":"{\"component\":\"NOT IN (Backend)\",\"labels\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.10","fields":{"description":"Search inside custom field (Environment).","why":"Covers searching inside custom fields, not just summary/description.","entities_flat":["Environment:~ staging"],"synonyms":["env contains staging","staging environment"],"section":"D. Text & Content Search","jql_fields":["Environment"],"jql":"Environment ~ \"staging\"","id":"D.10","nlq":"Environment field mentions staging","query_summary":"Natural query: 'Environment field mentions staging'. Synonyms: env contains staging, staging environment. Paraphrases: 'Find issues where Environment is staging', 'Show tickets mentioning staging in environment field'. This JQL filters issues where custom field Environment contains staging. Fields: Environment. Purpose: Useful for environment-specific tracking.","paraphrases":["Find issues where Environment is staging","Show tickets mentioning staging in environment field"],"intents":["search","custom field"],"entities":"{\"Environment\":\"~ staging\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.5","fields":{"description":"Numeric threshold.","why":"Helps monitor SLA adherence by uptime percentage.","entities_flat":["Uptime %:< 99.9"],"synonyms":["uptime below SLA","downtime issues"],"section":"L. Custom Fields","jql_fields":["Uptime %"],"notes":"Numeric custom fields can use comparison operators like <, <=, >, >=.","jql":"\"Uptime %\" < 99.9","id":"L.5","nlq":"Uptime < 99.9","query_summary":"Natural query: 'Uptime < 99.9'. Synonyms: uptime below SLA, downtime issues. Paraphrases: 'Show issues with uptime less than 99.9%', 'List tickets where uptime dropped below SLA'. This JQL filters issues where Uptime % is below 99.9. Field: Uptime %. Entity: < 99.9. Purpose: Useful for SLA and service reliability monitoring.","paraphrases":["Show issues with uptime less than 99.9%","List tickets where uptime dropped below SLA"],"intents":["browse","customfield","numeric"],"entities":"{\"Uptime %\":\"< 99.9\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TRANS.2","fields":{"description":"Cross-team task reassignments for workflow analysis","why":"Analyzes team collaboration and workflow efficiency","entities_flat":["issuetype:Task","from_team:QA","to_team:Development","timeframe:last month"],"synonyms":["team handoffs","cross-team transfers","workflow reassignments"],"section":"Status Transitions","jql_fields":["issuetype","assignee"],"notes":"Tracks inter-team workflows and handoff patterns","jql":"issuetype = Task AND assignee CHANGED FROM membersOf(\"qa-team\") TO membersOf(\"dev-team\") DURING (startOfMonth(-1), startOfMonth())","id":"TRANS.2","nlq":"Tasks reassigned from QA team to Development team last month","query_summary":"Natural query: 'Tasks reassigned from QA team to Development team last month'. Team workflow analysis. Purpose: Inter-team collaboration tracking.","paraphrases":["Show tasks moved from QA to Dev last month","List QA→Dev reassignments"],"intents":["reassignment","team","workflow"],"entities":"{\"issuetype\":\"Task\",\"from_team\":\"QA\",\"to_team\":\"Development\",\"timeframe\":\"last month\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::A.17","fields":{"description":"Issues targeted for a specific release.","why":"Useful for tracking items planned for a specific release.","entities_flat":["fixVersion:1.2.0"],"synonyms":["release","milestone","target version"],"section":"A. Basic Filters","jql_fields":["fixVersion"],"notes":"FixVersion values are release artifacts; ensure '1.2.0' exists in the project.","jql":"fixVersion = \"1.2.0\"","id":"A.17","nlq":"In Fix Version 1.2.0","query_summary":"Natural query: 'In Fix Version 1.2.0'. Synonyms: release, milestone, target version. Paraphrases: 'Show issues fixed in version 1.2.0', 'Tickets under fix version 1.2.0', 'Issues targeted for 1.2.0 release'. This JQL filters issues where the fixVersion equals 1.2.0. Fields involved: fixVersion. Entity value: 1.2.0. Purpose: Helps manage release scope and tracking.","paraphrases":["Show issues fixed in version 1.2.0","Tickets under fix version 1.2.0","Issues targeted for 1.2.0 release"],"intents":["browse","fixVersion"],"entities":"{\"fixVersion\":\"1.2.0\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.7","fields":{"description":"Known impacted version.","why":"Identify issues where affected product version has been recorded.","entities_flat":["affectedVersion:NOT EMPTY"],"synonyms":["has affected version","impacted version set"],"section":"E. Versions, Components, Labels","jql_fields":["affectedVersion"],"notes":"affectedVersion IS NOT EMPTY means the issue has an impacted version linked.","jql":"affectedVersion IS NOT EMPTY","id":"E.7","nlq":"Affects version is not empty","query_summary":"Natural query: 'Affects version is not empty'. Synonyms: has affected version, impacted version set. Paraphrases: 'List issues with affected version', 'Show tickets that specify impacted version'. This JQL filters issues where affectedVersion field is not empty. Fields: affectedVersion. Entity: NOT EMPTY. Purpose: Useful for tracking regression or compatibility issues.","paraphrases":["List issues with affected version","Show tickets that specify impacted version"],"intents":["browse","affectedVersion"],"entities":"{\"affectedVersion\":\"NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SC.2","fields":{"description":"Find repeatedly regressed bugs","why":"Quality analysis and chronic issue identification.","entities_flat":["issuetype:Bug","status:Reopened","reopenCount:> 1","time:startOfMonth()"],"synonyms":["repeatedly reopened bugs","chronic regression issues"],"section":"O. Status Change Frequency and Advanced Transitions","jql_fields":["issuetype","status","reopenCount"],"notes":"Requires app/property that tracks reopen count","jql":"issuetype = Bug AND status CHANGED TO \"Reopened\" DURING (startOfMonth(), now()) AND reopenCount > 1","id":"SC.2","nlq":"Bugs that were reopened more than once this month","query_summary":"Natural query: 'Bugs that were reopened more than once this month'. Identifies recurring quality problems.","paraphrases":["Show bugs reopened multiple times","Find recurring quality issues"],"intents":["browse","status","quality"],"entities":"{\"issuetype\":\"Bug\",\"status\":\"Reopened\",\"reopenCount\":\"> 1\",\"time\":\"startOfMonth()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.22","fields":{"description":"Requires property or app that tracks counts; otherwise use API-side post-filter.","why":"Surfaces highly discussed issues.","entities_flat":["commentCount:> 20"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["comment","issueproperty"],"jql":"comment ~ \"*\" AND issueproperty[commentCount] > 20","id":"S.22","nlq":"Items with more than 20 comments","query_summary":"Find issues with comment count greater than 20 (requires plugin or API property).","intents":["browse","comment","properties"],"entities":"{\"commentCount\":\"> 20\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.19","fields":{"description":"Anything with a resolution value.","why":"Captures issues that have a resolution value, regardless of status label.","entities_flat":["resolution:NOT EMPTY"],"synonyms":["closed issues","finished tasks","completed tickets"],"section":"A. Basic Filters","jql_fields":["resolution"],"notes":"resolution IS NOT EMPTY is the canonical way to test for resolved items.","jql":"resolution IS NOT EMPTY","id":"A.19","nlq":"Resolved issues","query_summary":"Natural query: 'Resolved issues'. Synonyms: closed issues, finished tasks, completed tickets. Paraphrases: 'List all resolved issues', 'Show completed bugs', 'Tickets with resolution set'. This JQL filters issues where the resolution is not empty. Fields involved: resolution. Entity value: NOT EMPTY. Purpose: Used for identifying tickets that have been closed with a defined resolution.","paraphrases":["List all resolved issues","Show completed bugs","Tickets with resolution set"],"intents":["browse","status"],"entities":"{\"resolution\":\"NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.3","fields":{"description":"Not scheduled.","why":"Identify issues not tied to any release version for grooming.","entities_flat":["fixVersion:EMPTY"],"synonyms":["no fix version","unscheduled issues"],"section":"E. Versions, Components, Labels","jql_fields":["fixVersion"],"notes":"fixVersion IS EMPTY indicates backlog items not mapped to a release.","jql":"fixVersion IS EMPTY","id":"E.3","nlq":"Missing Fix Version","query_summary":"Natural query: 'Missing Fix Version'. Synonyms: no fix version, unscheduled issues. Paraphrases: 'Show issues without fix version', 'List tickets not scheduled in a release'. This JQL filters issues where fixVersion is empty. Fields: fixVersion. Entity: EMPTY. Purpose: Useful for backlog refinement and release scope validation.","paraphrases":["Show issues without fix version","List tickets not scheduled in a release"],"intents":["browse","fixVersion"],"entities":"{\"fixVersion\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.11","fields":{"description":"Multi-component assignment.","why":"Finds issues shared between multiple subsystems.","entities_flat":["component:Backend","component:API"],"synonyms":["multi-component issues","Backend + API tickets"],"section":"E. Versions, Components, Labels","jql_fields":["component"],"jql":"component IN (Backend, API)","id":"E.11","nlq":"Issues with multiple components Backend and API","query_summary":"Natural query: 'Issues with multiple components Backend and API'. Synonyms: multi-component issues, Backend + API tickets. Paraphrases: 'Show issues assigned to Backend and API components', 'List tickets spanning Backend and API'. This JQL filters issues where component includes Backend and API. Fields: component. Entities: Backend, API. Purpose: Useful for tracking cross-team issues.","paraphrases":["Show issues assigned to Backend and API components","List tickets spanning Backend and API"],"intents":["browse","component"],"entities":"{\"component\":[\"Backend\",\"API\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.6","fields":{"description":"Missing due date.","why":"Helps detect items without deadlines for better planning.","entities_flat":["due:EMPTY"],"synonyms":["no due date","missing deadline","undated"],"section":"B. Time & Date Filters","jql_fields":["due"],"notes":"due IS EMPTY is the canonical way to find issues without due date.","jql":"due IS EMPTY","id":"B.6","nlq":"Due is empty","query_summary":"Natural query: 'Due is empty'. Synonyms: no due date, missing deadline, undated. Paraphrases: 'List issues without due dates', 'Show tickets missing deadlines', 'Items without due'. This JQL filters issues where the due field is empty. Fields involved: due. Entity value: EMPTY. Purpose: Useful for finding tasks missing target completion dates.","paraphrases":["List issues without due dates","Show tickets missing deadlines","Items without due"],"intents":["time","due"],"entities":"{\"due\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.1","fields":{"description":"Fuzzy/contains match on summary.","why":"Helps find issues where the summary field references a keyword, often used in bug tracking.","entities_flat":["summary:~ timeout"],"synonyms":["title includes timeout","subject contains timeout"],"section":"D. Text & Content Search","jql_fields":["summary"],"notes":"~ operator is used for contains/fuzzy match in text fields.","jql":"summary ~ \"timeout\"","id":"D.1","nlq":"Summary contains \"timeout\"","query_summary":"Natural query: 'Summary contains timeout'. Synonyms: title includes timeout, subject contains timeout. Paraphrases: 'Find issues with timeout in summary', 'List tickets whose title has timeout'. This JQL filters issues where the summary field contains the word timeout. Fields: summary. Entity: ~ timeout. Purpose: Useful for quickly locating issues by title keyword.","paraphrases":["Find issues with 'timeout' in summary","List tickets whose title has timeout"],"intents":["search","summary"],"entities":"{\"summary\":\"~ timeout\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.7","fields":{"description":"Resolution date in current month.","why":"Captures all items resolved during the current month.","entities_flat":["resolved:>= startOfMonth()"],"synonyms":["closed this month","finished this month","completed this month"],"section":"B. Time & Date Filters","jql_fields":["resolved"],"notes":"startOfMonth() resets on first day of current calendar month.","jql":"resolved >= startOfMonth()","id":"B.7","nlq":"Resolved this month","query_summary":"Natural query: 'Resolved this month'. Synonyms: closed this month, finished this month, completed this month. Paraphrases: 'List issues resolved in current month', 'Show tickets closed this month', 'Items finished this month'. This JQL filters issues where the resolved field is greater than or equal to the start of this month. Fields involved: resolved. Entity value: startOfMonth(). Purpose: Useful for monthly resolution metrics.","paraphrases":["List issues resolved in current month","Show tickets closed this month","Items finished this month"],"intents":["time","resolved"],"entities":"{\"resolved\":\">= startOfMonth()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.2","fields":{"description":"Multi-filter conjunction.","why":"Narrow down to critical bugs in a specific project for triage.","entities_flat":["project:ALPHA","issuetype:Bug","priority:High"],"synonyms":["urgent bugs in ALPHA","high severity issues in ALPHA"],"section":"C. Logical Combinations & Set Ops","jql_fields":["project","issuetype","priority"],"notes":"Combines three filters with AND for project, issuetype, and priority.","jql":"project = ALPHA AND issuetype = Bug AND priority = High","id":"C.2","nlq":"High-priority bugs in ALPHA","query_summary":"Natural query: 'High-priority bugs in ALPHA'. Synonyms: urgent bugs in ALPHA, high severity issues in ALPHA. Paraphrases: 'Show high-priority bugs in ALPHA project', 'List urgent bug tickets in ALPHA'. This JQL filters issues where project equals ALPHA, issuetype equals Bug, and priority equals High. Fields involved: project, issuetype, priority. Entities: ALPHA, Bug, High. Purpose: Used for escalations and urgent bug review.","paraphrases":["Show high-priority bugs in ALPHA project","List urgent bug tickets in ALPHA"],"intents":["browse","project","issuetype","priority"],"entities":"{\"project\":\"ALPHA\",\"issuetype\":\"Bug\",\"priority\":\"High\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TIME.3","fields":{"description":"Significantly overdue tasks using business day calculations","why":"Provides realistic overdue calculations excluding weekends/holidays","entities_flat":["issuetype:Task","overdue_period:30 business days","status:unresolved"],"synonyms":["severely overdue","long-overdue tasks","business day delays"],"section":"Advanced Time Tracking","jql_fields":["issuetype","duedate","resolution"],"notes":"Uses business day calculations for more accurate overdue tracking","jql":"issuetype = Task AND duedate < now(\"-30bd\") AND resolution IS EMPTY","id":"TIME.3","nlq":"Tasks overdue by more than 30 business days","query_summary":"Natural query: 'Tasks overdue by more than 30 business days'. Business day overdue tracking. Purpose: Realistic deadline monitoring.","paraphrases":["Show tasks overdue by a month of work days","List severely delayed tasks"],"intents":["overdue","business_days","tracking"],"entities":"{\"issuetype\":\"Task\",\"overdue_period\":\"30 business days\",\"status\":\"unresolved\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.23","fields":{"description":"Filters by resolution date in a quarter.","why":"Supports quarterly reporting based on resolved date.","entities_flat":["issuetype:Task","date_range:2024-01-01","date_range:2024-03-31"],"synonyms":["tasks completed in Q1 2024","quarterly resolved tasks"],"section":"A. Basic Filters","jql_fields":["issuetype","resolved"],"jql":"issuetype = Task AND resolved >= \"2024-01-01\" AND resolved <= \"2024-03-31\"","id":"A.23","nlq":"Tasks closed in Q1 2024","query_summary":"Natural query: 'Tasks closed in Q1 2024'. Synonyms: tasks completed in Q1 2024, quarterly resolved tasks. Paraphrases: 'List tasks resolved in Q1 2024', 'Show closed tasks Jan–Mar 2024'. This JQL uses absolute date filtering on the resolved field to capture issues completed between 2024-01-01 and 2024-03-31. Purpose: enables quarterly reporting on completed work.","paraphrases":["List tasks resolved in Q1 2024","Show closed tasks Jan–Mar 2024"],"intents":["browse","time"],"entities":"{\"issuetype\":\"Task\",\"date_range\":[\"2024-01-01\",\"2024-03-31\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.12","fields":{"description":"Issues where james is the reporter (use accountId on Cloud if needed).","why":"Identify issues filed by a specific user.","entities_flat":["reporter:james"],"synonyms":["authored by James","created by James","filed by James"],"section":"A. Basic Filters","jql_fields":["reporter"],"notes":"On Jira Cloud, reporter must be specified by accountId, not username.","jql":"reporter = james","id":"A.12","nlq":"Reported by James","query_summary":"Natural query: 'Reported by James'. Synonyms: authored by James, created by James, filed by James. Paraphrases: 'List issues reported by James', 'Show tickets created by James', 'Bugs filed by James'. This JQL filters issues where the reporter equals James. Fields involved: reporter. Entity value: James. Purpose: Useful for analyzing workload or bug reports created by a particular user.","paraphrases":["List issues reported by James","Show tickets created by James","Bugs filed by James"],"intents":["browse","reporter"],"entities":"{\"reporter\":\"james\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::WATCH.2","fields":{"description":"Critical bugs lacking community visibility and tracking","why":"Ensures critical issues receive appropriate attention","entities_flat":["issuetype:Bug","priority:Critical","watcher_count:0"],"synonyms":["invisible critical bugs","untracked urgent issues"],"section":"Watchers & Engagement","jql_fields":["issuetype","priority","watchers"],"notes":"Identifies high-priority issues with insufficient visibility","jql":"issuetype = Bug AND priority = Critical AND watchers = 0","id":"WATCH.2","nlq":"Critical bugs with zero watchers needing visibility","query_summary":"Natural query: 'Critical bugs with zero watchers needing visibility'. Visibility gaps. Purpose: Critical issue attention management.","paraphrases":["Show critical bugs no one is watching","List urgent issues lacking visibility"],"intents":["watchers","priority","visibility"],"entities":"{\"issuetype\":\"Bug\",\"priority\":\"Critical\",\"watcher_count\":\"0\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.3","fields":{"description":"Restrict issues by one or more types (Bug, Story, Task, etc.).","entities_flat":["issuetype:{TYPES...}"],"section":"R. Small Template Bank","jql_fields":["issuetype"],"jql":"issuetype IN ({TYPES...})","id":"R.3","nlq":"Filter by issue types","query_summary":"Template to filter by issue types such as Bug, Story, Task.","intents":["browse","issuetype"],"entities":"{\"issuetype\":\"{TYPES...}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::DT.1","fields":{"description":"Filter by creation date within current month","why":"Common time-based filtering for reporting and tracking.","entities_flat":["created:startOfMonth()"],"synonyms":["created this month","issues from this month"],"section":"A. Date and Time Functions","jql_fields":["created"],"notes":"Use startOfMonth() for precise month boundary filtering","jql":"created >= startOfMonth()","id":"DT.1","nlq":"Issues created this month","query_summary":"Natural query: 'Issues created this month'. Filters issues created since the beginning of current month using startOfMonth() function.","paraphrases":["Show issues created in current month","List items created since month started"],"intents":["browse","time","created"],"entities":"{\"created\":\"startOfMonth()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.6","fields":{"description":"Exception keywords.","why":"Detects bugs containing exception traces.","entities_flat":["issuetype:Bug","description:~ Exception"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","description"],"jql":"issuetype = Bug AND description ~ \"Exception\"","id":"S.6","nlq":"Bugs with stacktrace in description","query_summary":"Filter bugs whose description contains 'Exception'.","intents":["browse","issuetype","description"],"entities":"{\"issuetype\":\"Bug\",\"description\":\"~ Exception\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.2","fields":{"description":"Use 'reporter' for who filed/created issues, 'assignee' for who is working on them","why":"Fixes common confusion between reporter (who filed) and assignee (who works on it)","entities_flat":["Bug","qa","filed"],"synonyms":["created","submitted","reported","logged"],"section":"AI. Accuracy Improvements - Reporter vs Assignee","jql_fields":["issuetype","reporter"],"notes":"CRITICAL: 'filed by' = reporter, 'assigned to' = assignee","jql":"issuetype = \"Bug\" AND reporter IN membersOf(\"qa\")","id":"AI.2","nlq":"Show bugs filed by QA team","query_summary":"Natural query: 'Show bugs filed by QA team'. Synonyms: created, submitted, reported. This JQL uses reporter field not assignee. Fields: issuetype, reporter. Entity: QA team. Purpose: Fixes common confusion between reporter and assignee.","paraphrases":["Bugs created by QA","Issues reported by QA team","QA-filed bugs"],"intents":["reporter","team","bugs"],"entities":"\"{\\\"team\\\": \\\"qa\\\", \\\"issuetype\\\": \\\"Bug\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.15","fields":{"description":"Uses group membership in logical assignment.","why":"Adds team-based logical filter with membersOf().","entities_flat":["group:devs"],"synonyms":["team devs issues","assigned to dev group"],"section":"C. Logical Combinations & Set Ops","jql_fields":["assignee"],"jql":"assignee IN membersOf(\"devs\")","id":"C.15","nlq":"Issues assigned to any member of devs group","query_summary":"Natural query: 'Issues assigned to any member of devs group'. Synonyms: team devs issues, assigned to dev group. Paraphrases: 'Show issues owned by devs team', 'List tickets assigned to members of devs'. This JQL uses assignee IN membersOf(\"devs\") to expand assignment logically by group. Fields: assignee. Purpose: Useful for tracking workloads by team group.","paraphrases":["Show issues owned by devs team","List tickets assigned to members of devs"],"intents":["browse","assignee","group"],"entities":"{\"group\":\"devs\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.7","fields":{"description":"Direct assignment to a named user.","why":"Most common case when tracking another team member’s workload.","entities_flat":["assignee:james"],"synonyms":["James's tasks","tickets owned by James"],"section":"J. Users, Groups, Teams","jql_fields":["assignee"],"notes":"Use exact username or accountId depending on Jira configuration.","jql":"assignee = james","id":"J.7","nlq":"Assigned to James","query_summary":"Natural query: 'Assigned to James'. Synonyms: James's tasks, tickets owned by James. Paraphrases: 'Show issues assigned to James', 'List tickets owned by James'. This JQL filters issues where assignee equals James. Field: assignee. Entity: James. Purpose: Useful for workload monitoring of a specific user.","paraphrases":["Show issues assigned to James","List tickets owned by James"],"intents":["browse","assignee"],"entities":"{\"assignee\":\"james\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::VOTE.1","fields":{"description":"Popular feature requests based on community voting","why":"Helps prioritize development based on user demand","entities_flat":["issuetype:Feature Request","vote_count:20"],"synonyms":["popular features","highly voted requests","community favorites"],"section":"Voting & Popularity","jql_fields":["issuetype","votes"],"notes":"Uses vote count to prioritize community-requested features","jql":"issuetype = \"Feature Request\" AND votes >= 20","id":"VOTE.1","nlq":"Feature requests with more than 20 votes","query_summary":"Natural query: 'Feature requests with more than 20 votes'. Uses vote counting for prioritization. Purpose: Community-driven development prioritization.","paraphrases":["Show popular feature requests","List highly voted features"],"intents":["voting","popularity","features"],"entities":"{\"issuetype\":\"Feature Request\",\"vote_count\":\"20\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.8","fields":{"description":"Only Epics.","why":"Helps isolate epic-level work items in Agile context.","entities_flat":["issuetype:Epic"],"synonyms":["epic stories","large features"],"section":"A. Basic Filters","jql_fields":["issuetype"],"notes":"Epics are available in Jira Software, not in Jira Core.","jql":"issuetype = Epic","id":"A.8","nlq":"Epics only","query_summary":"Natural query: 'Epics only'. Synonyms: epic stories, large features. Paraphrases: 'List all epics', 'Show epic items', 'Only epic issues'. This JQL filters issues where the issuetype equals Epic. Fields involved: issuetype. Entity value: Epic. Purpose: Useful in Agile boards and planning to filter higher-level work containers.","paraphrases":["List all epics","Show epic items","Only epic issues"],"intents":["browse","issuetype"],"entities":"{\"issuetype\":\"Epic\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::SC.1","fields":{"description":"Find issues with excessive status churn","why":"Workflow analysis and process improvement.","entities_flat":["status:CHANGED","statusChangeCount:> 3","time:startOfQuarter()"],"synonyms":["frequently changed issues","status churn"],"section":"O. Status Change Frequency and Advanced Transitions","jql_fields":["status","statusChangeCount"],"notes":"Requires app/property that tracks status change count","jql":"status CHANGED DURING (startOfQuarter(), now()) AND statusChangeCount > 3","id":"SC.1","nlq":"Issues that changed status more than 3 times this quarter","query_summary":"Natural query: 'Issues that changed status more than 3 times this quarter'. Identifies issues with excessive workflow churn.","paraphrases":["Show issues with many status changes","Find unstable workflow items"],"intents":["browse","status","frequency"],"entities":"{\"status\":\"CHANGED\",\"statusChangeCount\":\"> 3\",\"time\":\"startOfQuarter()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::WL.2","fields":{"description":"Track QA team time logging activity","why":"Team productivity and time allocation tracking.","entities_flat":["worklogAuthor:membersOf(qa)","worklogDate:startOfWeek()"],"synonyms":["QA time logging","QA team worklogs"],"section":"M. Worklog and Time Tracking","jql_fields":["worklogAuthor","worklogDate"],"notes":"worklogAuthor tracks who logged time","jql":"worklogAuthor IN membersOf(\"qa\") AND worklogDate >= startOfWeek()","id":"WL.2","nlq":"Work logged by QA team this week","query_summary":"Natural query: 'Work logged by QA team this week'. Shows time entries made by QA team members during current week.","paraphrases":["Show QA team time entries","Find work logged by QA"],"intents":["browse","worklog","team"],"entities":"{\"worklogAuthor\":\"membersOf(qa)\",\"worklogDate\":\"startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::N.4","fields":{"description":"Attachment + text hint.","why":"Screenshots help clarify reproduction steps or errors, improving quality.","entities_flat":["attachments:NOT EMPTY","text:~ screenshot"],"synonyms":["screenshot attached","includes screenshot"],"section":"N. Quality & Hygiene Queries","jql_fields":["attachments","text"],"notes":"Heuristic: relies on presence of attachments plus text search for 'screenshot'.","jql":"attachments IS NOT EMPTY AND text ~ \"screenshot\"","id":"N.4","nlq":"With at least one screenshot","query_summary":"Natural query: 'With at least one screenshot'. Synonyms: screenshot attached, includes screenshot. Paraphrases: 'Show issues with screenshots attached', 'List tickets mentioning screenshots'. This JQL filters issues where attachments are not empty and text field contains 'screenshot'. Fields: attachments, text. Entities: NOT EMPTY, ~ screenshot. Purpose: Useful for identifying issues with visual evidence.","paraphrases":["Show issues with screenshots attached","List tickets mentioning screenshots"],"intents":["browse","quality","attachments"],"entities":"{\"attachments\":\"NOT EMPTY\",\"text\":\"~ screenshot\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.18","fields":{"description":"Multi-field exclusion and filter combo.","why":"Strengthens logical AND/NOT combo with priority and component filters.","entities_flat":["priority:High","resolution:EMPTY","component:!= Backend"],"synonyms":["urgent open issues not backend"],"section":"C. Logical Combinations & Set Ops","jql_fields":["priority","resolution","component"],"jql":"priority = High AND resolution IS EMPTY AND component != Backend","id":"C.18","nlq":"High-priority unresolved issues excluding Backend component","query_summary":"Natural query: 'High-priority unresolved issues excluding Backend component'. Synonyms: urgent open issues not backend. Paraphrases: 'List high-priority unresolved items outside Backend', 'Show urgent tickets excluding Backend component'. This JQL filters issues where priority is High, resolution IS EMPTY, and component is not Backend. Fields: priority, resolution, component. Purpose: Useful for triage while ignoring irrelevant subsystems.","paraphrases":["List high-priority unresolved items outside Backend","Show urgent tickets excluding Backend component"],"intents":["browse","priority","resolution","component"],"entities":"{\"priority\":\"High\",\"resolution\":\"EMPTY\",\"component\":\"!= Backend\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::VOTE.3","fields":{"description":"High-priority bugs with minimal community attention","why":"Helps identify critical issues that need more attention","entities_flat":["issuetype:Bug","vote_count:1","priority:high"],"synonyms":["overlooked critical bugs","under-voted urgent issues"],"section":"Voting & Popularity","jql_fields":["issuetype","votes","priority"],"notes":"Identifies important bugs that may lack visibility","jql":"issuetype = Bug AND votes = 1 AND priority IN (High, Critical)","id":"VOTE.3","nlq":"Bugs with exactly 1 vote but high priority","query_summary":"Natural query: 'Bugs with exactly 1 vote but high priority'. Identifies visibility gaps. Purpose: Critical issue attention management.","paraphrases":["Show critical bugs with little community attention","List high-priority bugs needing votes"],"intents":["voting","priority","attention"],"entities":"{\"issuetype\":\"Bug\",\"vote_count\":\"1\",\"priority\":\"high\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.2","fields":{"description":"SLA time remaining.","why":"Identifies tickets at risk of SLA breach for proactive action.","entities_flat":["Time to resolution:remaining(1h)"],"synonyms":["SLA expiring soon","resolution deadline close"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["Time to resolution"],"notes":"remaining(1h) can be replaced with other units like d (days), m (minutes).","jql":"\"Time to resolution\" <= remaining(1h)","id":"M.2","nlq":"Requests with less than 1 hour remaining to resolution","query_summary":"Natural query: 'Requests with less than 1 hour remaining to resolution'. Synonyms: SLA expiring soon, resolution deadline close. Paraphrases: 'Show requests with less than 1 hour remaining to resolution', 'List tickets nearing resolution SLA deadline'. This JQL filters issues where 'Time to resolution' SLA has 1 hour or less remaining. Field: Time to resolution. Entity: remaining(1h). Purpose: Useful for SLA risk management.","paraphrases":["Show requests with less than 1 hour remaining to resolution","List tickets nearing resolution SLA deadline"],"intents":["browse","sla"],"entities":"{\"Time to resolution\":\"remaining(1h)\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::M.1","fields":{"description":"SLA breach (JSM only).","why":"Helps teams identify customer requests where first response SLAs were missed.","entities_flat":["Time to first response:breached()"],"synonyms":["breached first response","missed first response SLA"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["Time to first response"],"notes":"SLA fields like 'Time to first response' exist only in Jira Service Management projects.","jql":"\"Time to first response\" = breached()","id":"M.1","nlq":"Requests that breached Time to first response","query_summary":"Natural query: 'Requests that breached Time to first response'. Synonyms: breached first response, missed first response SLA. Paraphrases: 'Show requests that breached Time to first response', 'List tickets where first response SLA was breached'. This JQL filters issues where the SLA field 'Time to first response' shows breached(). Field: Time to first response. Entity: breached(). Purpose: Useful for SLA compliance monitoring.","paraphrases":["Show requests that breached Time to first response","List tickets where first response SLA was breached"],"intents":["browse","sla"],"entities":"{\"Time to first response\":\"breached()\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::ST.3","fields":{"description":"Track assignment changes between specific users","why":"Workload tracking and assignment history analysis.","entities_flat":["issuetype:Task","assignee:alice, bob","time:startOfMonth()"],"synonyms":["reassigned from Alice to Bob","transferred to Bob"],"section":"C. Status Transitions and History","jql_fields":["issuetype","assignee"],"notes":"assignee CHANGED FROM/TO tracks ownership transitions","jql":"issuetype = Task AND assignee CHANGED FROM alice TO bob DURING (startOfMonth(), now())","id":"ST.3","nlq":"Tasks reassigned from Alice to Bob this month","query_summary":"Natural query: 'Tasks reassigned from Alice to Bob this month'. Tracks assignment changes between specific team members.","paraphrases":["Show tasks moved from Alice to Bob","List items reassigned to Bob"],"intents":["browse","assignee","transition"],"entities":"{\"issuetype\":\"Task\",\"assignee\":\"alice, bob\",\"time\":\"startOfMonth()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.14","fields":{"description":"No label added.","why":"Helps find issues that lack metadata categorization via labels.","entities_flat":["labels:EMPTY"],"synonyms":["unlabeled","without tags","no labels"],"section":"A. Basic Filters","jql_fields":["labels"],"notes":"labels IS EMPTY is the proper way to find issues without any labels.","jql":"labels IS EMPTY","id":"A.14","nlq":"Without labels","query_summary":"Natural query: 'Without labels'. Synonyms: unlabeled, without tags, no labels. Paraphrases: 'List issues without labels', 'Show unlabeled tickets', 'Items missing tags'. This JQL filters issues where the labels field is empty. Fields involved: labels. Entity value: EMPTY. Purpose: Useful for data hygiene and enforcing labeling conventions.","paraphrases":["List issues without labels","Show unlabeled tickets","Items missing tags"],"intents":["browse","labels"],"entities":"{\"labels\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TM.1","fields":{"description":"Filter bugs assigned to QA team group","why":"Team workload tracking and assignment management.","entities_flat":["issuetype:Bug","assignee:membersOf(qa)"],"synonyms":["QA bugs","bugs for QA team"],"section":"E. Team and Group Management","jql_fields":["issuetype","assignee"],"notes":"membersOf() function works with Jira groups","jql":"issuetype = Bug AND assignee IN membersOf(\"qa\")","id":"TM.1","nlq":"Bugs assigned to QA team members","query_summary":"Natural query: 'Bugs assigned to QA team members'. Filters bugs assigned to any member of the QA team group.","paraphrases":["Show bugs assigned to QA","List QA team bugs"],"intents":["browse","team","assignment"],"entities":"{\"issuetype\":\"Bug\",\"assignee\":\"membersOf(qa)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.5","fields":{"description":"Compare issue workflow status or broader status categories.","entities_flat":["status:{STATUS}","statusCategory:{CATEGORY}","operator:{OP}"],"section":"R. Small Template Bank","jql_fields":["status","statusCategory"],"jql":"status {OP} {STATUS} OR statusCategory {OP} {CATEGORY}","id":"R.5","nlq":"Filter by status or category with operators","query_summary":"Template to filter issues by status values or status categories with operators.","intents":["browse","status"],"entities":"{\"status\":\"{STATUS}\",\"statusCategory\":\"{CATEGORY}\",\"operator\":\"{OP}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.10","fields":{"description":"Track assignee changes within timeframe","why":"Demonstrates correct assignment change tracking","entities_flat":["7d","assignee"],"synonyms":["reassigned","transferred"],"section":"AI. Accuracy Improvements - Assignment History","jql_fields":["assignee"],"notes":"Use CHANGED DURING for tracking field changes in timeframes","jql":"assignee CHANGED DURING (-7d, now())","id":"AI.10","nlq":"Issues where assignee changed this week","query_summary":"Natural query: 'Issues where assignee changed this week'. Synonyms: reassigned, transferred. This JQL tracks assignment changes. Fields: assignee. Entity: 7d.","paraphrases":["Tickets reassigned this week","Issues with assignment changes"],"intents":["history","assignment","time"],"entities":"\"{\\\"timeframe\\\": \\\"7d\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ST.1","fields":{"description":"Track completion transitions within current week","why":"Weekly progress tracking and completion metrics.","entities_flat":["status:In Progress, Done","time:startOfWeek()"],"synonyms":["completed this week","finished this week"],"section":"C. Status Transitions and History","jql_fields":["status"],"notes":"CHANGED FROM/TO tracks specific status transitions","jql":"status CHANGED FROM \"In Progress\" TO \"Done\" DURING (startOfWeek(), now())","id":"ST.1","nlq":"Issues moved from In Progress to Done this week","query_summary":"Natural query: 'Issues moved from In Progress to Done this week'. Tracks issues that transitioned to completion during current week.","paraphrases":["Show issues completed this week","List items finished in current week"],"intents":["browse","status","transition"],"entities":"{\"status\":\"In Progress, Done\",\"time\":\"startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.11","fields":{"description":"Board-specific sprint context.","why":"Some organizations use multiple boards mapped to same project; board-specific filters ensure context accuracy.","entities_flat":["board:7","sprint:openSprints()"],"synonyms":["board 7 active sprint","tickets from board 7"],"section":"G. Agile: Sprints & Boards","jql_fields":["board","sprint"],"notes":"Requires ScriptRunner or similar add-on; board field is not native JQL.","jql":"board = 7 AND sprint IN openSprints()","id":"G.11","nlq":"Issues on Board 7’s current sprint","query_summary":"Natural query: 'Issues on Board 7’s current sprint'. Synonyms: board 7 active sprint, tickets from board 7. Paraphrases: 'Show current sprint issues from board 7', 'List tickets in board 7 active sprint'. This JQL filters issues where board = 7 and sprint in openSprints(). Fields: board, sprint. Entities: 7, openSprints(). Purpose: Useful when teams operate multiple parallel boards.","paraphrases":["Show current sprint issues from board 7","List tickets in board 7 active sprint"],"intents":["browse","board","sprint"],"entities":"{\"board\":\"7\",\"sprint\":\"openSprints()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::C.6","fields":{"description":"Any labeled item.","why":"Helps isolate issues that already have labels for categorization.","entities_flat":["labels:NOT EMPTY"],"synonyms":["labeled","tagged"],"section":"C. Logical Combinations & Set Ops","jql_fields":["labels"],"notes":"labels IS NOT EMPTY returns issues that have one or more labels.","jql":"labels IS NOT EMPTY","id":"C.6","nlq":"With at least one label","query_summary":"Natural query: 'With at least one label'. Synonyms: labeled, tagged. Paraphrases: 'List issues with labels', 'Show tagged tickets'. This JQL filters issues where the labels field is not empty. Fields involved: labels. Entity value: NOT EMPTY. Purpose: Useful to quickly view items already classified with labels.","paraphrases":["List issues with labels","Show tagged tickets"],"intents":["browse","labels"],"entities":"{\"labels\":\"NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::N.7","fields":{"description":"Heuristic for missing acceptance criteria text.","why":"Prevents poor requirements quality by flagging stories/tasks missing acceptance criteria.","entities_flat":["issuetype:Story","issuetype:Task","description:!~ Acceptance Criteria"],"synonyms":["missing acceptance details","stories without acceptance criteria"],"section":"N. Quality & Hygiene Queries","jql_fields":["description","issuetype"],"notes":"Relies on free-text pattern; adjust based on template usage.","jql":"description !~ \"Acceptance Criteria\" AND issuetype IN (Story, Task)","id":"N.7","nlq":"Issues with empty acceptance criteria","query_summary":"Natural query: 'Issues with empty acceptance criteria'. Synonyms: missing acceptance details, stories without acceptance criteria. Paraphrases: 'Show stories or tasks lacking acceptance criteria', 'List issues missing acceptance criteria'. This JQL filters issues of type Story or Task where description does not contain 'Acceptance Criteria'. Fields: description, issuetype. Entities: Story, Task, !~ Acceptance Criteria. Purpose: Useful for ensuring quality user stories.","paraphrases":["Show stories or tasks lacking acceptance criteria","List issues missing acceptance criteria"],"intents":["browse","quality","description"],"entities":"{\"issuetype\":[\"Story\",\"Task\"],\"description\":\"!~ Acceptance Criteria\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.12","fields":{"description":"Agile + custom fields + ownership.","why":"Helps teams avoid sprint risk from unowned, oversized stories.","entities_flat":["issuetype:Story","sprint:openSprints()","Story Points:>= 13","assignee:EMPTY"],"synonyms":["big unowned sprint stories","unassigned large stories"],"section":"P. Examples Combining Many Concepts","jql_fields":["issuetype","sprint","Story Points","assignee"],"notes":"Highlights dangerous big stories that nobody owns.","jql":"issuetype = Story AND sprint IN openSprints() AND \"Story Points\" >= 13 AND assignee IS EMPTY","id":"P.12","nlq":"Stories in current sprint with Story Points >= 13 and no assignee","query_summary":"Natural query: 'Stories in current sprint with Story Points >= 13 and no assignee'. Synonyms: big unowned sprint stories, unassigned large stories. Paraphrases: 'Show large unassigned stories in current sprint', 'List sprint items with 13+ points and no assignee'. This JQL filters sprint stories with ≥13 points and no assignee.","paraphrases":["Show large unassigned stories in current sprint","List sprint items with 13+ points and no assignee"],"intents":["browse","sprint","story points","assignee"],"entities":"{\"issuetype\":\"Story\",\"sprint\":\"openSprints()\",\"Story Points\":\">= 13\",\"assignee\":\"EMPTY\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::A.15","fields":{"description":"Filters by component.","why":"Isolate issues belonging to a particular component or subsystem.","entities_flat":["component:Backend"],"synonyms":["subsystem","module","backend"],"section":"A. Basic Filters","jql_fields":["component"],"notes":"Ensure 'Backend' is a valid component defined in the project.","jql":"component = Backend","id":"A.15","nlq":"Component is Backend","query_summary":"Natural query: 'Component is Backend'. Synonyms: subsystem, module, backend. Paraphrases: 'Show issues in Backend component', 'List tickets under Backend module', 'Backend subsystem issues'. This JQL filters issues where the component equals Backend. Fields involved: component. Entity value: Backend. Purpose: Used for assigning ownership to specific teams or subsystems.","paraphrases":["Show issues in Backend component","List tickets under Backend module","Backend subsystem issues"],"intents":["browse","component"],"entities":"{\"component\":\"Backend\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.2","fields":{"description":"Highly followed items.","why":"Highlights popular issues with high stakeholder interest.","entities_flat":["watchers:>= 5"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["watchers"],"jql":"watchers >= 5","id":"S.2","nlq":"Issues with watchers >= 5","query_summary":"List issues where watchers count is 5 or more.","intents":["browse","watchers"],"entities":"{\"watchers\":\">= 5\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.2","fields":{"description":"Already released.","why":"Helps analyze work shipped in prior releases.","entities_flat":["fixVersion:releasedVersions()"],"synonyms":["shipped releases","past versions"],"section":"E. Versions, Components, Labels","jql_fields":["fixVersion"],"notes":"releasedVersions() dynamically finds versions already released.","jql":"fixVersion IN releasedVersions()","id":"E.2","nlq":"In released Fix Versions","query_summary":"Natural query: 'In released Fix Versions'. Synonyms: shipped releases, past versions. Paraphrases: 'Show issues in released fix versions', 'List tickets tied to past releases'. This JQL filters issues where fixVersion is in releasedVersions(). Fields: fixVersion. Entity: releasedVersions(). Purpose: Useful for historical reporting and release notes.","paraphrases":["Show issues in released fix versions","List tickets tied to past releases"],"intents":["browse","fixVersion"],"entities":"{\"fixVersion\":\"releasedVersions()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TIME.2","fields":{"description":"Weekend bug reports indicating out-of-hours issues","why":"Identifies system issues occurring during off-hours","entities_flat":["issuetype:Bug","timeframe:last month","days:weekends"],"synonyms":["weekend bugs","off-hours issues","non-business day reports"],"section":"Advanced Time Tracking","jql_fields":["issuetype","created"],"notes":"Uses day-of-week filtering to identify out-of-hours problem patterns","jql":"issuetype = Bug AND created >= startOfMonth() AND created.dayOfWeek IN (1, 7)","id":"TIME.2","nlq":"Bugs created on weekends in last month","query_summary":"Natural query: 'Bugs created on weekends in last month'. Weekend activity tracking. Purpose: Off-hours issue pattern analysis.","paraphrases":["Show bugs reported on weekends","List weekend issue reports"],"intents":["time","weekend","issues"],"entities":"{\"issuetype\":\"Bug\",\"timeframe\":\"last month\",\"days\":\"weekends\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.6","fields":{"description":"Multiple projects by key.","why":"Filters results to multiple projects simultaneously.","entities_flat":["project:ALPHA","project:BETA"],"synonyms":["tickets","items","bugs"],"section":"A. Basic Filters","jql_fields":["project"],"notes":"Project keys must be valid; ensure spelling matches instance keys.","jql":"project IN (ALPHA, BETA)","id":"A.6","nlq":"Issues in projects ALPHA and BETA","query_summary":"Natural query: 'Issues in projects ALPHA and BETA'. Synonyms: tickets, items, bugs. Paraphrases: 'Show issues from ALPHA and BETA', 'List tickets across ALPHA and BETA', 'All items in projects ALPHA and BETA'. This JQL filters issues where the project field is either ALPHA or BETA. Fields involved: project. Entity values: ALPHA, BETA. Purpose: Used for combined reporting across multiple projects.","paraphrases":["Show issues from ALPHA and BETA","List tickets across ALPHA and BETA","All items in projects ALPHA and BETA"],"intents":["browse","project"],"entities":"{\"project\":[\"ALPHA\",\"BETA\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.4","fields":{"description":"Missing value.","why":"Helps identify issues lacking required severity classification.","entities_flat":["Severity:EMPTY"],"synonyms":["undefined severity","missing severity"],"section":"L. Custom Fields","jql_fields":["Severity"],"notes":"IS EMPTY works for any custom field type to detect missing values.","jql":"\"Severity\" IS EMPTY","id":"L.4","nlq":"Severity not set","query_summary":"Natural query: 'Severity not set'. Synonyms: undefined severity, missing severity. Paraphrases: 'Show issues where severity is not set', 'List tickets without severity'. This JQL filters issues where Severity field is empty. Field: Severity. Entity: EMPTY. Purpose: Useful for data hygiene and enforcing classification completeness.","paraphrases":["Show issues where severity is not set","List tickets without severity"],"intents":["browse","customfield","emptiness"],"entities":"{\"Severity\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.9","fields":{"description":"Excludes current user.","why":"Finds issues created by others, excluding self-reported ones.","entities_flat":["reporter:!= currentUser()"],"synonyms":["others' issues","not reported by me"],"section":"C. Logical Combinations & Set Ops","jql_fields":["reporter"],"notes":"!= operator combined with currentUser() excludes logged-in user as reporter.","jql":"reporter != currentUser()","id":"C.9","nlq":"Reporter is not current user","query_summary":"Natural query: 'Reporter is not current user'. Synonyms: others' issues, not reported by me. Paraphrases: 'List issues not reported by me', 'Show tickets reported by others'. This JQL filters issues where the reporter is not the logged-in user. Fields involved: reporter. Entity value: != currentUser(). Purpose: Useful for managers reviewing team-submitted issues.","paraphrases":["List issues not reported by me","Show tickets reported by others"],"intents":["browse","reporter"],"entities":"{\"reporter\":\"!= currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.25","fields":{"description":"Future-dated deadlines.","why":"Helps forecast and prepare for next month’s deadlines.","entities_flat":["due:next month"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["due"],"jql":"due >= startOfMonth(+1) AND due <= endOfMonth(+1)","id":"S.25","nlq":"Upcoming work due next month","query_summary":"Show issues with due dates falling in next calendar month.","intents":["browse","due"],"entities":"{\"due\":\"next month\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.2","fields":{"description":"Scheduling pressure.","why":"Ensures critical stories are not left unassigned before deadlines.","entities_flat":["issuetype:Story","assignee:EMPTY","priority:High","due:this week"],"synonyms":["unowned high stories","urgent unassigned tasks"],"section":"P. Examples Combining Many Concepts","jql_fields":["issuetype","assignee","priority","due"],"notes":"Highlights scheduling gaps for important work items.","jql":"issuetype = Story AND assignee IS EMPTY AND priority = High AND due >= startOfWeek() AND due <= endOfWeek()","id":"P.2","nlq":"Unassigned high-priority stories due this week","query_summary":"Natural query: 'Unassigned high-priority stories due this week'. Synonyms: unowned high stories, urgent unassigned tasks. Paraphrases: 'Show high-priority unassigned stories due this week', 'List urgent stories with no assignee and due within this week'. This JQL filters stories with assignee empty, priority High, and due date between start and end of week. Fields: issuetype, assignee, priority, due. Purpose: Useful for scheduling review.","paraphrases":["Show high-priority unassigned stories due this week","List urgent stories with no assignee and due within this week"],"intents":["browse","issuetype","assignee","priority","due"],"entities":"{\"issuetype\":\"Story\",\"assignee\":\"EMPTY\",\"priority\":\"High\",\"due\":\"this week\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::B.5","fields":{"description":"Due date within 3 days.","why":"Identify items that have deadlines within the next 3 days.","entities_flat":["due:<= endOfDay(+3d)"],"synonyms":["upcoming due","expiring soon","approaching deadline"],"section":"B. Time & Date Filters","jql_fields":["due"],"notes":"endOfDay(+3d) calculates end of the third day from today.","jql":"due <= endOfDay(+3d)","id":"B.5","nlq":"Due next 3 days","query_summary":"Natural query: 'Due next 3 days'. Synonyms: upcoming due, expiring soon, approaching deadline. Paraphrases: 'List issues due in next 3 days', 'Show tickets expiring soon', 'Items with deadline in 3 days'. This JQL filters issues where the due field is less than or equal to the end of day 3 days from now. Fields involved: due. Entity value: <= endOfDay(+3d). Purpose: Useful for short-term planning.","paraphrases":["List issues due in next 3 days","Show tickets expiring soon","Items with deadline in 3 days"],"intents":["time","due"],"entities":"{\"due\":\"<= endOfDay(+3d)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.8","fields":{"description":"Self-reported and self-assigned work.","why":"Helps individuals review items they both created and took responsibility for.","entities_flat":["reporter:currentUser()","assignee:currentUser()"],"synonyms":["self-owned issues","tickets I created and own"],"section":"J. Users, Groups, Teams","jql_fields":["reporter","assignee"],"notes":"Useful for tracking personal initiative work.","jql":"reporter = currentUser() AND assignee = currentUser()","id":"J.8","nlq":"Issues I reported and also assigned to me","query_summary":"Natural query: 'Issues I reported and also assigned to me'. Synonyms: self-owned issues, tickets I created and own. Paraphrases: 'Show issues I created and assigned to myself', 'List tasks I reported and own'. This JQL filters issues where reporter and assignee both equal currentUser(). Fields: reporter, assignee. Entities: currentUser(). Purpose: Useful for personal accountability tracking.","paraphrases":["Show issues I created and assigned to myself","List tasks I reported and own"],"intents":["browse","reporter","assignee"],"entities":"{\"reporter\":\"currentUser()\",\"assignee\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.8","fields":{"description":"Identifies tickets raised by email.","why":"Helps segment requests by intake channel for reporting.","entities_flat":["Request Channel Type:email"],"synonyms":["email-originated requests","tickets from email"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["Request Channel Type"],"notes":"Request Channel Type is a JSM-specific field; values include email, portal, API.","jql":"\"Request Channel Type\" = email","id":"M.8","nlq":"Requests raised through Email channel","query_summary":"Natural query: 'Requests raised through Email channel'. Synonyms: email-originated requests, tickets from email. Paraphrases: 'Show requests submitted via email', 'List tickets created through email channel'. This JQL filters issues where Request Channel Type = email. Field: Request Channel Type. Entity: email. Purpose: Useful for channel-based SLA analysis and workload segmentation.","paraphrases":["Show requests submitted via email","List tickets created through email channel"],"intents":["browse","portal","channel"],"entities":"{\"Request Channel Type\":\"email\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::S.3","fields":{"description":"Heuristic to capture recent conversation.","why":"Surfaces issues with fresh discussion activity.","entities_flat":["updated:>= -2d","comment:non-empty"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["updated","comment"],"jql":"updated >= -2d AND comment ~ \"*\"","id":"S.3","nlq":"Recently commented (last 2 days)","query_summary":"Show issues updated in last 2 days with at least one comment.","intents":["browse","comment","updated"],"entities":"{\"updated\":\">= -2d\",\"comment\":\"non-empty\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.8","fields":{"description":"Epic listing by project.","why":"Commonly used for planning and roadmaps at epic level.","entities_flat":["project:ALPHA","issuetype:Epic"],"synonyms":["epics in ALPHA project","all epic tickets in ALPHA"],"section":"H. Epics, Parents & Subtasks","jql_fields":["project","issuetype"],"notes":"Simple but essential filter: isolates epic-level items in a project.","jql":"project = ALPHA AND issuetype = Epic","id":"H.8","nlq":"All epics in project ALPHA","query_summary":"Natural query: 'All epics in project ALPHA'. Synonyms: epics in ALPHA project, all epic tickets in ALPHA. Paraphrases: 'List epics for project ALPHA', 'Show all epic issues under ALPHA'. This JQL filters issues where project = ALPHA and issuetype = Epic. Fields: project, issuetype. Entities: ALPHA, Epic. Purpose: Useful for epic-level roadmapping and portfolio management.","paraphrases":["List epics for project ALPHA","Show all epic issues under ALPHA"],"intents":["browse","epic","project"],"entities":"{\"project\":\"ALPHA\",\"issuetype\":\"Epic\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::J.5","fields":{"description":"Shows issues directly assigned to the logged-in user.","why":"Most common personal workload query in Jira.","entities_flat":["assignee:currentUser()"],"synonyms":["my assigned issues","tickets assigned to me"],"section":"J. Users, Groups, Teams","jql_fields":["assignee"],"notes":"Resolves dynamically to the logged-in user.","jql":"assignee = currentUser()","id":"J.5","nlq":"Assigned to me","query_summary":"Natural query: 'Assigned to me'. Synonyms: my assigned issues, tickets assigned to me. Paraphrases: 'Show issues assigned to me', 'List tasks I own'. This JQL filters issues where assignee equals currentUser(). Field: assignee. Entity: currentUser(). Purpose: Useful for personal workload management.","paraphrases":["Show issues assigned to me","List tasks I own"],"intents":["browse","assignee"],"entities":"{\"assignee\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::N.3","fields":{"description":"Closed as duplicate.","why":"Identifies duplicate work that may need cleanup or merging.","entities_flat":["resolution:Duplicate"],"synonyms":["duplicate issues","marked as duplicate"],"section":"N. Quality & Hygiene Queries","jql_fields":["resolution"],"notes":"Relies on consistent use of 'Duplicate' resolution value.","jql":"resolution = Duplicate","id":"N.3","nlq":"Duplicates","query_summary":"Natural query: 'Duplicates'. Synonyms: duplicate issues, marked as duplicate. Paraphrases: 'Show issues resolved as duplicate', 'List tickets closed as duplicates'. This JQL filters issues where resolution equals Duplicate. Field: resolution. Entity: Duplicate. Purpose: Useful for tracking duplicates and preventing redundant work.","paraphrases":["Show issues resolved as duplicate","List tickets closed as duplicates"],"intents":["browse","quality","resolution"],"entities":"{\"resolution\":\"Duplicate\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.7","fields":{"description":"Direct parent lookup.","why":"Common request: given a subtask, find its parent task.","entities_flat":["issuekey:TASK-101"],"synonyms":["parent of subtask","which task owns TASK-101"],"section":"H. Epics, Parents & Subtasks","jql_fields":["parent"],"notes":"Strictly speaking, JQL alone cannot show parent, but in search results parent is available as a field.","jql":"issuekey = TASK-101 | fields parent","id":"H.7","nlq":"Find parent of subtask TASK-101","query_summary":"Natural query: 'Find parent of subtask TASK-101'. Synonyms: parent of subtask, which task owns TASK-101. Paraphrases: 'Show parent issue of subtask TASK-101', 'Find the parent task for TASK-101'. JQL retrieves TASK-101 and displays parent in results. Field: parent. Entity: TASK-101. Purpose: Useful for navigating upward in hierarchy.","paraphrases":["Show parent issue of subtask TASK-101","Find the parent task for TASK-101"],"intents":["browse","parent","subtask"],"entities":"{\"issuekey\":\"TASK-101\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.20","fields":{"description":"Any status whose category is Done (broader than a single status name).","why":"Captures all workflow statuses mapped under Done category, not just Closed.","entities_flat":["statusCategory:Done"],"synonyms":["completed issues","finished tasks","resolved tickets"],"section":"A. Basic Filters","jql_fields":["statusCategory"],"notes":"statusCategory covers multiple statuses like Closed, Resolved, Done.","jql":"statusCategory = Done","id":"A.20","nlq":"All done items","query_summary":"Natural query: 'All done items'. Synonyms: completed issues, finished tasks, resolved tickets. Paraphrases: 'List all done issues', 'Items that are complete', 'Tasks marked finished'. This JQL retrieves issues where the statusCategory equals Done. Fields involved: statusCategory. Entity value: Done. Purpose: Useful for reporting and metrics around completed work.","paraphrases":["List all done issues","Items that are complete","Tasks marked finished"],"intents":["browse","status"],"entities":"{\"statusCategory\":\"Done\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.3","fields":{"description":"Issues in Closed status.","why":"Simple filter for identifying issues that are completely finished.","entities_flat":["status:Closed"],"synonyms":["tickets","items","bugs"],"section":"A. Basic Filters","jql_fields":["status"],"notes":"Ensure 'Closed' exists in your workflow; some instances use 'Done' instead.","jql":"status = Closed","id":"A.3","nlq":"All closed issues","query_summary":"Natural query: 'All closed issues'. Synonyms: tickets, items, bugs. Paraphrases: 'List closed tickets', 'Show finished issues', 'Closed items'. This JQL filters issues where the status equals Closed. Fields involved: status. Entity value: Closed. Purpose: Used to report completed or archived tasks.","paraphrases":["List closed tickets","Show finished issues","Closed items"],"intents":["browse","status"],"entities":"{\"status\":\"Closed\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::DT.2","fields":{"description":"Filter tasks due within current week boundaries","why":"Essential for weekly planning and deadline tracking.","entities_flat":["due:startOfWeek(), endOfWeek()"],"synonyms":["due this week","deadline this week"],"section":"A. Date and Time Functions","jql_fields":["due"],"notes":"Combines start and end of week functions for precise week filtering","jql":"due >= startOfWeek() AND due <= endOfWeek()","id":"DT.2","nlq":"Tasks due by end of this week","query_summary":"Natural query: 'Tasks due by end of this week'. Filters tasks with due dates within current week using startOfWeek() and endOfWeek() functions.","paraphrases":["Show tasks due this week","List items with deadline in current week"],"intents":["browse","time","due"],"entities":"{\"due\":\"startOfWeek(), endOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.4","fields":{"description":"Supports operators =, !=, IN, NOT IN for assignee filters.","entities_flat":["assignee:{USER}","operator:{=, !=, IN, NOT IN}"],"section":"R. Small Template Bank","jql_fields":["assignee"],"jql":"assignee {OP} {USER}","id":"R.4","nlq":"Filter by assignee with operators","query_summary":"Template to filter by assignee using equality, inequality, or membership operators.","intents":["browse","assignee"],"entities":"{\"assignee\":\"{USER}\",\"operator\":\"{=, !=, IN, NOT IN}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.2","fields":{"description":"Since midnight.","why":"Identifies issues updated since the start of the current day.","entities_flat":["updated:>= startOfDay()"],"synonyms":["modified today","changed today","edited today"],"section":"B. Time & Date Filters","jql_fields":["updated"],"notes":"startOfDay() resets at midnight based on system timezone.","jql":"updated >= startOfDay()","id":"B.2","nlq":"Updated today","query_summary":"Natural query: 'Updated today'. Synonyms: modified today, changed today, edited today. Paraphrases: 'List issues updated today', 'Show tickets modified since midnight', 'Items changed today'. This JQL filters issues where the updated field is greater than or equal to the start of the day. Fields involved: updated. Entity value: startOfDay(). Purpose: Useful for daily standup and activity monitoring.","paraphrases":["List issues updated today","Show tickets modified since midnight","Items changed today"],"intents":["time","updated"],"entities":"{\"updated\":\">= startOfDay()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.2","fields":{"description":"Exact phrase search.","why":"Used for locating specific error messages or reproducible steps captured in descriptions.","entities_flat":["description:~ \"out of memory\""],"synonyms":["details include out of memory","body has out of memory"],"section":"D. Text & Content Search","jql_fields":["description"],"notes":"Phrase searches must be enclosed in double quotes inside the string literal.","jql":"description ~ '\"out of memory\"'","id":"D.2","nlq":"Description has exact phrase \"out of memory\"","query_summary":"Natural query: 'Description has exact phrase out of memory'. Synonyms: details include out of memory, body has out of memory. Paraphrases: 'Find issues whose description has exact phrase out of memory', 'Show tickets with out of memory in details'. This JQL filters issues where the description contains the exact phrase 'out of memory'. Fields: description. Entity: ~ \"out of memory\". Purpose: Useful for identifying issues tied to specific error messages.","paraphrases":["Find issues whose description has exact phrase 'out of memory'","Show tickets with 'out of memory' in details"],"intents":["search","description"],"entities":"{\"description\":\"~ \\\"out of memory\\\"\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.6","fields":{"description":"Heuristic for agent-side notes.","why":"Helps find support tickets where agents marked the status as waiting on customer action.","entities_flat":["comment:~ awaiting user","reporter:NOT currentUser()"],"synonyms":["agent notes awaiting user","support comments"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["comment","reporter"],"notes":"Relies on free-text search in comments; works as a heuristic, not a structured SLA field.","jql":"comment ~ \"awaiting user\" AND reporter NOT IN (currentUser())","id":"M.6","nlq":"Agent comments contain \"awaiting user\"","query_summary":"Natural query: 'Agent comments contain awaiting user'. Synonyms: agent notes awaiting user, support comments. Paraphrases: 'Show tickets with agent comments mentioning awaiting user', 'List requests marked as awaiting user by agents'. This JQL filters issues where comments contain 'awaiting user' and reporter is not the current user. Fields: comment, reporter. Entities: ~ awaiting user, NOT currentUser(). Purpose: Useful for identifying pending-customer-action tickets.","paraphrases":["Show tickets with agent comments mentioning awaiting user","List requests marked as awaiting user by agents"],"intents":["browse","comment"],"entities":"{\"comment\":\"~ awaiting user\",\"reporter\":\"NOT currentUser()\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::VOTE.2","fields":{"description":"Personal watchlist of voted issues still pending resolution","why":"Allows users to track issues they care about","entities_flat":["voter:currentUser","status:unresolved"],"synonyms":["my voted issues","personal interest items"],"section":"Voting & Popularity","jql_fields":["voter","resolution"],"notes":"Tracks personal interest in unresolved issues via voting history","jql":"voter = currentUser() AND resolution IS EMPTY","id":"VOTE.2","nlq":"Issues I voted for that are still unresolved","query_summary":"Natural query: 'Issues I voted for that are still unresolved'. Personal voting tracking. Purpose: Personal issue interest monitoring.","paraphrases":["Show issues I voted for that remain open","List my unresolved voted items"],"intents":["voting","personal","tracking"],"entities":"{\"voter\":\"currentUser\",\"status\":\"unresolved\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.2","fields":{"description":"All currently open sprints.","why":"Quick way to gather all work happening in active sprints.","entities_flat":["sprint:openSprints()"],"synonyms":["ongoing sprints","active sprints"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint"],"notes":"openSprints() dynamically resolves to all currently open sprints across boards.","jql":"sprint IN openSprints()","id":"G.2","nlq":"Issues in open sprints","query_summary":"Natural query: 'Issues in open sprints'. Synonyms: ongoing sprints, active sprints. Paraphrases: 'Show issues in open sprints', 'List tickets in active sprints'. This JQL filters issues where sprint is in openSprints(). Field: sprint. Entity: openSprints(). Purpose: Useful for reporting on current sprint activity.","paraphrases":["Show issues in open sprints","List tickets in active sprints"],"intents":["browse","sprint"],"entities":"{\"sprint\":\"openSprints()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::RT.2","fields":{"description":"Critical SLA deadline monitoring","why":"Critical SLA management and emergency response.","entities_flat":["Time to resolution:remaining(1h)"],"synonyms":["urgent SLA deadline","immediate resolution needed"],"section":"N. Remaining Time and SLA Advanced","jql_fields":["Time to resolution"],"notes":"remaining() function shows time left before SLA breach","jql":"\"Time to resolution\" <= remaining(1h)","id":"RT.2","nlq":"Tickets expiring in less than 1 hour resolution time","query_summary":"Natural query: 'Tickets expiring in less than 1 hour resolution time'. Shows service requests requiring immediate attention to avoid SLA breach.","paraphrases":["Show tickets about to breach SLA","Find urgent resolution deadlines"],"intents":["browse","sla","urgent"],"entities":"{\"Time to resolution\":\"remaining(1h)\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::I.6","fields":{"description":"Shows duplicates pointing to an issue.","why":"Important for bug deduplication and cleanup.","entities_flat":["linkedIssue:DELTA-5","linkType:duplicates"],"synonyms":["tickets duplicating DELTA-5","duplicate reports of DELTA-5"],"section":"I. Linking & Dependencies","jql_fields":["issueLink"],"notes":"Distinguishes duplicates vs is duplicated by (direction matters).","jql":"issue IN linkedIssues(DELTA-5, \"duplicates\")","id":"I.6","nlq":"Duplicate issues of DELTA-5","query_summary":"Natural query: 'Duplicate issues of DELTA-5'. Synonyms: tickets duplicating DELTA-5, duplicate reports of DELTA-5. Paraphrases: 'Find issues marked as duplicates of DELTA-5', 'List duplicate tickets of DELTA-5'. This JQL retrieves issues linked to DELTA-5 via 'duplicates'. Field: issueLink. Entities: DELTA-5, duplicates. Purpose: Useful for identifying redundant tickets.","paraphrases":["Find issues marked as duplicates of DELTA-5","List duplicate tickets of DELTA-5"],"intents":["browse","linkedIssues","duplicates"],"entities":"{\"linkedIssue\":\"DELTA-5\",\"linkType\":\"duplicates\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.8","fields":{"description":"Stale WIP.","why":"Helps teams detect stalled or neglected tasks.","entities_flat":["updated:<= -14d","statusCategory:!= Done"],"synonyms":["stale issues","inactive work"],"section":"P. Examples Combining Many Concepts","jql_fields":["updated","statusCategory"],"notes":"Good for identifying stalled work in progress.","jql":"updated <= -14d AND statusCategory != Done","id":"P.8","nlq":"Issues with no activity for 14 days and not done","query_summary":"Natural query: 'Issues with no activity for 14 days and not done'. Synonyms: stale issues, inactive work. Paraphrases: 'Show issues inactive for 14 days and unresolved', 'List tickets with no updates in 14 days not in Done'. This JQL filters issues with no updates in 14 days where statusCategory != Done. Fields: updated, statusCategory. Entities: <= -14d, != Done. Purpose: Useful for surfacing neglected work.","paraphrases":["Show issues inactive for 14 days and unresolved","List tickets with no updates in 14 days not in Done"],"intents":["browse","status","updated"],"entities":"{\"updated\":\"<= -14d\",\"statusCategory\":\"!= Done\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.9","fields":{"description":"Tickets explicitly watched by the user.","why":"Helps track issues of interest, even if not directly assigned.","entities_flat":["watcher:currentUser()"],"synonyms":["watched tickets","my watchlist"],"section":"J. Users, Groups, Teams","jql_fields":["watcher"],"notes":"Watcher field requires Jira permissions; not always available.","jql":"watcher = currentUser()","id":"J.9","nlq":"Issues I watch","query_summary":"Natural query: 'Issues I watch'. Synonyms: watched tickets, my watchlist. Paraphrases: 'List issues I watch', 'Show tickets in my watchlist'. This JQL filters issues where the current user is a watcher. Field: watcher. Entity: currentUser(). Purpose: Useful for monitoring issues indirectly relevant to you.","paraphrases":["List issues I watch","Show tickets in my watchlist"],"intents":["browse","watcher"],"entities":"{\"watcher\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.7","fields":{"description":"Label or text fallback.","why":"Quick way to find customer-specific items.","entities_flat":["labels:customer-acme","text:Acme"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["labels","text"],"jql":"labels = customer-acme OR text ~ \"Acme\"","id":"S.7","nlq":"Issues tagged with customer name Acme","query_summary":"Show issues labeled customer-acme or containing 'Acme' in text.","intents":["browse","labels","text"],"entities":"{\"labels\":\"customer-acme\",\"text\":\"Acme\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.12","fields":{"description":"Filters by resolution change events within current month.","why":"Supports auditing resolution changes and workflow updates.","entities_flat":["resolution:Done","timeframe:startOfMonth() to now()"],"synonyms":["resolution updated to Done","marked as done this month"],"section":"B. Time & Date Filters","jql_fields":["resolution"],"jql":"resolution CHANGED TO Done DURING (startOfMonth(), now())","id":"B.12","nlq":"Issues whose resolution changed to Done this month","query_summary":"Natural query: 'Issues whose resolution changed to Done this month'. Synonyms: resolution updated to Done, marked as done this month. Paraphrases: 'Show issues resolved as Done this month', 'List tickets where resolution was set to Done recently'. This JQL uses resolution CHANGED TO Done DURING (startOfMonth(), now()) to find issues that had their resolution set this month. Purpose: helpful for monthly resolution audits.","paraphrases":["Show issues resolved as Done this month","List tickets where resolution was set to Done recently"],"intents":["time","resolution","history"],"entities":"{\"resolution\":\"Done\",\"timeframe\":\"startOfMonth() to now()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TS.1","fields":{"description":"Search for specific exception in bug descriptions","why":"Bug categorization and error pattern analysis.","entities_flat":["issuetype:Bug","description:NullPointerException"],"synonyms":["NPE bugs","null pointer exception bugs"],"section":"D. Text Search and Field Operations","jql_fields":["issuetype","description"],"notes":"description ~ searches within description field specifically","jql":"issuetype = Bug AND description ~ \"NullPointerException\"","id":"TS.1","nlq":"Bugs mentioning NullPointerException in description","query_summary":"Natural query: 'Bugs mentioning NullPointerException in description'. Searches for specific exception types in bug descriptions.","paraphrases":["Show bugs with NullPointerException","Find null pointer bugs"],"intents":["browse","text","exception"],"entities":"{\"issuetype\":\"Bug\",\"description\":\"NullPointerException\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.8","fields":{"description":"Sort by most recent resolution date.","why":"Helps surface issues that were just closed for verification or review.","entities_flat":["resolved:DESC"],"synonyms":["latest resolved first","recently closed first"],"section":"F. Sorting & Ordering","jql_fields":["resolved"],"jql":"ORDER BY resolved DESC","id":"F.8","nlq":"Recently resolved first","query_summary":"Natural query: 'Recently resolved first'. Synonyms: latest resolved first, recently closed first. Paraphrases: 'List issues resolved most recently', 'Order tickets by resolution date descending'. This JQL sorts issues by resolved field in descending order. Field: resolved. Entity: DESC. Purpose: Useful for tracking freshly closed issues.","paraphrases":["List issues resolved most recently","Order tickets by resolution date descending"],"intents":["sort","resolved"],"entities":"{\"resolved\":\"DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.2","fields":{"description":"Multi-valued custom field.","why":"Helps prioritize work by customer importance.","entities_flat":["Customer Tier:Gold","Customer Tier:Platinum"],"synonyms":["premium customer","high-value tier"],"section":"L. Custom Fields","jql_fields":["Customer Tier"],"notes":"Customer Tier must be configured as a custom field; values are instance-specific.","jql":"\"Customer Tier\" IN (Gold, Platinum)","id":"L.2","nlq":"Customer Tier is Gold or Platinum","query_summary":"Natural query: 'Customer Tier is Gold or Platinum'. Synonyms: premium customer, high-value tier. Paraphrases: 'Show issues where customer tier is Gold or Platinum', 'List tickets tagged with premium tiers'. This JQL filters issues where Customer Tier is either Gold or Platinum. Field: Customer Tier. Entities: Gold, Platinum. Purpose: Useful for prioritizing work from high-value customers.","paraphrases":["Show issues where customer tier is Gold or Platinum","List tickets tagged with premium tiers"],"intents":["browse","customfield","categorical"],"entities":"{\"Customer Tier\":[\"Gold\",\"Platinum\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.4","fields":{"description":"Requires ScriptRunner; alt: report via boards.","why":"Highlights epics that exist but do not contain any child issues, for cleanup or review.","entities_flat":["issuetype:Epic","issueFunction:NOT IN hasSubtasks()"],"synonyms":["empty epics","epics without children"],"section":"H. Epics, Parents & Subtasks","jql_fields":["issuetype","issueFunction"],"notes":"Requires ScriptRunner for NOT IN hasSubtasks(). Alternative is to use Agile board reports.","jql":"issuetype = Epic AND issueFunction NOT IN hasSubtasks()","id":"H.4","nlq":"Epics without any stories","query_summary":"Natural query: 'Epics without any stories'. Synonyms: empty epics, epics without children. Paraphrases: 'List epics with no stories', 'Find epics without any child issues'. This JQL requires ScriptRunner and filters Epics that do not have subtasks/children. Fields: issuetype, issueFunction. Entities: Epic, NOT IN hasSubtasks(). Purpose: Useful for spotting unused or empty epics.","paraphrases":["List epics with no stories","Find epics without any child issues"],"intents":["browse","epic","subtask"],"entities":"{\"issuetype\":\"Epic\",\"issueFunction\":\"NOT IN hasSubtasks()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::QS.2","fields":{"description":"Find bugs lacking reproduction information","why":"Bug report quality and reproducibility assurance.","entities_flat":["issuetype:Bug","Steps to Reproduce:EMPTY","description:!~ repro"],"synonyms":["bugs without repro","incomplete bug reports"],"section":"Q. Quality and Missing Information Patterns","jql_fields":["issuetype","Steps to Reproduce","description"],"notes":"Combines custom field check with text pattern search","jql":"issuetype = Bug AND (\"Steps to Reproduce\" IS EMPTY OR description !~ \"repro\")","id":"QS.2","nlq":"Bugs without reproduction steps","query_summary":"Natural query: 'Bugs without reproduction steps'. Finds bug reports that need reproduction information.","paraphrases":["Show bugs missing reproduction steps","Find incomplete bug information"],"intents":["browse","quality","reproduction"],"entities":"{\"issuetype\":\"Bug\",\"Steps to Reproduce\":\"EMPTY\",\"description\":\"!~ repro\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ATT.1","fields":{"description":"Find bugs that have log file attachments for debugging","why":"Essential for finding bugs with diagnostic information","entities_flat":["issuetype:Bug","attachment_type:log files"],"synonyms":["bugs with logs","log file bugs","debugging attachments"],"section":"Attachments","jql_fields":["issuetype","attachments"],"notes":"Uses wildcard pattern matching for file extensions in attachments","jql":"issuetype = Bug AND attachments ~ \"*.log\"","id":"ATT.1","nlq":"Bugs with log file attachments","query_summary":"Natural query: 'Bugs with log file attachments'. Uses attachment wildcard matching. Purpose: Debugging and diagnostic file tracking.","paraphrases":["Show bugs containing log files","List bug reports with log attachments"],"intents":["attachment","debugging","logs"],"entities":"{\"issuetype\":\"Bug\",\"attachment_type\":\"log files\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::VS.1","fields":{"description":"Find work targeted for future releases","why":"Release planning and future work tracking.","entities_flat":["fixVersion:unreleasedVersions()"],"synonyms":["future release work","upcoming version issues"],"section":"J. Version and Sprint Management","jql_fields":["fixVersion"],"notes":"unreleasedVersions() function finds future releases","jql":"fixVersion IN unreleasedVersions()","id":"VS.1","nlq":"Issues in unreleased versions","query_summary":"Natural query: 'Issues in unreleased versions'. Shows work targeted for versions not yet released.","paraphrases":["Show work for unreleased versions","Find future release items"],"intents":["browse","version","release"],"entities":"{\"fixVersion\":\"unreleasedVersions()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.1","fields":{"description":"Targets future releases.","why":"Helps track items still planned for upcoming releases.","entities_flat":["fixVersion:unreleasedVersions()"],"synonyms":["upcoming releases","future versions"],"section":"E. Versions, Components, Labels","jql_fields":["fixVersion"],"notes":"unreleasedVersions() dynamically finds versions not marked as released.","jql":"fixVersion IN unreleasedVersions()","id":"E.1","nlq":"In unreleased Fix Versions","query_summary":"Natural query: 'In unreleased Fix Versions'. Synonyms: upcoming releases, future versions. Paraphrases: 'Show issues in unreleased fix versions', 'List tickets scheduled for future releases'. This JQL filters issues where fixVersion is in unreleasedVersions(). Fields: fixVersion. Entity: unreleasedVersions(). Purpose: Useful for release planning and backlog management.","paraphrases":["Show issues in unreleased fix versions","List tickets scheduled for future releases"],"intents":["browse","fixVersion"],"entities":"{\"fixVersion\":\"unreleasedVersions()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::DD.1","fields":{"description":"Find tasks significantly overdue","why":"Escalation management and deadline tracking.","entities_flat":["issuetype:Task","duedate:< startOfDay(-5d)","resolution:EMPTY"],"synonyms":["severely overdue tasks","long overdue items"],"section":"G. Due Date and Overdue Patterns","jql_fields":["issuetype","duedate","resolution"],"notes":"startOfDay(-5d) calculates date 5 days ago","jql":"issuetype = Task AND duedate < startOfDay(-5d) AND resolution IS EMPTY","id":"DD.1","nlq":"Tasks overdue by more than 5 days","query_summary":"Natural query: 'Tasks overdue by more than 5 days'. Finds unresolved tasks with due dates more than 5 days past.","paraphrases":["Show tasks overdue more than 5 days","Find severely delayed tasks"],"intents":["browse","overdue","deadline"],"entities":"{\"issuetype\":\"Task\",\"duedate\":\"< startOfDay(-5d)\",\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.21","fields":{"description":"Tracks status transitions within a time range.","why":"Enables filtering based on workflow transitions, not just current status.","entities_flat":["from_status:In Progress","to_status:Done","timeframe:-1w"],"synonyms":["workflow change","transition","status shift"],"section":"A. Basic Filters","jql_fields":["status"],"notes":"Requires history indexing; standard JQL supports CHANGED operator.","jql":"status CHANGED FROM \"In Progress\" TO \"Done\" DURING (-1w, now())","id":"A.21","nlq":"Issues that moved from In Progress to Done last week","query_summary":"Natural query: 'Issues that moved from In Progress to Done last week'. Synonyms: workflow change, transition, status shift. Paraphrases: 'Show items moved from In Progress to Done last week', 'Which tickets transitioned from In Progress to Done recently'. This JQL uses CHANGED FROM/TO with DURING to filter issues that transitioned between statuses in a given timeframe. Purpose: useful for analyzing workflow transitions in agile reporting.","paraphrases":["Show items moved from In Progress to Done last week","Which tickets transitioned from In Progress to Done recently"],"intents":["browse","status","history"],"entities":"{\"from_status\":\"In Progress\",\"to_status\":\"Done\",\"timeframe\":\"-1w\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.23","fields":{"description":"Tracks fresh subtasks under unfinished parents.","why":"Helps check for newly created subtasks under incomplete parents.","entities_flat":["issuetype:Sub-task","created:>= -7d","parent.statusCategory:!= Done"],"synonyms":["new subtasks with active parent","recent subtasks under open items"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","created","parent.statusCategory"],"notes":"Parent link must be correctly configured; relies on statusCategory of parent issue.","jql":"issuetype = Sub-task AND created >= -7d AND parent.statusCategory != Done","id":"S.23","nlq":"Recently created subtasks without parent done","query_summary":"Natural query: 'Recently created subtasks without parent done'. Synonyms: new subtasks with active parent, recent subtasks under open items. Paraphrases: 'Show subtasks created in last 7 days under non-done parents', 'List recent subtasks linked to active parent issues'. This JQL filters subtasks created in last 7 days where parent’s statusCategory != Done. Fields: issuetype, created, parent.statusCategory. Entities: Sub-task, >= -7d, != Done. Purpose: Useful for monitoring backlog health.","paraphrases":["Show subtasks created in last 7 days under non-done parents","List recent subtasks linked to active parent issues"],"intents":["browse","issuetype","created","parent"],"entities":"{\"issuetype\":\"Sub-task\",\"created\":\">= -7d\",\"parent.statusCategory\":\"!= Done\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::C.4","fields":{"description":"NOT condition.","why":"Filter out Documentation issues when focusing on other work items.","entities_flat":["issuetype:!= Documentation"],"synonyms":["exclude documentation issues","everything but docs"],"section":"C. Logical Combinations & Set Ops","jql_fields":["issuetype"],"notes":"!= operator excludes issues matching the value.","jql":"issuetype != Documentation","id":"C.4","nlq":"Anything except Documentation","query_summary":"Natural query: 'Anything except Documentation'. Synonyms: exclude documentation issues, everything but docs. Paraphrases: 'List issues not of type Documentation', 'Show all items except Documentation'. This JQL filters issues where issuetype is not equal to Documentation. Fields involved: issuetype. Entity value: != Documentation. Purpose: Useful when excluding docs tasks from development views.","paraphrases":["List issues not of type Documentation","Show all items except Documentation"],"intents":["browse","issuetype"],"entities":"{\"issuetype\":\"!= Documentation\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::I.7","fields":{"description":"Requires ScriptRunner. Expands links from saved filter results.","why":"Covers large-scale dependency mapping from saved filters.","entities_flat":["filter:Critical Bugs","function:linkedIssuesOf"],"synonyms":["dependencies of critical bugs","links from filter Critical Bugs"],"section":"I. Linking & Dependencies","jql_fields":["issueFunction","filter"],"notes":"ScriptRunner-only; powerful for bulk dependency analysis.","jql":"issueFunction IN linkedIssuesOf(\"filter = 'Critical Bugs'\")","id":"I.7","nlq":"Issues linked to all items in filter 'Critical Bugs'","query_summary":"Natural query: 'Issues linked to all items in filter Critical Bugs'. Synonyms: dependencies of critical bugs, links from filter Critical Bugs. Paraphrases: 'List issues linked to filter Critical Bugs', 'Show tickets connected to issues in Critical Bugs filter'. This JQL requires ScriptRunner and expands linked issues of a filter. Fields: issueFunction, filter. Entities: linkedIssuesOf(), Critical Bugs. Purpose: Useful for dependency analysis across a whole filter.","paraphrases":["List issues linked to filter Critical Bugs","Show tickets connected to issues in Critical Bugs filter"],"intents":["browse","linkedIssues","function"],"entities":"{\"filter\":\"Critical Bugs\",\"function\":\"linkedIssuesOf\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::R.1","fields":{"description":"Filter issues in one project.","entities_flat":["project:{PROJECT}"],"section":"R. Small Template Bank","jql_fields":["project"],"jql":"project = {PROJECT}","id":"R.1","nlq":"Filter by single project","query_summary":"Template to filter issues by a single project key.","intents":["browse","project"],"entities":"{\"project\":\"{PROJECT}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::I.5","fields":{"description":"Loose association link.","why":"Covers common non-dependency links which were missing before.","entities_flat":["linkedIssue:GAMMA-9","linkType:relates to"],"synonyms":["associated with GAMMA-9","loosely related tickets"],"section":"I. Linking & Dependencies","jql_fields":["issueLink"],"notes":"‘Relates to’ is a neutral/non-hierarchical link.","jql":"issue IN linkedIssues(GAMMA-9, \"relates to\")","id":"I.5","nlq":"Issues related to GAMMA-9","query_summary":"Natural query: 'Issues related to GAMMA-9'. Synonyms: associated with GAMMA-9, loosely related tickets. Paraphrases: 'Show issues related to GAMMA-9', 'List tickets that loosely connect with GAMMA-9'. This JQL finds issues linked to GAMMA-9 with type 'relates to'. Field: issueLink. Entities: GAMMA-9, relates to. Purpose: Useful for showing general relationships.","paraphrases":["Show issues related to GAMMA-9","List tickets that loosely connect with GAMMA-9"],"intents":["browse","linkedIssues"],"entities":"{\"linkedIssue\":\"GAMMA-9\",\"linkType\":\"relates to\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.10","fields":{"description":"No assignee set.","why":"Helps identify tickets that are not yet owned by anyone.","entities_flat":["assignee:EMPTY"],"synonyms":["unowned issues","not assigned","without assignee"],"section":"A. Basic Filters","jql_fields":["assignee"],"notes":"Empty assignee is the canonical way to check unassigned state.","jql":"assignee IS EMPTY","id":"A.10","nlq":"Unassigned issues","query_summary":"Natural query: 'Unassigned issues'. Synonyms: unowned issues, not assigned, without assignee. Paraphrases: 'Show unassigned tickets', 'List issues without owners', 'Unowned items'. This JQL filters issues where the assignee field is empty. Fields involved: assignee. Entity value: EMPTY. Purpose: Commonly used by managers to assign work to team members.","paraphrases":["Show unassigned tickets","List issues without owners","Unowned items"],"intents":["browse","assignee"],"entities":"{\"assignee\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.2","fields":{"description":"All subtasks of a parent.","why":"Fetches all subtasks under a specific parent task.","entities_flat":["parent:TASK-99","issuetype:subTaskIssueTypes()"],"synonyms":["subtasks of TASK-99","children of TASK-99"],"section":"H. Epics, Parents & Subtasks","jql_fields":["parent","issuetype"],"notes":"subTaskIssueTypes() dynamically includes all subtask issue types.","jql":"parent = TASK-99 AND issuetype IN subTaskIssueTypes()","id":"H.2","nlq":"Subtasks under TASK-99","query_summary":"Natural query: 'Subtasks under TASK-99'. Synonyms: subtasks of TASK-99, children of TASK-99. Paraphrases: 'Show subtasks under TASK-99', 'List child issues of TASK-99'. This JQL filters issues where parent equals TASK-99 and issuetype belongs to subTaskIssueTypes(). Fields: parent, issuetype. Entities: TASK-99, subTaskIssueTypes(). Purpose: Useful for drilling into task breakdown.","paraphrases":["Show subtasks under TASK-99","List child issues of TASK-99"],"intents":["browse","subtask","parent"],"entities":"{\"parent\":\"TASK-99\",\"issuetype\":\"subTaskIssueTypes()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::LINK.1","fields":{"description":"Large epics with many children that remain unresolved","why":"Identifies large-scope work requiring management attention","entities_flat":["issuetype:Epic","link_count:20","status:open"],"synonyms":["large epics","complex features","multi-story epics"],"section":"Advanced Linking","jql_fields":["issuetype","linkedIssue.count","resolution"],"notes":"Uses link counting to identify scope and complexity","jql":"issuetype = Epic AND linkedIssue.count > 20 AND resolution IS EMPTY","id":"LINK.1","nlq":"Epics with more than 20 linked stories but still open","query_summary":"Natural query: 'Epics with more than 20 linked stories but still open'. Epic scope management. Purpose: Large initiative tracking.","paraphrases":["Show epics with many stories still open","List complex unresolved epics"],"intents":["linking","epic","scope"],"entities":"{\"issuetype\":\"Epic\",\"link_count\":\"20\",\"status\":\"open\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::A.22","fields":{"description":"Bugs marked Fixed but not mapped to any release.","why":"Helps detect release management gaps.","entities_flat":["issuetype:Bug","resolution:Fixed","fixVersion:EMPTY"],"synonyms":["fixed bugs without release","resolved without version"],"section":"A. Basic Filters","jql_fields":["issuetype","resolution","fixVersion"],"jql":"issuetype = Bug AND resolution = Fixed AND fixVersion IS EMPTY","id":"A.22","nlq":"Bugs resolved as Fixed without a version","query_summary":"Natural query: 'Bugs resolved as Fixed without a version'. Synonyms: fixed bugs without release, resolved without version. Paraphrases: 'Show bugs fixed but not assigned to a version', 'List resolved issues missing fixVersion'. This JQL combines resolution = Fixed with fixVersion IS EMPTY to find bugs that were resolved but never attached to a release version. Purpose: useful for release quality checks and gap detection.","paraphrases":["Show bugs fixed but not assigned to a version","List resolved issues missing fixVersion"],"intents":["browse","resolution","fixVersion"],"entities":"{\"issuetype\":\"Bug\",\"resolution\":\"Fixed\",\"fixVersion\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.5","fields":{"description":"Filters by project key.","why":"Restricts query results to one project scope.","entities_flat":["project:ALPHA"],"synonyms":["tickets","items","bugs"],"section":"A. Basic Filters","jql_fields":["project"],"notes":"Use the project KEY (e.g., ALPHA), not the project display name.","jql":"project = ALPHA","id":"A.5","nlq":"Issues in project ALPHA","query_summary":"Natural query: 'Issues in project ALPHA'. Synonyms: tickets, items, bugs. Paraphrases: 'List issues in project ALPHA', 'Tickets under ALPHA project', 'All items in ALPHA'. This JQL retrieves issues where the project field equals ALPHA. Fields involved: project. Entity value: ALPHA. Purpose: Commonly used for project-specific dashboards and reporting.","paraphrases":["List issues in project ALPHA","Tickets under ALPHA project","All items in ALPHA"],"intents":["browse","project"],"entities":"{\"project\":\"ALPHA\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::CC.1","fields":{"description":"Find heavily discussed issues","why":"Collaboration intensity and discussion tracking.","entities_flat":["comment:*","commentCount:> 20"],"synonyms":["heavily discussed issues","issues with many comments"],"section":"K. Comment and Communication Tracking","jql_fields":["comment","commentCount"],"notes":"Requires app/property that tracks comment counts","jql":"comment ~ \"*\" AND issueProperty[commentCount] > 20","id":"CC.1","nlq":"Issues with more than 20 comments","query_summary":"Natural query: 'Issues with more than 20 comments'. Identifies issues with extensive discussion and collaboration.","paraphrases":["Show issues with lots of discussion","Find heavily commented items"],"intents":["browse","comment","discussion"],"entities":"{\"comment\":\"*\",\"commentCount\":\"> 20\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.25","fields":{"description":"Captures escalation of priority over time.","why":"Important for tracking escalation trends.","entities_flat":["previous_priority:Medium","current_priority:High"],"synonyms":["escalated issues","priority increased"],"section":"A. Basic Filters","jql_fields":["priority"],"jql":"priority WAS Medium AND priority = High","id":"A.25","nlq":"Issues where priority was Medium but is now High","query_summary":"Natural query: 'Issues where priority was Medium but is now High'. Synonyms: escalated issues, priority increased. Paraphrases: 'Show tickets escalated to High from Medium', 'List issues with priority raised to High'. This JQL uses the WAS operator on priority combined with current value = High to identify escalations. Purpose: monitoring issue severity increases over time.","paraphrases":["Show tickets escalated to High from Medium","List issues with priority raised to High"],"intents":["browse","priority","history"],"entities":"{\"previous_priority\":\"Medium\",\"current_priority\":\"High\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SLA.3","fields":{"description":"SLA urgency tracking for requests close to deadline","why":"Enables proactive SLA management before breaches occur","entities_flat":["sla_field:Time to resolution","time_remaining:30m","status:unresolved"],"synonyms":["SLA deadline approaching","resolution time running out","urgent SLA items"],"section":"SLA Management","jql_fields":["Time to resolution","resolution"],"notes":"Uses remaining() function to track SLA countdown for proactive management","jql":"\"Time to resolution\" <= remaining(30m) AND resolution IS EMPTY","id":"SLA.3","nlq":"Requests with less than 30 minutes remaining on SLA countdown","query_summary":"Natural query: 'Requests with less than 30 minutes remaining on SLA countdown'. Uses remaining() function to identify urgent items. Purpose: Proactive SLA breach prevention.","paraphrases":["Show requests close to SLA breach","List tickets with little SLA time left"],"intents":["sla","urgency","remaining"],"entities":"{\"sla_field\":\"Time to resolution\",\"time_remaining\":\"30m\",\"status\":\"unresolved\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::AI.11","fields":{"description":"Specific dependency link type for task relationships","why":"Provides correct dependency relationship syntax","entities_flat":["ABC-123","depends on"],"synonyms":["dependencies","blocked"],"section":"AI. Accuracy Improvements - Dependencies","jql_fields":["linkedIssues"],"notes":"Use specific link types like 'depends on' for dependency relationships","jql":"issue in linkedIssues(ABC-123, \"depends on\")","id":"AI.11","nlq":"Tasks dependent on epic ABC-123","query_summary":"Natural query: 'Tasks dependent on epic ABC-123'. Synonyms: dependencies, blocked. This JQL finds dependency relationships. Fields: linkedIssues. Entity: ABC-123.","paraphrases":["Issues depending on ABC-123","Tasks blocked by ABC-123"],"intents":["relationships","dependencies"],"entities":"\"{\\\"epic\\\": \\\"ABC-123\\\", \\\"linktype\\\": \\\"depends on\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.9","fields":{"description":"Negated text search scoped to description field.","why":"Lets you filter out exploratory or spike tasks from searches.","entities_flat":["description:!~ spike"],"synonyms":["exclude spikes","remove spike mentions"],"section":"D. Text & Content Search","jql_fields":["description"],"jql":"description !~ \"spike\"","id":"D.9","nlq":"Description does not contain spike","query_summary":"Natural query: 'Description does not contain spike'. Synonyms: exclude spikes, remove spike mentions. Paraphrases: 'Find issues whose description does not mention spike', 'Show tickets excluding spike in details'. This JQL filters issues where the description field does not contain 'spike'. Fields: description. Purpose: Useful to exclude exploratory tickets.","paraphrases":["Find issues whose description does not mention spike","Show tickets excluding spike in details"],"intents":["search","description"],"entities":"{\"description\":\"!~ spike\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.9","fields":{"description":"Open bugs tied to future releases.","why":"Mixes fixVersion, type, and resolution for targeted release-quality checks.","entities_flat":["issuetype:Bug","fixVersion:unreleasedVersions()","resolution:EMPTY"],"synonyms":["unresolved future bugs","open bugs in unreleased versions"],"section":"E. Versions, Components, Labels","jql_fields":["issuetype","fixVersion","resolution"],"jql":"issuetype = Bug AND fixVersion IN unreleasedVersions() AND resolution IS EMPTY","id":"E.9","nlq":"Bugs in unreleased versions that are still open","query_summary":"Natural query: 'Bugs in unreleased versions that are still open'. Synonyms: unresolved future bugs, open bugs in unreleased versions. Paraphrases: 'Show open bugs scheduled for unreleased versions', 'List unresolved bugs planned for future releases'. This JQL filters issues where issuetype is Bug, fixVersion is in unreleasedVersions(), and resolution is EMPTY. Fields: issuetype, fixVersion, resolution. Purpose: Useful for release readiness assessments.","paraphrases":["Show open bugs scheduled for unreleased versions","List unresolved bugs planned for future releases"],"intents":["browse","fixVersion","issuetype","resolution"],"entities":"{\"issuetype\":\"Bug\",\"fixVersion\":\"unreleasedVersions()\",\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.4","fields":{"description":"Any status whose category is Done (broader than a single status name).","why":"Captures all workflow statuses mapped under Done category, not just a single Closed label.","entities_flat":["statusCategory:Done"],"synonyms":["completed issues","finished tasks","resolved tickets"],"section":"A. Basic Filters","jql_fields":["statusCategory"],"notes":"statusCategory is broader than status, covers multiple workflow statuses that belong to Done category.","jql":"statusCategory = Done","id":"A.4","nlq":"All done items","query_summary":"Natural query: 'All done items'. Synonyms: completed issues, finished tasks, resolved tickets. Paraphrases: 'List all done issues', 'Items that are complete', 'Tasks marked finished'. This JQL retrieves issues where the status category is Done. Fields involved: statusCategory. Entity value: Done. Purpose: Useful for measuring completed work across different workflows.","paraphrases":["List all done issues","Items that are complete","Tasks marked finished"],"intents":["browse","status"],"entities":"{\"statusCategory\":\"Done\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::N.6","fields":{"description":"Detects issues without supporting files.","why":"Ensures issues have necessary supporting documentation.","entities_flat":["attachments:EMPTY"],"synonyms":["no attachments","issues without files"],"section":"N. Quality & Hygiene Queries","jql_fields":["attachments"],"notes":"Useful in QA or bug triage contexts where screenshots/logs are expected.","jql":"attachments IS EMPTY","id":"N.6","nlq":"Issues missing attachments","query_summary":"Natural query: 'Issues missing attachments'. Synonyms: no attachments, issues without files. Paraphrases: 'Show tickets missing attachments', 'List issues with no attached files'. This JQL filters issues where attachments field is empty. Field: attachments. Entity: EMPTY. Purpose: Useful for enforcing documentation quality in issue tracking.","paraphrases":["Show tickets missing attachments","List issues with no attached files"],"intents":["browse","quality","attachments"],"entities":"{\"attachments\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.6","fields":{"description":"Multi-key ordering.","why":"Organizes work by owner first, then prioritizes within each owner’s set.","entities_flat":["assignee:ASC","priority:DESC"],"synonyms":["sort by owner and severity"],"section":"F. Sorting & Ordering","jql_fields":["assignee","priority"],"notes":"ORDER BY can take multiple fields, combining ascending and descending order.","jql":"ORDER BY assignee ASC, priority DESC","id":"F.6","nlq":"Sort by assignee then priority","query_summary":"Natural query: 'Sort by assignee then priority'. Synonyms: sort by owner and severity. Paraphrases: 'List issues grouped by assignee and sorted by priority', 'Order tickets by assignee then priority'. This JQL sorts issues by assignee in ascending order and within each assignee by priority in descending order. Fields: assignee, priority. Entities: ASC, DESC. Purpose: Useful for workload balancing and prioritization.","paraphrases":["List issues grouped by assignee and sorted by priority","Order tickets by assignee then priority"],"intents":["sort","assignee","priority"],"entities":"{\"assignee\":\"ASC\",\"priority\":\"DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.11","fields":{"description":"Logical OR across multiple text fields.","why":"Expands text search across multiple fields in one query.","entities_flat":["summary:~ login","description:~ login"],"synonyms":["login keyword search"],"section":"D. Text & Content Search","jql_fields":["summary","description"],"jql":"(summary ~ \"login\" OR description ~ \"login\")","id":"D.11","nlq":"Summary or description contains login","query_summary":"Natural query: 'Summary or description contains login'. Synonyms: login keyword search. Paraphrases: 'Find issues with login in title or description', 'Tickets mentioning login anywhere in summary or details'. This JQL checks summary OR description fields for login. Fields: summary, description. Purpose: Useful for searching across multiple text fields.","paraphrases":["Find issues with login in title or description","Tickets mentioning login anywhere in summary or details"],"intents":["search","summary","description"],"entities":"{\"summary\":\"~ login\",\"description\":\"~ login\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.18","fields":{"description":"Uses wildcard on affectedVersion.","why":"Find issues impacted by a range of product versions.","entities_flat":["affectedVersion:3.*"],"synonyms":["impacted version","version affected","release impacted"],"section":"A. Basic Filters","jql_fields":["affectedVersion"],"notes":"Use ~ for wildcard matches, e.g., all 3.x releases.","jql":"affectedVersion ~ \"3.*\"","id":"A.18","nlq":"Affected by version 3.x","query_summary":"Natural query: 'Affected by version 3.x'. Synonyms: impacted version, version affected, release impacted. Paraphrases: 'List issues affected by 3.x', 'Tickets with affected version 3.x', 'Show bugs impacted by 3.x'. This JQL filters issues where affectedVersion matches wildcard 3.*. Fields involved: affectedVersion. Entity value: 3.*. Purpose: Used for tracking regression issues across a major release line.","paraphrases":["List issues affected by 3.x","Tickets with affected version 3.x","Show bugs impacted by 3.x"],"intents":["browse","affectedVersion"],"entities":"{\"affectedVersion\":\"3.*\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ATT.3","fields":{"description":"Find issues with text documentation but no visual evidence","why":"Ensures complete documentation with both text and visual evidence","entities_flat":["has_attachment:PDF","missing_attachment:screenshots"],"synonyms":["PDF without images","text docs missing visuals"],"section":"Attachments","jql_fields":["attachments"],"notes":"Uses positive and negative attachment filtering","jql":"attachments ~ \"*.pdf\" AND attachments !~ \"*.jpg AND *.png AND *.gif\"","id":"ATT.3","nlq":"Issues with PDF documentation but missing screenshots","query_summary":"Natural query: 'Issues with PDF documentation but missing screenshots'. Uses attachment inclusion/exclusion. Purpose: Documentation completeness validation.","paraphrases":["Show issues with PDFs but no screenshots","List documentation without visual evidence"],"intents":["attachment","documentation","missing"],"entities":"{\"has_attachment\":\"PDF\",\"missing_attachment\":\"screenshots\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.8","fields":{"description":"Absolute date range filter on created field.","why":"Provides explicit date range filtering for reporting and audits.","entities_flat":["created_range:2023-05-01","created_range:2023-05-15"],"synonyms":["issues created in early May 2023","tickets filed in first half of May 2023"],"section":"B. Time & Date Filters","jql_fields":["created"],"jql":"created >= \"2023-05-01\" AND created <= \"2023-05-15\"","id":"B.8","nlq":"Issues created between May 1, 2023 and May 15, 2023","query_summary":"Natural query: 'Issues created between May 1, 2023 and May 15, 2023'. Synonyms: issues created in early May 2023, tickets filed in first half of May 2023. Paraphrases: 'Show issues created May 1–15, 2023', 'List items added between 1st and 15th May 2023'. This JQL filters using created >= and created <= to capture issues within an absolute date range. Purpose: useful for reporting audits and historical analysis.","paraphrases":["Show issues created May 1–15, 2023","List items added between 1st and 15th May 2023"],"intents":["time","created"],"entities":"{\"created_range\":[\"2023-05-01\",\"2023-05-15\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::O.4","fields":{"description":"Post-deployment fixes.","why":"Gives visibility into emergency or patch releases deployed recently.","entities_flat":["labels:hotfix","fixVersion:releasedVersions()","fixVersionReleaseDate:>= startOfWeek(-1)"],"synonyms":["hotfix issues","patch tickets"],"section":"O. Release & Deployment Views","jql_fields":["labels","fixVersion","fixVersionReleaseDate"],"notes":"Depends on consistent labeling of hotfix tickets.","jql":"labels = hotfix AND fixVersion IN releasedVersions() AND fixVersionReleaseDate >= startOfWeek(-1)","id":"O.4","nlq":"Hotfix tickets deployed last week","query_summary":"Natural query: 'Hotfix tickets deployed last week'. Synonyms: hotfix issues, patch tickets. Paraphrases: 'Show hotfix tickets released last week', 'List hotfix issues deployed in last week’s release'. This JQL filters issues labeled hotfix, included in released fixVersions from the last week. Fields: labels, fixVersion, fixVersionReleaseDate. Entities: hotfix, releasedVersions(), startOfWeek(-1). Purpose: Useful for tracking emergency deployments.","paraphrases":["Show hotfix tickets released last week","List hotfix issues deployed in last week’s release"],"intents":["browse","release","labels"],"entities":"{\"labels\":\"hotfix\",\"fixVersion\":\"releasedVersions()\",\"fixVersionReleaseDate\":\">= startOfWeek(-1)\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::VS.2","fields":{"description":"Find unestimated stories in active sprints","why":"Sprint planning and estimation completeness.","entities_flat":["issuetype:Story","sprint:openSprints()","Story Points:EMPTY"],"synonyms":["unestimated sprint stories","stories without points"],"section":"J. Version and Sprint Management","jql_fields":["issuetype","sprint","Story Points"],"notes":"openSprints() finds currently active sprints","jql":"issuetype = Story AND sprint IN openSprints() AND \"Story Points\" IS EMPTY","id":"VS.2","nlq":"Stories in current sprint without story points","query_summary":"Natural query: 'Stories in current sprint without story points'. Finds unestimated stories in active sprints.","paraphrases":["Show unestimated stories in sprint","Find stories missing story points"],"intents":["browse","sprint","estimation"],"entities":"{\"issuetype\":\"Story\",\"sprint\":\"openSprints()\",\"Story Points\":\"EMPTY\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::D.7","fields":{"description":"Issues with at least one attachment.","why":"Quickly identify tickets that include supporting files like logs or screenshots.","entities_flat":["attachments:NOT EMPTY"],"synonyms":["with files","containing attachments"],"section":"D. Text & Content Search","jql_fields":["attachments"],"notes":"attachments IS NOT EMPTY ensures at least one file is attached.","jql":"attachments IS NOT EMPTY","id":"D.7","nlq":"Has attachments","query_summary":"Natural query: 'Has attachments'. Synonyms: with files, containing attachments. Paraphrases: 'Find issues with attachments', 'List tickets that have files attached'. This JQL filters issues where attachments field is not empty. Fields: attachments. Entity: NOT EMPTY. Purpose: Useful for locating tickets with supplementary documentation.","paraphrases":["Find issues with attachments","List tickets that have files attached"],"intents":["search","attachments"],"entities":"{\"attachments\":\"NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SO.2","fields":{"description":"Find longest-standing open work","why":"Backlog hygiene and aged work identification.","entities_flat":["project:ALPHA","issuetype:Task","resolution:EMPTY","created:ASC"],"synonyms":["long-standing tasks","aged backlog"],"section":"R. Sorting and Ordering Patterns","jql_fields":["project","issuetype","resolution","created"],"notes":"ORDER BY created ASC shows oldest items first","jql":"project = ALPHA AND issuetype = Task AND resolution IS EMPTY ORDER BY created ASC","id":"SO.2","nlq":"Oldest unresolved tasks in project ALPHA","query_summary":"Natural query: 'Oldest unresolved tasks in project ALPHA'. Shows longest-standing open work items.","paraphrases":["Show oldest open tasks","Find aged work items"],"intents":["browse","sorting","oldest"],"entities":"{\"project\":\"ALPHA\",\"issuetype\":\"Task\",\"resolution\":\"EMPTY\",\"created\":\"ASC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.7","fields":{"description":"Unfinished bugs from prior sprints.","why":"Highlights bugs that were not completed in the prior sprint.","entities_flat":["issuetype:Bug","sprint:closedSprints()","statusCategory:!= Done"],"synonyms":["incomplete bugs from last sprint","unfinished sprint bugs"],"section":"G. Agile: Sprints & Boards","jql_fields":["issuetype","sprint","statusCategory"],"notes":"closedSprints() used with statusCategory != Done to find unfinished work.","jql":"issuetype = Bug AND sprint IN (closedSprints()) AND statusCategory != Done","id":"G.7","nlq":"Bugs carried over from last sprint","query_summary":"Natural query: 'Bugs carried over from last sprint'. Synonyms: incomplete bugs from last sprint, unfinished sprint bugs. Paraphrases: 'Show bugs carried over from last sprint', 'List unfinished bugs from prior sprints'. This JQL filters issues where issuetype = Bug, sprint in closedSprints(), and statusCategory != Done. Fields: issuetype, sprint, statusCategory. Entities: Bug, closedSprints(), != Done. Purpose: Useful for tracking sprint spillover bugs.","paraphrases":["Show bugs carried over from last sprint","List unfinished bugs from prior sprints"],"intents":["browse","issuetype","sprint","status"],"entities":"{\"issuetype\":\"Bug\",\"sprint\":\"closedSprints()\",\"statusCategory\":\"!= Done\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::AI.1","fields":{"description":"Direct comment count syntax - use 'comment > N' not issueProperty[commentCount]","why":"Fixes common error in comment counting that causes low accuracy scores","entities_flat":["10","comments"],"synonyms":["discussions","responses","replies"],"section":"AI. Accuracy Improvements - Comment Counting","jql_fields":["comment"],"notes":"CRITICAL: Use 'comment > N' syntax, NOT 'issueProperty[commentCount] > N'","jql":"comment > 10","id":"AI.1","nlq":"Find issues with more than 10 comments","query_summary":"Natural query: 'Find issues with more than 10 comments'. Synonyms: discussions, responses, replies. This JQL uses direct comment field comparison. Fields: comment. Entity: 10. Purpose: Fixes common error in comment counting that causes low accuracy scores.","paraphrases":["Issues with many comments","Tickets with more than 10 replies","Highly discussed issues"],"intents":["count","comments"],"entities":"\"{\\\"count\\\": \\\"10\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::WL.3","fields":{"description":"Find issues with investigation-related work logged","why":"Work categorization and investigation time tracking.","entities_flat":["worklogComment:investigation"],"synonyms":["investigation work","research worklogs"],"section":"M. Worklog and Time Tracking","jql_fields":["worklogComment"],"notes":"worklogComment ~ searches within worklog descriptions","jql":"worklogComment ~ \"investigation\"","id":"WL.3","nlq":"Issues with worklogs mentioning investigation","query_summary":"Natural query: 'Issues with worklogs mentioning investigation'. Finds issues where investigation work has been logged.","paraphrases":["Show issues with investigation work logged","Find research time entries"],"intents":["browse","worklog","investigation"],"entities":"{\"worklogComment\":\"investigation\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.7","fields":{"description":"Sort by earliest due date.","why":"Useful for deadline-driven prioritization.","entities_flat":["due:ASC"],"synonyms":["earliest deadlines first","soonest due date first"],"section":"F. Sorting & Ordering","jql_fields":["due"],"jql":"ORDER BY due ASC","id":"F.7","nlq":"Soonest due first","query_summary":"Natural query: 'Soonest due first'. Synonyms: earliest deadlines first, soonest due date first. Paraphrases: 'List issues sorted by earliest due date', 'Order tickets with closest deadlines first'. This JQL sorts issues by due date ascending. Field: due. Entity: ASC. Purpose: Useful for managing near-term deadlines.","paraphrases":["List issues sorted by earliest due date","Order tickets with closest deadlines first"],"intents":["sort","due"],"entities":"{\"due\":\"ASC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::COMM.4","fields":{"description":"Recent mentions requiring user attention","why":"Provides personal notification system for comment mentions","entities_flat":["mention_target:currentUser","timeframe:24 hours"],"synonyms":["recent mentions","comment notifications","user tags"],"section":"Advanced Comments","jql_fields":["comment"],"notes":"Tracks personal mentions in recent comments for notification purposes","jql":"comment ~ currentUser() AND comment.created >= \"-24h\"","id":"COMM.4","nlq":"Issues where I was mentioned in comments last 24 hours","query_summary":"Natural query: 'Issues where I was mentioned in comments last 24 hours'. Personal mention tracking. Purpose: Personal notification management.","paraphrases":["Show where I was mentioned recently","List recent comment mentions"],"intents":["comments","mentions","personal"],"entities":"{\"mention_target\":\"currentUser\",\"timeframe\":\"24 hours\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.17","fields":{"description":"Logical combination of history operator WAS with current assignment.","why":"Introduces WAS with current negation for logical combination.","entities_flat":["previous_assignee:bob","current_assignee:!= currentUser()"],"synonyms":["previously Bob’s issues now reassigned"],"section":"C. Logical Combinations & Set Ops","jql_fields":["assignee"],"jql":"assignee WAS bob AND assignee != currentUser()","id":"C.17","nlq":"Issues where assignee was Bob but is not me","query_summary":"Natural query: 'Issues where assignee was Bob but is not me'. Synonyms: previously Bob’s issues now reassigned. Paraphrases: 'Find issues Bob handled that are not assigned to me', 'Show tickets once owned by Bob but now with someone else'. This JQL uses assignee WAS bob and assignee != currentUser() to combine history with current exclusion. Fields: assignee. Purpose: Useful for auditing reassignments.","paraphrases":["Find issues Bob handled that are not assigned to me","Show tickets once owned by Bob but now with someone else"],"intents":["browse","assignee","history"],"entities":"{\"previous_assignee\":\"bob\",\"current_assignee\":\"!= currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::BD.1","fields":{"description":"Calculate overdue using business days only","why":"Accurate deadline tracking excluding non-working days.","entities_flat":["duedate:businessDays(-5)","resolution:EMPTY"],"synonyms":["business days overdue","workday delays"],"section":"P. Business Days and Holiday Patterns","jql_fields":["duedate","resolution"],"notes":"businessDays() excludes weekends and holidays","jql":"duedate < businessDays(-5) AND resolution IS EMPTY","id":"BD.1","nlq":"Issues overdue by more than 5 business days","query_summary":"Natural query: 'Issues overdue by more than 5 business days'. Calculates overdue time using only business days.","paraphrases":["Show work overdue by business days","Find business day delays"],"intents":["browse","overdue","business"],"entities":"{\"duedate\":\"businessDays(-5)\",\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::COMM.3","fields":{"description":"Highly discussed tasks suggesting complexity or confusion","why":"Identifies tasks requiring significant discussion or clarification","entities_flat":["issuetype:Task","comment_count:50"],"synonyms":["complex discussions","heavily commented tasks","detailed conversations"],"section":"Advanced Comments","jql_fields":["issuetype","comment.count"],"notes":"Uses comment count to identify complex or problematic tasks","jql":"issuetype = Task AND comment.count > 50","id":"COMM.3","nlq":"Tasks with more than 50 comments indicating complexity","query_summary":"Natural query: 'Tasks with more than 50 comments indicating complexity'. Complexity indicators. Purpose: Complex task identification.","paraphrases":["Show tasks with extensive discussions","List heavily commented work items"],"intents":["comments","complexity","discussion"],"entities":"{\"issuetype\":\"Task\",\"comment_count\":\"50\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.3","fields":{"description":"Requires ScriptRunner.","why":"Helps find parent tasks that contain subtasks for tracking workload.","entities_flat":["issueFunction:hasSubtasks()"],"synonyms":["parent tasks","issues with children"],"section":"H. Epics, Parents & Subtasks","jql_fields":["issueFunction"],"notes":"issueFunction IN hasSubtasks() is available only via ScriptRunner add-on.","jql":"issueFunction IN hasSubtasks()","id":"H.3","nlq":"Items that have subtasks","query_summary":"Natural query: 'Items that have subtasks'. Synonyms: parent tasks, issues with children. Paraphrases: 'Show items that have subtasks', 'List parent tasks with children'. This JQL requires ScriptRunner and filters issues using hasSubtasks(). Field: issueFunction. Entity: hasSubtasks(). Purpose: Useful for identifying parent tasks that are broken down further.","paraphrases":["Show items that have subtasks","List parent tasks with children"],"intents":["browse","subtask","function"],"entities":"{\"issueFunction\":\"hasSubtasks()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::E.8","fields":{"description":"Filters issues in the active release version.","why":"Focuses on the currently active release cycle.","entities_flat":["fixVersion:currentVersion()"],"synonyms":["current release","this version"],"section":"E. Versions, Components, Labels","jql_fields":["fixVersion"],"jql":"fixVersion = currentVersion()","id":"E.8","nlq":"In the current Fix Version","query_summary":"Natural query: 'In the current Fix Version'. Synonyms: current release, this version. Paraphrases: 'Show issues in the current fix version', 'List tickets tied to the ongoing release'. This JQL filters issues where fixVersion equals currentVersion(). Fields: fixVersion. Entity: currentVersion(). Purpose: Useful for teams monitoring their current release scope.","paraphrases":["Show issues in the current fix version","List tickets tied to the ongoing release"],"intents":["browse","fixVersion"],"entities":"{\"fixVersion\":\"currentVersion()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.14","fields":{"description":"Mix of OR (project) with AND (status, issuetype).","why":"Covers nested boolean logic with AND/OR grouping.","entities_flat":["project:ALPHA","project:BETA","issuetype:Bug","status:!= Closed"],"synonyms":["open bugs in ALPHA or BETA"],"section":"C. Logical Combinations & Set Ops","jql_fields":["project","issuetype","status"],"jql":"(project IN (ALPHA, BETA) AND issuetype = Bug) AND status != Closed","id":"C.14","nlq":"Bugs in ALPHA or BETA but not Closed","query_summary":"Natural query: 'Bugs in ALPHA or BETA but not Closed'. Synonyms: open bugs in ALPHA or BETA. Paraphrases: 'List bugs from ALPHA or BETA excluding Closed', 'Show open bugs in ALPHA and BETA'. This JQL uses parentheses to combine OR (projects ALPHA, BETA) with AND conditions (Bug, not Closed). Fields: project, issuetype, status. Purpose: Demonstrates complex logical set operations.","paraphrases":["List bugs from ALPHA or BETA excluding Closed","Show open bugs in ALPHA and BETA"],"intents":["browse","project","issuetype","status"],"entities":"{\"project\":[\"ALPHA\",\"BETA\"],\"issuetype\":\"Bug\",\"status\":\"!= Closed\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.2","fields":{"description":"QA-originated issues.","why":"Helps isolate bugs or tickets created by QA teams for triage.","entities_flat":["reporter:membersOf(qa)"],"synonyms":["qa-reported issues","tickets filed by QA group"],"section":"J. Users, Groups, Teams","jql_fields":["reporter","group"],"notes":"membersOf() must reference a valid QA group in Jira user directory.","jql":"reporter IN membersOf(\"qa\")","id":"J.2","nlq":"Reporters in group qa","query_summary":"Natural query: 'Reporters in group qa'. Synonyms: qa-reported issues, tickets filed by QA group. Paraphrases: 'Show issues reported by QA group members', 'List bugs created by QA'. This JQL filters issues where reporter belongs to group qa. Fields: reporter, group. Entity: membersOf(qa). Purpose: Useful for analyzing QA-originated issues.","paraphrases":["Show issues reported by QA group members","List bugs created by QA"],"intents":["browse","reporter","group"],"entities":"{\"reporter\":\"membersOf(qa)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.6","fields":{"description":"Issues with no assignee set.","why":"Identifies tasks that haven’t been picked up yet.","entities_flat":["assignee:EMPTY"],"synonyms":["issues without owner","unallocated tasks"],"section":"J. Users, Groups, Teams","jql_fields":["assignee"],"notes":"Important for backlog grooming and load balancing.","jql":"assignee IS EMPTY","id":"J.6","nlq":"Unassigned issues","query_summary":"Natural query: 'Unassigned issues'. Synonyms: issues without owner, unallocated tasks. Paraphrases: 'Show unassigned issues', 'List tickets without an assignee'. This JQL filters issues where assignee is empty. Field: assignee. Entity: EMPTY. Purpose: Useful for triage and ensuring work is distributed.","paraphrases":["Show unassigned issues","List tickets without an assignee"],"intents":["browse","assignee"],"entities":"{\"assignee\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.1","fields":{"description":"Excludes Done via statusCategory.","why":"Combines status category and assignee fields to exclude completed work and show James’s open load.","entities_flat":["statusCategory:!= Done","assignee:james"],"synonyms":["active issues for James","tickets James is working on"],"section":"C. Logical Combinations & Set Ops","jql_fields":["statusCategory","assignee"],"notes":"Uses statusCategory != Done to cover all unfinished statuses, not just Open.","jql":"statusCategory != Done AND assignee = james","id":"C.1","nlq":"Open issues assigned to James","query_summary":"Natural query: 'Open issues assigned to James'. Synonyms: active issues for James, tickets James is working on. Paraphrases: 'List open issues assigned to James', 'Show James's active tasks'. This JQL filters issues where the statusCategory is not Done and the assignee equals James. Fields involved: statusCategory, assignee. Entities: != Done, James. Purpose: Useful for checking specific user workload excluding completed tasks.","paraphrases":["List open issues assigned to James","Show James's active tasks"],"intents":["browse","status","assignee"],"entities":"{\"statusCategory\":\"!= Done\",\"assignee\":\"james\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.1","fields":{"description":"Relative creation window.","why":"Finds all issues created in the last 7 days, useful for weekly reporting.","entities_flat":["created:>= -7d"],"synonyms":["recently created","new issues","last week"],"section":"B. Time & Date Filters","jql_fields":["created"],"notes":"Use relative time format like -7d for last 7 days.","jql":"created >= -7d","id":"B.1","nlq":"Created in the last 7 days","query_summary":"Natural query: 'Created in the last 7 days'. Synonyms: recently created, new issues, last week. Paraphrases: 'Issues created in past 7 days', 'Show tickets opened this week', 'List items added in last 7 days'. This JQL filters issues where the created field is greater than or equal to 7 days ago. Fields involved: created. Entity value: >= -7d. Purpose: Commonly used to track new backlog entries.","paraphrases":["Issues created in past 7 days","Show tickets opened this week","List items added in last 7 days"],"intents":["time","created"],"entities":"{\"created\":\">= -7d\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.24","fields":{"description":"Tracks historical assignee changes.","why":"Useful for workload transfer audits.","entities_flat":["previous_assignee:bob","current_assignee:alice"],"synonyms":["ownership change","reassignment"],"section":"A. Basic Filters","jql_fields":["assignee"],"jql":"assignee WAS bob AND assignee = alice","id":"A.24","nlq":"Issues that were reassigned from Bob to Alice","query_summary":"Natural query: 'Issues that were reassigned from Bob to Alice'. Synonyms: ownership change, reassignment. Paraphrases: 'Find issues reassigned from Bob to Alice', 'Tickets previously owned by Bob, now by Alice'. This JQL uses the WAS operator for assignee combined with a current assignment filter to detect reassignment patterns. Purpose: auditing team workload transfers.","paraphrases":["Find issues reassigned from Bob to Alice","Tickets previously owned by Bob, now by Alice"],"intents":["browse","assignee","history"],"entities":"{\"previous_assignee\":\"bob\",\"current_assignee\":\"alice\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::CHANNEL_SLA.1","fields":{"description":"Channel-specific SLA performance tracking for email requests","why":"Channel-based SLA performance optimization","entities_flat":["channel:email","sla_field:Time to first response","sla_status:breached"],"synonyms":["email SLA breaches","email channel failures"],"section":"Channel + SLA","jql_fields":["Request Channel Type","Time to first response"],"notes":"Channel-specific SLA performance analysis for email intake","jql":"\"Request Channel Type\" = email AND \"Time to first response\" = breached()","id":"CHANNEL_SLA.1","nlq":"Email channel requests that breached SLA","query_summary":"Natural query: 'Email channel requests that breached SLA'. Channel-specific SLA monitoring. Purpose: Email channel SLA analysis.","paraphrases":["Show email requests with SLA breaches","List email channel SLA failures"],"intents":["channel","email","sla","breach"],"entities":"{\"channel\":\"email\",\"sla_field\":\"Time to first response\",\"sla_status\":\"breached\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::E.4","fields":{"description":"Label set membership.","why":"Isolate issues related to operational duty or oncall support.","entities_flat":["labels:oncall","labels:pager"],"synonyms":["oncall issues","pager duty items"],"section":"E. Versions, Components, Labels","jql_fields":["labels"],"notes":"labels IN (...) allows multiple label matches.","jql":"labels IN (oncall, pager)","id":"E.4","nlq":"Labeled as oncall or pager","query_summary":"Natural query: 'Labeled as oncall or pager'. Synonyms: oncall issues, pager duty items. Paraphrases: 'Show tickets labeled oncall or pager', 'List issues tagged with pager or oncall'. This JQL filters issues where labels include oncall or pager. Fields: labels. Entities: oncall, pager. Purpose: Useful for operational task tracking.","paraphrases":["Show tickets labeled oncall or pager","List issues tagged with pager or oncall"],"intents":["browse","labels"],"entities":"{\"labels\":[\"oncall\",\"pager\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.9","fields":{"description":"Incident tags.","why":"Highlights urgent escalations.","entities_flat":["labels:escalation","labels:sev1"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["labels"],"jql":"labels IN (escalation, sev1)","id":"S.9","nlq":"Escalations","query_summary":"Filter issues labeled escalation or sev1.","intents":["browse","labels"],"entities":"{\"labels\":[\"escalation\",\"sev1\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::LINK.2","fields":{"description":"Tasks blocked by issues in other projects","why":"Tracks dependencies requiring external coordination","entities_flat":["issuetype:Task","link_type:blocked by","dependency_type:external"],"synonyms":["external blockers","cross-project dependencies","outside dependencies"],"section":"Advanced Linking","jql_fields":["issuetype","issueLink"],"notes":"Identifies cross-project dependencies for coordination","jql":"issuetype = Task AND issueLink.type = \"is blocked by\" AND issueLink.outward.project != project","id":"LINK.2","nlq":"Tasks blocked by multiple external dependencies","query_summary":"Natural query: 'Tasks blocked by multiple external dependencies'. External dependency tracking. Purpose: Cross-project coordination.","paraphrases":["Show tasks blocked by other projects","List external dependency blocks"],"intents":["linking","blocking","dependencies"],"entities":"{\"issuetype\":\"Task\",\"link_type\":\"blocked by\",\"dependency_type\":\"external\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.12","fields":{"description":"Popular issues.","why":"Helps find popular issues with significant community/user interest.","entities_flat":["votes:>= 10"],"synonyms":["popular issues","highly voted"],"section":"C. Logical Combinations & Set Ops","jql_fields":["votes"],"notes":"votes >= N is the way to check popularity threshold.","jql":"votes >= 10","id":"C.12","nlq":"At least 10 votes","query_summary":"Natural query: 'At least 10 votes'. Synonyms: popular issues, highly voted. Paraphrases: 'List issues with at least 10 votes', 'Show popular tickets'. This JQL filters issues where the votes field is greater than or equal to 10. Fields involved: votes. Entity value: >= 10. Purpose: Useful for prioritizing based on user voting.","paraphrases":["List issues with at least 10 votes","Show popular tickets"],"intents":["browse","votes"],"entities":"{\"votes\":\">= 10\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::K.7","fields":{"description":"Tasks missing time estimation.","why":"Identifies tasks that haven’t been properly estimated.","entities_flat":["originalEstimate:EMPTY"],"synonyms":["no estimate","unset time"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["originalEstimate"],"notes":"Useful for backlog grooming where estimation is mandatory.","jql":"originalEstimate IS EMPTY","id":"K.7","nlq":"Issues without original estimate","query_summary":"Natural query: 'Issues without original estimate'. Synonyms: no estimate, unset time. Paraphrases: 'Show issues without original estimate', 'List tasks missing time estimates'. This JQL filters issues where originalEstimate is empty. Field: originalEstimate. Entity: EMPTY. Purpose: Useful for backlog hygiene.","paraphrases":["Show issues without original estimate","List tasks missing time estimates"],"intents":["browse","estimate"],"entities":"{\"originalEstimate\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::O.2","fields":{"description":"Operational incidents.","why":"Useful for incident management and identifying rollback patterns in recent deployments.","entities_flat":["issuetype:Bug","text:~ rollback","created:>= -30d"],"synonyms":["rollback bugs","rollback-related incidents"],"section":"O. Release & Deployment Views","jql_fields":["issuetype","text","created"],"notes":"Combines issuetype, text search, and date filter to capture rollback incidents.","jql":"issuetype = Bug AND text ~ \"rollback\" AND created >= -30d","id":"O.2","nlq":"Rollback-related bugs last 30 days","query_summary":"Natural query: 'Rollback-related bugs last 30 days'. Synonyms: rollback bugs, rollback-related incidents. Paraphrases: 'Show rollback bugs from last 30 days', 'List tickets mentioning rollback created in last 30 days'. This JQL filters issues where issuetype = Bug, text contains 'rollback', and created date is within last 30 days. Fields: issuetype, text, created. Entities: Bug, ~ rollback, >= -30d. Purpose: Useful for operational monitoring and deployment failure analysis.","paraphrases":["Show rollback bugs from last 30 days","List tickets mentioning rollback created in last 30 days"],"intents":["browse","bug","operations"],"entities":"{\"issuetype\":\"Bug\",\"text\":\"~ rollback\",\"created\":\">= -30d\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::N.2","fields":{"description":"Approximate heuristic via wildcard (no direct length function in core JQL).","why":"Short titles often indicate poor quality issue documentation.","entities_flat":["summary:short length approx"],"synonyms":["short title","tiny summary"],"section":"N. Quality & Hygiene Queries","jql_fields":["summary"],"notes":"Core JQL lacks string length function; this is a heuristic using wildcards.","jql":"summary ~ \"??????????\"","id":"N.2","nlq":"Title is too short (≤ 10 chars)","query_summary":"Natural query: 'Title is too short (≤ 10 chars)'. Synonyms: short title, tiny summary. Paraphrases: 'Show issues with short summaries', 'List tickets with very short titles'. This JQL uses wildcard matching in summary (~) to approximate titles shorter than 10 chars. Field: summary. Entity: short heuristic. Purpose: Useful for spotting poorly named issues.","paraphrases":["Show issues with short summaries","List tickets with very short titles"],"intents":["browse","quality"],"entities":"{\"summary\":\"short length approx\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.8","fields":{"description":"User-picker custom field example.","why":"Helps users find issues where they are the designated technical owner, separate from assignee.","entities_flat":["Technical Owner:currentUser()"],"synonyms":["owner assigned to me","my technical ownership"],"section":"L. Custom Fields","jql_fields":["Technical Owner"],"notes":"User-picker custom fields behave like assignee/reporter fields in JQL.","jql":"\"Technical Owner\" = currentUser()","id":"L.8","nlq":"Technical Owner is me","query_summary":"Natural query: 'Technical Owner is me'. Synonyms: owner assigned to me, my technical ownership. Paraphrases: 'Show issues where I am the technical owner', 'List tickets with me as technical owner'. This JQL filters issues where Technical Owner equals currentUser(). Field: Technical Owner. Entity: currentUser(). Purpose: Useful for workload review beyond standard assignee.","paraphrases":["Show issues where I am the technical owner","List tickets with me as technical owner"],"intents":["browse","customfield","user"],"entities":"{\"Technical Owner\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.13","fields":{"description":"High-severity issues.","why":"Filter to identify high-severity issues that need urgent attention.","entities_flat":["priority:High","priority:Critical"],"synonyms":["severity","urgent issues","P1/P2"],"section":"A. Basic Filters","jql_fields":["priority"],"notes":"Priority values may differ by instance; ensure High/Critical exist.","jql":"priority IN (High, Critical)","id":"A.13","nlq":"Priority High or Critical","query_summary":"Natural query: 'Priority High or Critical'. Synonyms: severity, urgent issues, P1/P2. Paraphrases: 'Show high and critical priority issues', 'List urgent tickets', 'High severity items'. This JQL filters issues where the priority is High or Critical. Fields involved: priority. Entity values: High, Critical. Purpose: Useful for triaging urgent tasks or escalations.","paraphrases":["Show high and critical priority issues","List urgent tickets","High severity items"],"intents":["browse","priority"],"entities":"{\"priority\":[\"High\",\"Critical\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.10","fields":{"description":"Organization-specific filter.","why":"Useful for customer account managers and SLA reviews.","entities_flat":["organizations:Acme Corp"],"synonyms":["Acme customer tickets","Acme Corp requests"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["organizations"],"notes":"Matches issues linked to 'Acme Corp' organization configured in JSM.","jql":"organizations = \"Acme Corp\"","id":"M.10","nlq":"Service desk requests from Acme Corp","query_summary":"Natural query: 'Service desk requests from Acme Corp'. Synonyms: Acme customer tickets, Acme Corp requests. Paraphrases: 'Show Acme Corp service desk tickets', 'List requests filed by Acme Corp organization'. This JQL filters requests where organizations = 'Acme Corp'. Field: organizations. Entity: Acme Corp. Purpose: Useful for filtering customer-specific requests and tracking SLAs per organization.","paraphrases":["Show Acme Corp service desk tickets","List requests filed by Acme Corp organization"],"intents":["browse","organization"],"entities":"{\"organizations\":\"Acme Corp\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::C.8","fields":{"description":"Filter by filter id.","why":"Allows referencing filters by ID rather than name.","entities_flat":["filter:10100","filter:10200"],"synonyms":["saved search IDs","filter ids"],"section":"C. Logical Combinations & Set Ops","jql_fields":["filter"],"notes":"Filter IDs are numeric identifiers for saved filters.","jql":"filter IN (10100, 10200)","id":"C.8","nlq":"In saved filters 10100 or 10200","query_summary":"Natural query: 'In saved filters 10100 or 10200'. Synonyms: saved search IDs, filter ids. Paraphrases: 'Apply saved filters 10100 or 10200', 'Use filter IDs 10100 and 10200'. This JQL filters issues based on saved filter IDs 10100 or 10200. Fields involved: filter. Entities: 10100, 10200. Purpose: Useful for automation and robust referencing of saved filters.","paraphrases":["Apply saved filters 10100 or 10200","Use filter IDs 10100 and 10200"],"intents":["browse","filter"],"entities":"{\"filter\":[\"10100\",\"10200\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::N.8","fields":{"description":"No deadlines set.","why":"Lack of deadlines reduces visibility into schedule risk.","entities_flat":["due:EMPTY"],"synonyms":["no due date","missing deadline"],"section":"N. Quality & Hygiene Queries","jql_fields":["due"],"notes":"Due date is optional but often required for planning.","jql":"due IS EMPTY","id":"N.8","nlq":"Issues missing due date","query_summary":"Natural query: 'Issues missing due date'. Synonyms: no due date, missing deadline. Paraphrases: 'Show issues without due dates', 'List tickets missing deadlines'. This JQL filters issues where due field is empty. Field: due. Entity: EMPTY. Purpose: Useful for ensuring schedule discipline.","paraphrases":["Show issues without due dates","List tickets missing deadlines"],"intents":["browse","quality","due"],"entities":"{\"due\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.16","fields":{"description":"Sensitive items.","why":"Identifies restricted or sensitive issues.","entities_flat":["level:NOT EMPTY"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["level"],"jql":"level IS NOT EMPTY","id":"S.16","nlq":"Issues with security level set","query_summary":"Find issues with security level field populated.","intents":["browse","security level"],"entities":"{\"level\":\"NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::EP.1","fields":{"description":"Find incomplete stories within specific epic","why":"Epic progress tracking and completion monitoring.","entities_flat":["epic:ALPHA-500","statusCategory:!= Done"],"synonyms":["unfinished epic stories","incomplete epic work"],"section":"F. Epic and Hierarchy Management","jql_fields":["epic","statusCategory"],"notes":"issuesInEpics() finds all child issues of an epic","jql":"issueFunction IN issuesInEpics(\"key = ALPHA-500\") AND statusCategory != Done","id":"EP.1","nlq":"Stories under epic ALPHA-500 that are not done","query_summary":"Natural query: 'Stories under epic ALPHA-500 that are not done'. Shows incomplete stories within a specific epic.","paraphrases":["Show unfinished stories in epic","List incomplete epic items"],"intents":["browse","epic","status"],"entities":"{\"epic\":\"ALPHA-500\",\"statusCategory\":\"!= Done\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::K.9","fields":{"description":"Logs added on the current day.","why":"Helps with daily standup preparation and tracking today’s work.","entities_flat":["worklogDate:startOfDay()"],"synonyms":["today’s work","logs for today"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["worklogDate"],"notes":"startOfDay() matches only logs recorded on the current date.","jql":"worklogDate = startOfDay()","id":"K.9","nlq":"Work logged today","query_summary":"Natural query: 'Work logged today'. Synonyms: today’s work, logs for today. Paraphrases: 'Show issues with logs today', 'List tickets updated with work today'. This JQL filters issues where worklogDate equals startOfDay(). Field: worklogDate. Entity: startOfDay(). Purpose: Useful for daily activity tracking.","paraphrases":["Show issues with logs today","List tickets updated with work today"],"intents":["browse","worklog"],"entities":"{\"worklogDate\":\"startOfDay()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.28","fields":{"description":"Team-based filtering via group membership.","why":"Helps identify issues raised by specific functional teams.","entities_flat":["reporter:membersOf(designers)"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["reporter"],"jql":"reporter IN membersOf(\"designers\")","id":"S.28","nlq":"Issues reported by designers team","query_summary":"List issues reported by members of the designers group.","intents":["browse","reporter"],"entities":"{\"reporter\":\"membersOf(designers)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ATT.4","fields":{"description":"Find customer requests with large file attachments","why":"Helps manage storage usage and identify large file transfers","entities_flat":["request_type:customer","attachment_size:10MB"],"synonyms":["large file uploads","big attachments","oversized files"],"section":"Attachments","jql_fields":["Customer Request Type","attachments.size"],"notes":"Uses attachment size property for storage management","jql":"\"Customer Request Type\" IS NOT EMPTY AND attachments.size > 10485760","id":"ATT.4","nlq":"Customer requests with large attachments over 10MB","query_summary":"Natural query: 'Customer requests with large attachments over 10MB'. Uses attachment size filtering. Purpose: Storage and transfer management.","paraphrases":["Show requests with large file attachments","List customer uploads over 10MB"],"intents":["attachment","size","customer"],"entities":"{\"request_type\":\"customer\",\"attachment_size\":\"10MB\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::F.10","fields":{"description":"Alphabetical by assignee, reverse order.","why":"Completes coverage of assignee sort both directions.","entities_flat":["assignee:DESC"],"synonyms":["reverse alphabetical owner","descending assignee sort"],"section":"F. Sorting & Ordering","jql_fields":["assignee"],"jql":"ORDER BY assignee DESC","id":"F.10","nlq":"Sort by assignee name descending","query_summary":"Natural query: 'Sort by assignee name descending'. Synonyms: reverse alphabetical owner, descending assignee sort. Paraphrases: 'List issues sorted by assignee name descending', 'Order tickets with reverse alphabetical assignee'. This JQL sorts issues by assignee field in descending order. Field: assignee. Entity: DESC. Purpose: Useful for specific alphabetical organization needs.","paraphrases":["List issues sorted by assignee name descending","Order tickets with reverse alphabetical assignee"],"intents":["sort","assignee"],"entities":"{\"assignee\":\"DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::K.4","fields":{"description":"Recent worklogs.","why":"Helps track recent work activity across the team.","entities_flat":["worklogDate:>= -7d"],"synonyms":["recent worklogs","last week logs"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["worklogDate"],"notes":"Relative time format -7d means from 7 days ago until now.","jql":"worklogDate >= -7d","id":"K.4","nlq":"Worklogged in last 7 days","query_summary":"Natural query: 'Worklogged in last 7 days'. Synonyms: recent worklogs, last week logs. Paraphrases: 'Show issues with worklogs in the past 7 days', 'List tickets updated with logs last week'. This JQL filters issues where worklogDate is greater than or equal to 7 days ago. Field: worklogDate. Entity: >= -7d. Purpose: Useful for weekly effort tracking.","paraphrases":["Show issues with worklogs in the past 7 days","List tickets updated with logs last week"],"intents":["browse","worklog"],"entities":"{\"worklogDate\":\">= -7d\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.12","fields":{"description":"Finds issues without attachments.","why":"Complements 'attachments IS NOT EMPTY' for hygiene checks.","entities_flat":["attachments:EMPTY"],"synonyms":["no files attached","missing attachments"],"section":"D. Text & Content Search","jql_fields":["attachments"],"jql":"attachments IS EMPTY","id":"D.12","nlq":"Attachments field is empty","query_summary":"Natural query: 'Attachments field is empty'. Synonyms: no files attached, missing attachments. Paraphrases: 'List tickets without attachments', 'Show issues that lack files'. This JQL filters issues where attachments field is empty. Fields: attachments. Purpose: Useful for detecting missing supporting files.","paraphrases":["List tickets without attachments","Show issues that lack files"],"intents":["search","attachments"],"entities":"{\"attachments\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.9","fields":{"description":"Filters high-value org tickets still unresolved.","why":"Prioritizes critical customers by focusing on unresolved issues from key accounts.","entities_flat":["organizations:VIP","resolution:EMPTY"],"synonyms":["VIP org open tickets","high-value customer unresolved requests"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["organizations","resolution"],"notes":"VIP can be replaced with specific organization names configured in your JSM project.","jql":"organizations = VIP AND resolution IS EMPTY","id":"M.9","nlq":"VIP organization requests unresolved","query_summary":"Natural query: 'VIP organization requests unresolved'. Synonyms: VIP org open tickets, high-value customer unresolved requests. Paraphrases: 'Show unresolved VIP organization tickets', 'List requests from VIP still pending resolution'. This JQL filters issues where organizations field = VIP and resolution is empty. Fields: organizations, resolution. Entities: VIP, EMPTY. Purpose: Useful for prioritizing high-value customer issues.","paraphrases":["Show unresolved VIP organization tickets","List requests from VIP still pending resolution"],"intents":["browse","organization","resolution"],"entities":"{\"organizations\":\"VIP\",\"resolution\":\"EMPTY\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::AI.13","fields":{"description":"Always quote status values, especially multi-word ones","why":"Demonstrates proper quoting for multi-word status values","entities_flat":["In Progress","status"],"synonyms":["active","working","ongoing"],"section":"AI. Accuracy Improvements - Status Quoting","jql_fields":["status"],"notes":"CRITICAL: Multi-word values MUST be quoted: status = \"In Progress\"","jql":"status = \"In Progress\"","id":"AI.13","nlq":"Tasks in progress status","query_summary":"Natural query: 'Tasks in progress status'. Shows proper quoting for multi-word status values. Fields: status. Entity: In Progress.","paraphrases":["Tasks being worked on","Active tasks"],"intents":["status","progress"],"entities":"\"{\\\"status\\\": \\\"In Progress\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::O.5","fields":{"description":"Pending issues preventing deployment.","why":"Surfaces critical blockers that must be resolved before deployment.","entities_flat":["statusCategory:!= Done","labels:deployment-blocker"],"synonyms":["release blockers","unresolved deployment issues"],"section":"O. Release & Deployment Views","jql_fields":["statusCategory","labels"],"notes":"Relies on teams labeling issues as deployment-blocker consistently.","jql":"statusCategory != Done AND labels IN (deployment-blocker)","id":"O.5","nlq":"Deployment blockers","query_summary":"Natural query: 'Deployment blockers'. Synonyms: release blockers, unresolved deployment issues. Paraphrases: 'Show deployment blockers', 'List issues marked as deployment-blocker'. This JQL filters issues not in Done and labeled as deployment-blocker. Fields: statusCategory, labels. Entities: != Done, deployment-blocker. Purpose: Useful for gating deployments.","paraphrases":["Show deployment blockers","List issues marked as deployment-blocker"],"intents":["browse","release","status","labels"],"entities":"{\"statusCategory\":\"!= Done\",\"labels\":\"deployment-blocker\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::M.7","fields":{"description":"Finds tickets pending customer input.","why":"Helps agents track requests awaiting customer replies.","entities_flat":["status:Waiting for Customer"],"synonyms":["pending customer","awaiting user input"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["status"],"notes":"Relies on 'Waiting for Customer' status naming; customize per workflow.","jql":"status = \"Waiting for Customer\"","id":"M.7","nlq":"Requests waiting for customer response","query_summary":"Natural query: 'Requests waiting for customer response'. Synonyms: pending customer, awaiting user input. Paraphrases: 'Show requests waiting for customer', 'List tickets where response from customer is pending'. This JQL filters issues where status equals 'Waiting for Customer'. Field: status. Entity: Waiting for Customer. Purpose: Useful for monitoring tickets pending customer action in service desk workflows.","paraphrases":["Show requests waiting for customer","List tickets where response from customer is pending"],"intents":["browse","sla","status"],"entities":"{\"status\":\"Waiting for Customer\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::WV.1","fields":{"description":"Find highly watched/popular issues","why":"Community engagement and issue prioritization.","entities_flat":["watchers:> 10"],"synonyms":["popular issues","highly watched items"],"section":"I. Watchers and Voting Patterns","jql_fields":["watchers"],"notes":"watchers field counts number of people watching","jql":"watchers > 10","id":"WV.1","nlq":"Issues with more than 10 watchers","query_summary":"Natural query: 'Issues with more than 10 watchers'. Finds issues with high community interest and visibility.","paraphrases":["Show issues with many watchers","Find popular watched issues"],"intents":["browse","watchers","popular"],"entities":"{\"watchers\":\"> 10\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.10","fields":{"description":"Open work in active sprint.","why":"Highlights work still pending within current sprint.","entities_flat":["sprint:openSprints()","resolution:EMPTY"],"synonyms":["unfinished sprint issues","pending sprint tickets"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint","resolution"],"notes":"Combines open sprint detection with resolution empty check.","jql":"sprint IN openSprints() AND resolution IS EMPTY","id":"G.10","nlq":"Unresolved issues in current sprint","query_summary":"Natural query: 'Unresolved issues in current sprint'. Synonyms: unfinished sprint issues, pending sprint tickets. Paraphrases: 'Show unresolved items in active sprint', 'List sprint work still open'. This JQL filters issues in open sprints where resolution is empty. Fields: sprint, resolution. Entities: openSprints(), EMPTY. Purpose: Useful for daily scrum and tracking incomplete sprint scope.","paraphrases":["Show unresolved items in active sprint","List sprint work still open"],"intents":["browse","sprint","resolution"],"entities":"{\"sprint\":\"openSprints()\",\"resolution\":\"EMPTY\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::G.1","fields":{"description":"Sprint by id.","why":"Directly queries all issues assigned to a specific sprint.","entities_flat":["sprint:42"],"synonyms":["tickets in sprint 42","items in sprint 42"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint"],"notes":"Sprints are typically identified by numeric IDs. Names may also be used in some contexts.","jql":"sprint = 42","id":"G.1","nlq":"Issues in sprint 42","query_summary":"Natural query: 'Issues in sprint 42'. Synonyms: tickets in sprint 42, items in sprint 42. Paraphrases: 'Show issues in sprint 42', 'List all tickets under sprint 42'. This JQL filters issues where sprint equals 42. Field: sprint. Entity: 42. Purpose: Useful for sprint-based work tracking.","paraphrases":["Show issues in sprint 42","List all tickets under sprint 42"],"intents":["browse","sprint"],"entities":"{\"sprint\":\"42\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::DD.2","fields":{"description":"Find issues due on next business day","why":"Daily planning and immediate deadline awareness.","entities_flat":["duedate:startOfDay(1d)"],"synonyms":["due next day","tomorrow's deadlines"],"section":"G. Due Date and Overdue Patterns","jql_fields":["duedate"],"notes":"startOfDay(1d) represents start of next day","jql":"duedate = startOfDay(1d)","id":"DD.2","nlq":"Issues due tomorrow","query_summary":"Natural query: 'Issues due tomorrow'. Shows all issues with due dates set for the next day.","paraphrases":["Show issues due tomorrow","List tomorrow's deadlines"],"intents":["browse","due","tomorrow"],"entities":"{\"duedate\":\"startOfDay(1d)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.4","fields":{"description":"Activity sort.","why":"Helpful for monitoring recent work or changes in issues.","entities_flat":["updated:DESC"],"synonyms":["latest activity first","most recently changed first"],"section":"F. Sorting & Ordering","jql_fields":["updated"],"notes":"Updated DESC sorts issues by most recent modification timestamp.","jql":"ORDER BY updated DESC","id":"F.4","nlq":"Recently updated first","query_summary":"Natural query: 'Recently updated first'. Synonyms: latest activity first, most recently changed first. Paraphrases: 'Show issues updated most recently', 'Sort tickets by last activity'. This JQL sorts issues by updated field in descending order. Field: updated. Entity: DESC. Purpose: Useful for tracking recent progress.","paraphrases":["Show issues updated most recently","Sort tickets by last activity"],"intents":["sort","updated"],"entities":"{\"updated\":\"DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::H.6","fields":{"description":"Team-managed projects use parent instead of Epic Link.","why":"Ensures coverage of both project types when querying epic children.","entities_flat":["parent:ALPHA-123"],"synonyms":["stories in epic ALPHA-123 (team-managed)","child issues of epic ALPHA-123"],"section":"H. Epics, Parents & Subtasks","jql_fields":["parent"],"notes":"In team-managed projects, epics are parents of stories directly, unlike company-managed projects.","jql":"parent = ALPHA-123","id":"H.6","nlq":"Children of epic ALPHA-123 (team-managed)","query_summary":"Natural query: 'Children of epic ALPHA-123 (team-managed)'. Synonyms: stories in epic ALPHA-123 (team-managed), child issues of epic ALPHA-123. Paraphrases: 'List children of epic ALPHA-123 in team-managed project', 'Show all issues under epic ALPHA-123'. This JQL filters issues where parent equals ALPHA-123. Field: parent. Entity: ALPHA-123. Purpose: Required for team-managed projects where parent links replace Epic Link.","paraphrases":["List children of epic ALPHA-123 in team-managed project","Show all issues under epic ALPHA-123"],"intents":["browse","epic","parent-child"],"entities":"{\"parent\":\"ALPHA-123\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::P.5","fields":{"description":"Customer-impacting defects.","why":"Helps prioritize customer-facing bugs in backend tied to a version range.","entities_flat":["issuetype:Bug","component:Backend","labels:customer","affectedVersion:~ 3.*"],"synonyms":["backend customer bugs","defects affecting version 3.x"],"section":"P. Examples Combining Many Concepts","jql_fields":["issuetype","component","labels","affectedVersion"],"notes":"Combines component, label, and version to pinpoint customer issues.","jql":"issuetype = Bug AND component = Backend AND labels = customer AND affectedVersion ~ \"3.*\"","id":"P.5","nlq":"Backend bugs with label customer and affectedVersion 3.x","query_summary":"Natural query: 'Backend bugs with label customer and affectedVersion 3.x'. Synonyms: backend customer bugs, defects affecting version 3.x. Paraphrases: 'Show backend bugs affecting customer in version 3.x', 'List customer-impacting backend bugs with affected version 3.x'. This JQL filters backend bugs labeled 'customer' with affectedVersion ~ 3.*. Fields: issuetype, component, labels, affectedVersion. Entities: Bug, Backend, customer, ~ 3.*. Purpose: Useful for customer-impact defect tracking.","paraphrases":["Show backend bugs affecting customer in version 3.x","List customer-impacting backend bugs with affected version 3.x"],"intents":["browse","issuetype","component","labels","affectedVersion"],"entities":"{\"issuetype\":\"Bug\",\"component\":\"Backend\",\"labels\":\"customer\",\"affectedVersion\":\"~ 3.*\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::TRANS.1","fields":{"description":"Bugs that bypassed normal workflow stages today","why":"Ensures workflow integrity and process compliance","entities_flat":["issuetype:Bug","from_status:To Do","to_status:Done","timeframe:today"],"synonyms":["workflow bypasses","direct status jumps","skipped stages"],"section":"Status Transitions","jql_fields":["issuetype","status"],"notes":"Tracks workflow compliance and identifies process bypasses","jql":"issuetype = Bug AND status CHANGED FROM \"To Do\" TO \"Done\" DURING (startOfDay(), now())","id":"TRANS.1","nlq":"Bugs that moved directly from To Do to Done today","query_summary":"Natural query: 'Bugs that moved directly from To Do to Done today'. Workflow compliance tracking. Purpose: Process integrity monitoring.","paraphrases":["Show bugs that skipped workflow stages today","List direct To Do → Done transitions"],"intents":["transition","workflow","bypass"],"entities":"{\"issuetype\":\"Bug\",\"from_status\":\"To Do\",\"to_status\":\"Done\",\"timeframe\":\"today\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::C.10","fields":{"description":"You are a watcher.","why":"Helps track issues where the user is explicitly watching.","entities_flat":["watcher:currentUser()"],"synonyms":["watched by me","my watchlist"],"section":"C. Logical Combinations & Set Ops","jql_fields":["watcher"],"notes":"Watcher field requires permissions; not all instances expose it.","jql":"watcher = currentUser()","id":"C.10","nlq":"Issues I watch","query_summary":"Natural query: 'Issues I watch'. Synonyms: watched by me, my watchlist. Paraphrases: 'List issues I watch', 'Show tickets I am watching'. This JQL filters issues where the watcher equals the current user. Fields involved: watcher. Entity value: currentUser(). Purpose: Useful for personal monitoring.","paraphrases":["List issues I watch","Show tickets I am watching"],"intents":["browse","watcher"],"entities":"{\"watcher\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::K.8","fields":{"description":"Overrun detection.","why":"Useful for retrospective analysis and improving estimation accuracy.","entities_flat":["timespent:> originalEstimate"],"synonyms":["overrun tasks","exceeded estimates"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["timespent","originalEstimate"],"notes":"Highlights issues that consumed more effort than planned.","jql":"timespent > originalEstimate","id":"K.8","nlq":"Time spent exceeds original estimate","query_summary":"Natural query: 'Time spent exceeds original estimate'. Synonyms: overrun tasks, exceeded estimates. Paraphrases: 'Show issues where logged time is greater than estimated', 'List tickets with exceeded effort'. This JQL filters issues where timespent is greater than originalEstimate. Fields: timespent, originalEstimate. Purpose: Useful for spotting estimation overruns.","paraphrases":["Show issues where logged time is greater than estimated","List tickets with exceeded effort"],"intents":["browse","timespent","estimate"],"entities":"{\"timespent\":\"> originalEstimate\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.9","fields":{"description":"Track status changes within timeframe using CHANGED TO with DURING","why":"Provides correct status history tracking syntax","entities_flat":["Reopened","30d"],"synonyms":["reopened","reverted"],"section":"AI. Accuracy Improvements - Status History","jql_fields":["status"],"notes":"Use CHANGED TO with DURING for status change tracking","jql":"status CHANGED TO \"Reopened\" DURING (-30d, now())","id":"AI.9","nlq":"Issues reopened in last month","query_summary":"Natural query: 'Issues reopened in last month'. Synonyms: reopened, reverted. This JQL tracks status changes in timeframes. Fields: status. Entity: Reopened.","paraphrases":["Tickets reopened this month","Issues changed to reopened"],"intents":["history","status","time"],"entities":"\"{\\\"status\\\": \\\"Reopened\\\", \\\"timeframe\\\": \\\"30d\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.3","fields":{"description":"Requires ScriptRunner.","why":"Identifies higher-level epics that are not yet fully completed.","entities_flat":["issuetype:Epic","issueFunction:epicsOf()","statusCategory:!= Done"],"synonyms":["epics with unfinished stories","epics containing open work"],"section":"P. Examples Combining Many Concepts","jql_fields":["issuetype","issueFunction","statusCategory"],"notes":"Requires ScriptRunner’s epicsOf() function.","jql":"issuetype = Epic AND issueFunction IN epicsOf(\"statusCategory != Done\")","id":"P.3","nlq":"Epics with children not done","query_summary":"Natural query: 'Epics with children not done'. Synonyms: epics with unfinished stories, epics containing open work. Paraphrases: 'Show epics with children not in Done', 'List epics that still have incomplete issues'. This JQL requires ScriptRunner and filters epics with children where statusCategory != Done. Fields: issuetype, issueFunction, statusCategory. Entities: Epic, epicsOf(), != Done. Purpose: Useful for tracking epic completion.","paraphrases":["Show epics with children not in Done","List epics that still have incomplete issues"],"intents":["browse","epic","status"],"entities":"{\"issuetype\":\"Epic\",\"issueFunction\":\"epicsOf()\",\"statusCategory\":\"!= Done\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::H.5","fields":{"description":"Requires ScriptRunner.","why":"Fetches all child issues of epics that match a saved filter.","entities_flat":["issueFunction:issuesInEpics()","filter:Q3 Epics"],"synonyms":["epic children from filter","stories in epics from Q3 Epics"],"section":"H. Epics, Parents & Subtasks","jql_fields":["issueFunction","filter"],"notes":"Requires ScriptRunner; issuesInEpics() allows nested queries by filter reference.","jql":"issueFunction IN issuesInEpics(\"filter = 'Q3 Epics'\")","id":"H.5","nlq":"All children of epics returned by a filter","query_summary":"Natural query: 'All children of epics returned by a filter'. Synonyms: epic children from filter, stories in epics from Q3 Epics. Paraphrases: 'Show all children of epics in filter Q3 Epics', 'List stories under epics from filter Q3 Epics'. This JQL uses ScriptRunner’s issuesInEpics() function with filter = 'Q3 Epics'. Fields: issueFunction, filter. Entities: issuesInEpics(), Q3 Epics. Purpose: Useful for combining saved filters with epic-child relations.","paraphrases":["Show all children of epics in filter Q3 Epics","List stories under epics from filter Q3 Epics"],"intents":["browse","epic","function"],"entities":"{\"issueFunction\":\"issuesInEpics()\",\"filter\":\"Q3 Epics\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.29","fields":{"description":"Environment-based queries.","why":"Useful for debugging staging-only issues.","entities_flat":["environment:~ staging","text:~ staging"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["environment","text"],"jql":"environment ~ \"staging\" OR text ~ \"staging\"","id":"S.29","nlq":"Tickets mentioning staging environment","query_summary":"Find issues tagged with staging environment or mentioning it in text.","intents":["browse","environment","text"],"entities":"{\"environment\":\"~ staging\",\"text\":\"~ staging\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.4","fields":{"description":"Matches comment text.","why":"Helps locate conversations or troubleshooting notes where retry was mentioned.","entities_flat":["comment:~ retry"],"synonyms":["discussion contains retry","feedback mentions retry"],"section":"D. Text & Content Search","jql_fields":["comment"],"notes":"Search limited to comment field only.","jql":"comment ~ \"retry\"","id":"D.4","nlq":"Comments mention \"retry\"","query_summary":"Natural query: 'Comments mention retry'. Synonyms: discussion contains retry, feedback mentions retry. Paraphrases: 'Find issues with comments mentioning retry', 'Show tickets where retry appears in comments'. This JQL filters issues where the comment field contains the word retry. Fields: comment. Entity: ~ retry. Purpose: Useful for reviewing discussions about retry logic or attempts.","paraphrases":["Find issues with comments mentioning retry","Show tickets where retry appears in comments"],"intents":["search","comment"],"entities":"{\"comment\":\"~ retry\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::B.11","fields":{"description":"Bugs that transitioned into Reopened recently.","why":"Helps track regression issues and reopened work.","entities_flat":["issuetype:Bug","status:Reopened","timeframe:-14d"],"synonyms":["reopened bugs","bugs reopened recently"],"section":"B. Time & Date Filters","jql_fields":["issuetype","status"],"jql":"issuetype = Bug AND status CHANGED TO Reopened DURING (-14d, now())","id":"B.11","nlq":"Bugs reopened in the last 14 days","query_summary":"Natural query: 'Bugs reopened in the last 14 days'. Synonyms: reopened bugs, bugs reopened recently. Paraphrases: 'List bugs reopened in last 14 days', 'Show reopened tickets in past 2 weeks'. This JQL combines issuetype = Bug with status CHANGED TO Reopened DURING (-14d, now()) to capture bugs that re-entered workflow. Purpose: useful for quality tracking.","paraphrases":["List bugs reopened in last 14 days","Show reopened tickets in past 2 weeks"],"intents":["time","status","history"],"entities":"{\"issuetype\":\"Bug\",\"status\":\"Reopened\",\"timeframe\":\"-14d\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::LK.1","fields":{"description":"Find issues depending on specific blocker","why":"Dependency tracking and bottleneck identification.","entities_flat":["linkedIssues:DELTA-10, is blocked by"],"synonyms":["dependent on DELTA-10","waiting for DELTA-10"],"section":"L. Linking and Dependencies","jql_fields":["linkedIssues"],"notes":"linkedIssues() with relationship type finds dependencies","jql":"issue IN linkedIssues(DELTA-10, \"is blocked by\")","id":"LK.1","nlq":"Issues blocked by DELTA-10","query_summary":"Natural query: 'Issues blocked by DELTA-10'. Shows all issues that cannot proceed until DELTA-10 is resolved.","paraphrases":["Show issues blocked by DELTA-10","Find work depending on DELTA-10"],"intents":["browse","blocked","dependency"],"entities":"{\"linkedIssues\":\"DELTA-10, is blocked by\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.12","fields":{"description":"Sizing gaps.","why":"Helps identify stories lacking estimates.","entities_flat":["issuetype:Story","Story Points:EMPTY"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","Story Points"],"jql":"issuetype = Story AND \"Story Points\" IS EMPTY","id":"S.12","nlq":"Stories with no story points","query_summary":"Show stories with empty Story Points field.","intents":["browse","issuetype","story points"],"entities":"{\"issuetype\":\"Story\",\"Story Points\":\"EMPTY\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.15","fields":{"description":"Use API pagination to fetch first 100.","why":"Quickly surfaces newest bug reports.","entities_flat":["issuetype:Bug","ordering:created DESC"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","created"],"jql":"issuetype = Bug ORDER BY created DESC","id":"S.15","nlq":"Top 100 newest bugs","query_summary":"Show the most recent bugs ordered by created date, paginated to 100 items.","intents":["browse","issuetype","ordering"],"entities":"{\"issuetype\":\"Bug\",\"ordering\":\"created DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AF.1","fields":{"description":"Find bugs that have file attachments","why":"Bug triage and evidence tracking.","entities_flat":["issuetype:Bug","attachments:NOT EMPTY"],"synonyms":["bugs with files","bugs with uploads"],"section":"H. Attachment and File Management","jql_fields":["issuetype","attachments"],"notes":"attachments IS NOT EMPTY checks for file presence","jql":"issuetype = Bug AND attachments IS NOT EMPTY","id":"AF.1","nlq":"Bugs with attachments uploaded","query_summary":"Natural query: 'Bugs with attachments uploaded'. Finds bugs that have supporting file attachments.","paraphrases":["Show bugs that have attachments","Find bugs with uploaded files"],"intents":["browse","attachments","files"],"entities":"{\"issuetype\":\"Bug\",\"attachments\":\"NOT EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.7","fields":{"description":"Filters by issue type.","why":"Common filter to focus on bug issues only.","entities_flat":["issuetype:Bug"],"synonyms":["defects","errors","problems"],"section":"A. Basic Filters","jql_fields":["issuetype"],"notes":"Ensure 'Bug' is a valid issuetype in the instance; naming may differ.","jql":"issuetype = Bug","id":"A.7","nlq":"Bugs only","query_summary":"Natural query: 'Bugs only'. Synonyms: defects, errors, problems. Paraphrases: 'List all bugs', 'Show defect issues', 'Only error tickets'. This JQL filters issues where the issuetype equals Bug. Fields involved: issuetype. Entity value: Bug. Purpose: Used for isolating bug reports for QA or development focus.","paraphrases":["List all bugs","Show defect issues","Only error tickets"],"intents":["browse","issuetype"],"entities":"{\"issuetype\":\"Bug\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.3","fields":{"description":"Full-text across indexed fields.","why":"Broad search to catch mentions of a keyword across multiple fields.","entities_flat":["text:~ payment"],"synonyms":["all fields search","full-text contains payment"],"section":"D. Text & Content Search","jql_fields":["text"],"notes":"text ~ works across all indexed fields (summary, description, comments, etc.).","jql":"text ~ \"payment\"","id":"D.3","nlq":"Any field mentions \"payment\"","query_summary":"Natural query: 'Any field mentions payment'. Synonyms: all fields search, full-text contains payment. Paraphrases: 'Search all fields for keyword payment', 'List tickets mentioning payment anywhere'. This JQL searches across all indexed fields for the word payment. Fields: text (meta). Entity: ~ payment. Purpose: Useful for broad keyword hunting across issues.","paraphrases":["Search all fields for keyword payment","List tickets mentioning payment anywhere"],"intents":["search","text"],"entities":"{\"text\":\"~ payment\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.26","fields":{"description":"Work already finished in past sprints.","why":"Useful for reviewing past sprint scope.","entities_flat":["sprint:closedSprints()"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["sprint"],"jql":"sprint IN closedSprints()","id":"S.26","nlq":"Items from closed sprints","query_summary":"List issues that belong to already closed sprints.","intents":["browse","sprint"],"entities":"{\"sprint\":\"closedSprints()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::COMM.1","fields":{"description":"Recent automated comments for bot activity monitoring","why":"Monitors automation system health and activity","entities_flat":["commenter:automation-bot","timeframe:recent"],"synonyms":["bot comments","automated updates","system comments"],"section":"Advanced Comments","jql_fields":["comment"],"notes":"Tracks automated system activity via comment authorship","jql":"comment WAS MADE BY \"automation-bot\" AFTER \"-1d\"","id":"COMM.1","nlq":"Issues where last comment was made by automation bot","query_summary":"Natural query: 'Issues where last comment was made by automation bot'. Automation activity tracking. Purpose: System automation monitoring.","paraphrases":["Show recent automation bot comments","List automated comment activity"],"intents":["comments","automation","recent"],"entities":"{\"commenter\":\"automation-bot\",\"timeframe\":\"recent\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.5","fields":{"description":"Organization field.","why":"Helps identify requests filed by specific organizations or customers.","entities_flat":["organizations:Acme Corp"],"synonyms":["Acme Corp requests","tickets from Acme Corp"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["organizations"],"notes":"Organizations must be enabled in JSM; names vary per instance.","jql":"organizations = \"Acme Corp\"","id":"M.5","nlq":"Organization is Acme Corp","query_summary":"Natural query: 'Organization is Acme Corp'. Synonyms: Acme Corp requests, tickets from Acme Corp. Paraphrases: 'Show requests from Acme Corp', 'List tickets filed by Acme Corp organization'. This JQL filters issues where organizations field equals Acme Corp. Field: organizations. Entity: Acme Corp. Purpose: Useful for customer-specific reporting.","paraphrases":["Show requests from Acme Corp","List tickets filed by Acme Corp organization"],"intents":["browse","organization"],"entities":"{\"organizations\":\"Acme Corp\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::E.6","fields":{"description":"No component.","why":"Helps find issues not mapped to any subsystem/component.","entities_flat":["component:EMPTY"],"synonyms":["no component","unset component"],"section":"E. Versions, Components, Labels","jql_fields":["component"],"notes":"component IS EMPTY identifies issues with no component assigned.","jql":"component IS EMPTY","id":"E.6","nlq":"Component not set","query_summary":"Natural query: 'Component not set'. Synonyms: no component, unset component. Paraphrases: 'Show issues without component', 'List tickets missing component assignment'. This JQL filters issues where component is empty. Fields: component. Entity: EMPTY. Purpose: Useful for cleanup and ensuring subsystem ownership.","paraphrases":["Show issues without component","List tickets missing component assignment"],"intents":["browse","component"],"entities":"{\"component\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.8","fields":{"description":"Uses version release dates.","why":"Tracks upcoming scheduled releases.","entities_flat":["fixVersionReleaseDate:next week"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["fixVersionReleaseDate"],"jql":"fixVersionReleaseDate >= startOfWeek(+1w) AND fixVersionReleaseDate <= endOfWeek(+1w)","id":"S.8","nlq":"Releases due next week","query_summary":"List issues with fixVersion release dates in the next week.","intents":["browse","fixVersion"],"entities":"{\"fixVersionReleaseDate\":\"next week\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::AI.3","fields":{"description":"Search attachment names directly - use 'attachments ~' NOT 'text ~'","why":"Fixes common error of using text search for attachment names","entities_flat":["log.txt","attachments"],"synonyms":["files","uploads"],"section":"AI. Accuracy Improvements - Attachment Search","jql_fields":["attachments"],"notes":"CRITICAL: Search attachments field, not text content for filenames","jql":"attachments ~ \"log.txt\"","id":"AI.3","nlq":"Find tickets with log.txt attachment","query_summary":"Natural query: 'Find tickets with log.txt attachment'. Synonyms: files, uploads. This JQL searches attachment names directly. Fields: attachments. Entity: log.txt.","paraphrases":["Issues with log file attached","Tickets containing log.txt"],"intents":["search","attachments"],"entities":"\"{\\\"filename\\\": \\\"log.txt\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::PERF.1","fields":{"description":"Issues that took exceptionally long to resolve","why":"Identifies process bottlenecks and improvement opportunities","entities_flat":["timeframe:6 months","duration_threshold:90 days"],"synonyms":["slow resolution","long-duration issues","extended work items"],"section":"Performance Analysis","jql_fields":["resolved","resolved.timeSpent"],"notes":"Analyzes resolution performance to identify process issues","jql":"resolved >= \"-6m\" AND resolved.timeSpent > \"90d\"","id":"PERF.1","nlq":"Issues with abnormally long resolution times over 90 days","query_summary":"Natural query: 'Issues with abnormally long resolution times over 90 days'. Performance analysis. Purpose: Process efficiency assessment.","paraphrases":["Show issues that took too long to resolve","List slow-resolution items"],"intents":["performance","resolution","duration"],"entities":"{\"timeframe\":\"6 months\",\"duration_threshold\":\"90 days\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.8","fields":{"description":"All planned but not yet started sprints.","why":"Useful for looking ahead at planned sprint scope.","entities_flat":["sprint:futureSprints()"],"synonyms":["upcoming sprints","planned sprints"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint"],"notes":"futureSprints() dynamically resolves to all sprints not yet started.","jql":"sprint IN futureSprints()","id":"G.8","nlq":"Issues in future sprints","query_summary":"Natural query: 'Issues in future sprints'. Synonyms: upcoming sprints, planned sprints. Paraphrases: 'Show issues in future sprints', 'List tickets in planned upcoming sprints'. This JQL filters issues where sprint is in futureSprints(). Field: sprint. Entity: futureSprints(). Purpose: Useful for forward planning.","paraphrases":["Show issues in future sprints","List tickets in planned upcoming sprints"],"intents":["browse","sprint"],"entities":"{\"sprint\":\"futureSprints()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::TRANS.3","fields":{"description":"Issues with modified reporter field indicating ownership changes","why":"Tracks issue ownership changes and data integrity","entities_flat":["field:reporter","change_timing:after creation"],"synonyms":["reporter modifications","ownership transfers","creator changes"],"section":"Status Transitions","jql_fields":["reporter","created"],"notes":"Identifies issues where original reporter was modified post-creation","jql":"reporter CHANGED AFTER created","id":"TRANS.3","nlq":"Issues where reporter was changed after creation","query_summary":"Natural query: 'Issues where reporter was changed after creation'. Ownership change tracking. Purpose: Data integrity and ownership monitoring.","paraphrases":["Show issues with changed reporters","List modified issue ownership"],"intents":["change","reporter","ownership"],"entities":"{\"field\":\"reporter\",\"change_timing\":\"after creation\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.14","fields":{"description":"Ready for next release train.","why":"Tracks completed work waiting for deployment.","entities_flat":["resolutiondate:>= -7d","fixVersion:unreleasedVersions()"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["resolutiondate","fixVersion"],"jql":"resolutiondate >= -7d AND fixVersion IN unreleasedVersions()","id":"S.14","nlq":"Recently resolved but not yet released","query_summary":"Show issues resolved in last 7 days with unreleased fixVersions.","intents":["browse","resolutiondate","fixVersion"],"entities":"{\"resolutiondate\":\">= -7d\",\"fixVersion\":\"unreleasedVersions()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::EP.2","fields":{"description":"Find empty epics without child stories","why":"Epic hygiene and planning completeness validation.","entities_flat":["issuetype:Epic","subtasks:NOT hasSubtasks()"],"synonyms":["empty epics","epics without stories"],"section":"F. Epic and Hierarchy Management","jql_fields":["issuetype","subtasks"],"notes":"hasSubtasks() checks for child issue existence","jql":"issuetype = Epic AND issueFunction NOT IN hasSubtasks()","id":"EP.2","nlq":"Epics with no child stories","query_summary":"Natural query: 'Epics with no child stories'. Finds epics that don't have any child stories or tasks.","paraphrases":["Show epics with no children","Find empty epic containers"],"intents":["browse","epic","empty"],"entities":"{\"issuetype\":\"Epic\",\"subtasks\":\"NOT hasSubtasks()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::B.3","fields":{"description":"From week start.","why":"Helps track weekly activity on issues.","entities_flat":["updated:>= startOfWeek()"],"synonyms":["modified this week","changed this week"],"section":"B. Time & Date Filters","jql_fields":["updated"],"notes":"startOfWeek() usually starts on Monday but depends on Jira configuration.","jql":"updated >= startOfWeek()","id":"B.3","nlq":"Updated this week","query_summary":"Natural query: 'Updated this week'. Synonyms: modified this week, changed this week. Paraphrases: 'List issues updated since start of week', 'Show tickets modified this week', 'Items changed this calendar week'. This JQL filters issues where the updated field is greater than or equal to startOfWeek(). Fields involved: updated. Entity value: startOfWeek(). Purpose: Useful for weekly reports and monitoring activity.","paraphrases":["List issues updated since start of week","Show tickets modified this week","Items changed this calendar week"],"intents":["time","updated"],"entities":"{\"updated\":\">= startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AF.2","fields":{"description":"Find discussed issues lacking file attachments","why":"Information completeness and documentation quality.","entities_flat":["comment:NOT EMPTY","attachments:EMPTY"],"synonyms":["commented but no files","discussed without attachments"],"section":"H. Attachment and File Management","jql_fields":["comment","attachments"],"notes":"Combines comment and attachment existence checks","jql":"comment IS NOT EMPTY AND attachments IS EMPTY","id":"AF.2","nlq":"Issues with comments but no attachments","query_summary":"Natural query: 'Issues with comments but no attachments'. Finds issues with discussions but missing supporting files.","paraphrases":["Show issues with comments but no files","Find discussed items missing attachments"],"intents":["browse","comment","attachments"],"entities":"{\"comment\":\"NOT EMPTY\",\"attachments\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::STATUS_TIME.2","fields":{"description":"Daily task completion tracking via status transitions","why":"Daily progress and productivity measurement","entities_flat":["issuetype:Task","to_status:Done","timeframe:today"],"synonyms":["tasks completed today","daily task completions"],"section":"Status Transitions + Time","jql_fields":["issuetype","status"],"notes":"Daily productivity tracking via completion status monitoring","jql":"issuetype = Task AND status CHANGED TO \"Done\" DURING (startOfDay(), now())","id":"STATUS_TIME.2","nlq":"Tasks moved to Done status today","query_summary":"Natural query: 'Tasks moved to Done status today'. Daily completion tracking. Purpose: Daily progress monitoring.","paraphrases":["Show tasks completed today","List tasks marked Done today"],"intents":["status","completion","daily","done"],"entities":"{\"issuetype\":\"Task\",\"to_status\":\"Done\",\"timeframe\":\"today\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.7","fields":{"description":"Reuses a saved filter.","why":"Reuses existing saved search definitions.","entities_flat":["filter:Hot Bugs"],"synonyms":["saved search","stored filter"],"section":"C. Logical Combinations & Set Ops","jql_fields":["filter"],"notes":"Filter names are string identifiers of saved filters.","jql":"filter = \"Hot Bugs\"","id":"C.7","nlq":"Filter by saved filter \"Hot Bugs\"","query_summary":"Natural query: 'Filter by saved filter Hot Bugs'. Synonyms: saved search, stored filter. Paraphrases: 'Use saved filter Hot Bugs', 'Apply saved query Hot Bugs'. This JQL references a saved filter named Hot Bugs. Fields involved: filter. Entity value: Hot Bugs. Purpose: Useful for quickly reusing pre-defined filter logic.","paraphrases":["Use saved filter Hot Bugs","Apply saved query Hot Bugs"],"intents":["browse","filter"],"entities":"{\"filter\":\"Hot Bugs\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.16","fields":{"description":"Projects within the Engineering category.","why":"Groups projects into broader categories, useful for reporting.","entities_flat":["category:Engineering"],"synonyms":["project category","engineering group","engineering projects"],"section":"A. Basic Filters","jql_fields":["category"],"notes":"Categories group multiple projects; ensure 'Engineering' exists in your instance.","jql":"category = Engineering","id":"A.16","nlq":"Category: Engineering projects","query_summary":"Natural query: 'Category: Engineering projects'. Synonyms: project category, engineering group, engineering projects. Paraphrases: 'List engineering category projects', 'Show tickets under Engineering category', 'Issues in Engineering group'. This JQL filters projects where the category equals Engineering. Fields involved: category. Entity value: Engineering. Purpose: Used for portfolio-level tracking and reporting.","paraphrases":["List engineering category projects","Show tickets under Engineering category","Issues in Engineering group"],"intents":["browse","category"],"entities":"{\"category\":\"Engineering\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ST.2","fields":{"description":"Identify recently reopened bugs for quality analysis","why":"Quality tracking and regression analysis.","entities_flat":["issuetype:Bug","status:Reopened","time:-30d"],"synonyms":["recently reopened bugs","bugs reopened recently"],"section":"C. Status Transitions and History","jql_fields":["issuetype","status"],"notes":"CHANGED TO tracks transitions to specific status","jql":"issuetype = Bug AND status CHANGED TO \"Reopened\" DURING (-30d, now())","id":"ST.2","nlq":"Bugs reopened in the last 30 days","query_summary":"Natural query: 'Bugs reopened in the last 30 days'. Identifies bugs that were reopened recently for quality analysis.","paraphrases":["Show bugs reopened in last month","List recently regressed bugs"],"intents":["browse","status","reopened"],"entities":"{\"issuetype\":\"Bug\",\"status\":\"Reopened\",\"time\":\"-30d\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.9","fields":{"description":"Relies on Jira search relevance.","why":"Useful for keyword searches where ranking is based on relevance instead of field values.","entities_flat":["relevance:default"],"synonyms":["search relevance","default search ranking"],"section":"F. Sorting & Ordering","jql_fields":["relevance"],"jql":"ORDER BY relevance","id":"F.9","nlq":"Default relevance order","query_summary":"Natural query: 'Default relevance order'. Synonyms: search relevance, default search ranking. Paraphrases: 'Sort by Jira’s relevance', 'Order results by relevance'. This JQL sorts issues by Jira’s relevance scoring. Field: relevance. Purpose: Useful for keyword-driven search results.","paraphrases":["Sort by Jira’s relevance","Order results by relevance"],"intents":["sort","search"],"entities":"{\"relevance\":\"default\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SLA.4","fields":{"description":"Mixed SLA performance analysis - resolution success with response failure","why":"Helps identify process gaps in SLA performance patterns","entities_flat":["resolution_sla:met","response_sla:breached"],"synonyms":["mixed SLA performance","resolution met response failed"],"section":"SLA Management","jql_fields":["Time to resolution","Time to first response"],"notes":"Demonstrates combining different SLA metrics for performance analysis","jql":"\"Time to resolution\" = met() AND \"Time to first response\" = breached()","id":"SLA.4","nlq":"SLA metrics where resolution time was met but first response failed","query_summary":"Natural query: 'SLA metrics where resolution time was met but first response failed'. Combines different SLA statuses. Purpose: SLA performance pattern analysis.","paraphrases":["Show tickets where resolution SLA passed but response SLA failed"],"intents":["sla","analysis","mixed"],"entities":"{\"resolution_sla\":\"met\",\"response_sla\":\"breached\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::QS.1","fields":{"description":"Find issues without severity classification","why":"Data quality and issue classification completeness.","entities_flat":["severity:EMPTY"],"synonyms":["unclassified severity","missing severity"],"section":"Q. Quality and Missing Information Patterns","jql_fields":["severity"],"notes":"severity IS EMPTY checks for missing field values","jql":"severity IS EMPTY","id":"QS.1","nlq":"Issues missing severity field","query_summary":"Natural query: 'Issues missing severity field'. Finds issues that need severity classification.","paraphrases":["Show issues without severity","Find unclassified issues"],"intents":["browse","quality","missing"],"entities":"{\"severity\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.3","fields":{"description":"OR via IN list.","why":"Identify issues belonging to multiple relevant components.","entities_flat":["component:Backend","component:API"],"synonyms":["subsystem","module"],"section":"C. Logical Combinations & Set Ops","jql_fields":["component"],"notes":"component IN (...) works as an OR condition across components.","jql":"component IN (Backend, API)","id":"C.3","nlq":"Backend or API component","query_summary":"Natural query: 'Backend or API component'. Synonyms: subsystem, module. Paraphrases: 'List issues in Backend or API component', 'Tickets from Backend or API'. This JQL filters issues where the component is either Backend or API. Fields involved: component. Entities: Backend, API. Purpose: Useful for teams responsible for multiple subsystems.","paraphrases":["List issues in Backend or API component","Tickets from Backend or API"],"intents":["browse","component"],"entities":"{\"component\":[\"Backend\",\"API\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.10","fields":{"description":"Numeric custom field used as counter.","why":"Critical for SLA compliance monitoring and incident management.","entities_flat":["SLA Breach Count:>= 1"],"synonyms":["breached issues","SLA violations"],"section":"L. Custom Fields","jql_fields":["SLA Breach Count"],"notes":"Numeric counters often track SLA breaches, escalations, or retries.","jql":"\"SLA Breach Count\" >= 1","id":"L.10","nlq":"SLA Breach Count >= 1","query_summary":"Natural query: 'SLA Breach Count >= 1'. Synonyms: breached issues, SLA violations. Paraphrases: 'Show issues with at least 1 SLA breach', 'List tickets that violated SLA'. This JQL filters issues where SLA Breach Count is greater than or equal to 1. Field: SLA Breach Count. Entity: >= 1. Purpose: Useful for SLA reporting and compliance tracking.","paraphrases":["Show issues with at least 1 SLA breach","List tickets that violated SLA"],"intents":["browse","customfield","numeric"],"entities":"{\"SLA Breach Count\":\">= 1\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::O.1","fields":{"description":"Requires fixVersion release dates to be set.","why":"Helps track release activity and issues fixed in the current month’s deployments.","entities_flat":["fixVersion:releasedVersions()","fixVersionReleaseDate:>= startOfMonth()"],"synonyms":["fixed this month","issues in versions released this month"],"section":"O. Release & Deployment Views","jql_fields":["fixVersion","fixVersionReleaseDate"],"notes":"Requires release dates to be defined for fixVersions; otherwise query may not return expected results.","jql":"fixVersion IN releasedVersions() AND fixVersionReleaseDate >= startOfMonth()","id":"O.1","nlq":"Issues fixed in versions released this month","query_summary":"Natural query: 'Issues fixed in versions released this month'. Synonyms: fixed this month, issues in versions released this month. Paraphrases: 'Show issues fixed in versions released this month', 'List tickets tied to releases from this month'. This JQL filters issues where fixVersion is in releasedVersions() and release date is greater than or equal to startOfMonth(). Fields: fixVersion, fixVersionReleaseDate. Entities: releasedVersions(), >= startOfMonth(). Purpose: Useful for monitoring release progress and deployment tracking.","paraphrases":["Show issues fixed in versions released this month","List tickets tied to releases from this month"],"intents":["browse","release","fixVersion"],"entities":"{\"fixVersion\":\"releasedVersions()\",\"fixVersionReleaseDate\":\">= startOfMonth()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::DT.4","fields":{"description":"Filter issues resolved within current quarter","why":"Quarterly metrics and reporting requirements.","entities_flat":["resolved:startOfQuarter(), endOfQuarter()"],"synonyms":["resolved this quarter","completed this quarter"],"section":"A. Date and Time Functions","jql_fields":["resolved"],"notes":"Quarterly reporting using quarter boundary functions","jql":"resolved >= startOfQuarter() AND resolved <= endOfQuarter()","id":"DT.4","nlq":"Issues resolved this quarter","query_summary":"Natural query: 'Issues resolved this quarter'. Filters issues resolved within current quarter boundaries.","paraphrases":["Show issues resolved in current quarter","List items completed this quarter"],"intents":["browse","time","resolved"],"entities":"{\"resolved\":\"startOfQuarter(), endOfQuarter()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::K.10","fields":{"description":"Team worklog reporting.","why":"Helps track how much effort QA group has logged in the current sprint or week.","entities_flat":["worklogAuthor:membersOf(qa)","worklogDate:>= startOfWeek()"],"synonyms":["qa team logs","work by QA group"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["worklogAuthor","worklogDate"],"notes":"Combines membersOf() with worklogDate for group effort tracking.","jql":"worklogAuthor IN membersOf(\"qa\") AND worklogDate >= startOfWeek()","id":"K.10","nlq":"Work logged by QA group this week","query_summary":"Natural query: 'Work logged by QA group this week'. Synonyms: qa team logs, work by QA group. Paraphrases: 'Show issues with logs by QA group this week', 'List tickets updated by QA team in current week'. This JQL filters issues where worklogAuthor belongs to QA group and worklogDate is greater than or equal to the start of the week. Fields: worklogAuthor, worklogDate. Entities: membersOf(qa), >= startOfWeek(). Purpose: Useful for group-level timesheet analysis.","paraphrases":["Show issues with logs by QA group this week","List tickets updated by QA team in current week"],"intents":["browse","worklog","group"],"entities":"{\"worklogAuthor\":\"membersOf(qa)\",\"worklogDate\":\">= startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::N.1","fields":{"description":"Missing descriptions.","why":"Ensures issues have meaningful details before work begins.","entities_flat":["description:EMPTY"],"synonyms":["no description","empty description"],"section":"N. Quality & Hygiene Queries","jql_fields":["description"],"notes":"Useful for data hygiene and backlog grooming.","jql":"description IS EMPTY","id":"N.1","nlq":"Issues lacking description","query_summary":"Natural query: 'Issues lacking description'. Synonyms: no description, empty description. Paraphrases: 'Show issues without descriptions', 'List tickets missing a description'. This JQL filters issues where description field is empty. Field: description. Entity: EMPTY. Purpose: Useful for identifying poorly documented issues.","paraphrases":["Show issues without descriptions","List tickets missing a description"],"intents":["browse","quality","emptiness"],"entities":"{\"description\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ESCALATION_SLA.1","fields":{"description":"Escalation urgency tracking with SLA countdown monitoring","why":"Escalation management with proactive SLA monitoring","entities_flat":["escalation:escalation","sla_remaining:2h","status:unresolved"],"synonyms":["urgent escalated items","escalation SLA risk"],"section":"Escalation + SLA","jql_fields":["labels","Time to resolution","resolution"],"notes":"Critical for managing escalated items with imminent SLA deadlines","jql":"labels = escalation AND \"Time to resolution\" <= remaining(2h) AND resolution IS EMPTY","id":"ESCALATION_SLA.1","nlq":"Escalated tickets at risk of SLA breach within 2 hours","query_summary":"Natural query: 'Escalated tickets at risk of SLA breach within 2 hours'. Escalation SLA risk management. Purpose: Critical escalation monitoring.","paraphrases":["Show escalated tickets close to SLA breach","List urgent escalations nearing SLA deadline"],"intents":["escalation","sla","risk","urgent"],"entities":"{\"escalation\":\"escalation\",\"sla_remaining\":\"2h\",\"status\":\"unresolved\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::SLA.5","fields":{"description":"High-value customer SLA breach tracking","why":"Critical for managing high-value customer relationships","entities_flat":["customer_tier:Platinum","status:active","sla_status:breached"],"synonyms":["premium customer SLA failures","high-tier SLA breaches"],"section":"SLA Management","jql_fields":["Customer Tier","resolution","Time to resolution"],"notes":"Combines customer tier with SLA status for escalation prioritization","jql":"\"Customer Tier\" = Platinum AND resolution IS EMPTY AND \"Time to resolution\" = breached()","id":"SLA.5","nlq":"Platinum tier customers with active requests breaching SLA","query_summary":"Natural query: 'Platinum tier customers with active requests breaching SLA'. Filters by customer tier and SLA breach. Purpose: Premium customer SLA monitoring.","paraphrases":["Show Platinum customers with SLA breaches","List premium tier SLA failures"],"intents":["sla","customer_tier","breach"],"entities":"{\"customer_tier\":\"Platinum\",\"status\":\"active\",\"sla_status\":\"breached\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::R.14","fields":{"description":"Dependency/relationship filtering.","entities_flat":["issuekey:{ISSUEKEY}","linktype:{LINKTYPE}"],"section":"R. Small Template Bank","jql_fields":["issueLink"],"jql":"issue IN linkedIssues({ISSUEKEY}, {LINKTYPE})","id":"R.14","nlq":"Filter by linked issue relation","query_summary":"Template for linked issue queries like blocks, relates to, duplicates.","intents":["browse","linkedIssues"],"entities":"{\"issuekey\":\"{ISSUEKEY}\",\"linktype\":\"{LINKTYPE}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.7","fields":{"description":"Correct empty field syntax - use 'IS EMPTY' not 'text !~'","why":"Fixes common error in empty field validation","entities_flat":["empty","description"],"synonyms":["details","content"],"section":"AI. Accuracy Improvements - Field Validation","jql_fields":["description"],"notes":"CRITICAL: Use 'field IS EMPTY' for empty checks, not text search operators","jql":"description IS EMPTY","id":"AI.7","nlq":"Issues with empty description","query_summary":"Natural query: 'Issues with empty description'. Synonyms: details, content. This JQL checks for empty description fields correctly. Fields: description.","paraphrases":["Tickets without description","Issues missing details"],"intents":["filter","validation"],"entities":"\"{}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TS.2","fields":{"description":"Find issues where current user was mentioned in comments","why":"Personal task tracking and collaboration awareness.","entities_flat":["comment:currentUser()"],"synonyms":["mentioned in comments","tagged in comments"],"section":"D. Text Search and Field Operations","jql_fields":["comment"],"notes":"comment ~ searches specifically in comment text","jql":"comment ~ currentUser()","id":"TS.2","nlq":"Issues where I was mentioned in comments","query_summary":"Natural query: 'Issues where I was mentioned in comments'. Finds issues where current user was mentioned in comment discussions.","paraphrases":["Show issues where I was mentioned","Find my comment mentions"],"intents":["browse","comment","mention"],"entities":"{\"comment\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.24","fields":{"description":"Requires ScriptRunner or app that supports linkedIssuesFromQuery.","why":"Ensures defects related to incidents are tracked for postmortem.","entities_flat":["issuetype:Bug","linkedIssues:Incident"],"synonyms":["bugs tied to incidents","defects linked with incidents"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","issueLink"],"notes":"linkedIssuesFromQuery is an advanced function not available in vanilla JQL.","jql":"issuetype = Bug AND issue IN linkedIssuesFromQuery(\"issuetype = Incident\")","id":"S.24","nlq":"Bugs linked to incidents","query_summary":"Natural query: 'Bugs linked to incidents'. Synonyms: bugs tied to incidents, defects linked with incidents. Paraphrases: 'Show bugs linked to incidents', 'List bugs connected to incident issues'. This JQL requires add-ons like ScriptRunner and filters bugs that are linked to issues of type Incident. Fields: issuetype, issueLink. Entities: Bug, Incident. Purpose: Useful for incident postmortems and defect correlation.","paraphrases":["Show bugs linked to incidents","List bugs connected to incident issues"],"intents":["browse","issuetype","linkedIssues"],"entities":"{\"issuetype\":\"Bug\",\"linkedIssues\":\"Incident\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::A.1","fields":{"description":"Issues currently in the Open status.","why":"Basic filter to identify active work items still marked as Open.","entities_flat":["status:Open"],"synonyms":["tickets","items","bugs"],"section":"A. Basic Filters","jql_fields":["status"],"notes":"Ensure 'Open' matches your workflow; some instances may use 'In Progress'.","jql":"status = Open","id":"A.1","nlq":"Show me all open issues","query_summary":"Natural query: 'Show me all open issues'. Synonyms: tickets, items, bugs. Paraphrases: 'List open tickets', 'Open issues list', 'Give me active issues'. This JQL filters issues where the status field equals Open. Fields involved: status. Entity value: Open. Purpose: Useful for tracking ongoing work that has not been resolved yet.","paraphrases":["List open tickets","Open issues list","Give me active issues"],"intents":["browse","status"],"entities":"{\"status\":\"Open\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SO.1","fields":{"description":"Get most recent bugs with result limiting","why":"Recent activity monitoring and triage prioritization.","entities_flat":["issuetype:Bug","created:DESC","limit:100"],"synonyms":["latest bugs","recent bug reports"],"section":"R. Sorting and Ordering Patterns","jql_fields":["issuetype","created"],"notes":"ORDER BY created DESC with LIMIT for pagination","jql":"issuetype = Bug ORDER BY created DESC LIMIT 100","id":"SO.1","nlq":"Top 100 newest bugs ordered by creation date","query_summary":"Natural query: 'Top 100 newest bugs ordered by creation date'. Shows most recently created bugs with result limiting.","paraphrases":["Show newest bugs first","List latest bug reports"],"intents":["browse","sorting","newest"],"entities":"{\"issuetype\":\"Bug\",\"created\":\"DESC\",\"limit\":\"100\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.10","fields":{"description":"Combines customer org + severity + SLA.","why":"Helps prioritize escalations for key customers when SLAs fail.","entities_flat":["organizations:Acme Corp","priority:High","priority:Critical","Time to resolution:breached()"],"synonyms":["Acme SLA breaches","critical Acme requests"],"section":"P. Examples Combining Many Concepts","jql_fields":["organizations","priority","Time to resolution"],"notes":"Blends JSM orgs, severity, and SLA compliance.","jql":"organizations = \"Acme Corp\" AND priority IN (High, Critical) AND \"Time to resolution\" = breached()","id":"P.10","nlq":"High-priority requests from Acme Corp breaching SLA","query_summary":"Natural query: 'High-priority requests from Acme Corp breaching SLA'. Synonyms: Acme SLA breaches, critical Acme requests. Paraphrases: 'Show Acme Corp’s high-priority SLA-breached requests', 'List urgent Acme tickets with SLA breaches'. This JQL filters Acme org requests with High/Critical priority where Time to resolution SLA is breached().","paraphrases":["Show Acme Corp’s high-priority SLA-breached requests","List urgent Acme tickets with SLA breaches"],"intents":["browse","organization","priority","sla"],"entities":"{\"organizations\":\"Acme Corp\",\"priority\":[\"High\",\"Critical\"],\"Time to resolution\":\"breached()\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::WL.1","fields":{"description":"Find tasks with significant time investment this week","why":"Time tracking and resource allocation analysis.","entities_flat":["timeSpent:> 5h","worklogDate:startOfWeek()"],"synonyms":["heavily worked tasks","time-intensive work"],"section":"M. Worklog and Time Tracking","jql_fields":["timeSpent","worklogDate"],"notes":"timeSpent field tracks total logged time","jql":"timeSpent > \"5h\" AND worklogDate >= startOfWeek()","id":"WL.1","nlq":"Tasks with more than 5 hours logged this week","query_summary":"Natural query: 'Tasks with more than 5 hours logged this week'. Finds tasks with significant time investment during current week.","paraphrases":["Show tasks with lots of time logged","Find work with heavy time investment"],"intents":["browse","worklog","time"],"entities":"{\"timeSpent\":\"> 5h\",\"worklogDate\":\"startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.21","fields":{"description":"Dev team hotlist.","why":"Highlights team-specific urgent bug triage.","entities_flat":["component:Backend","issuetype:Bug","assignee:devs group","updated:>= -3d"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["component","issuetype","assignee","updated"],"jql":"component = Backend AND issuetype = Bug AND assignee IN membersOf(\"devs\") AND updated >= -3d","id":"S.21","nlq":"Backend bugs assigned to devs group, updated in last 3d","query_summary":"Show Backend bugs assigned to devs group updated in last 3 days.","intents":["browse","component","issuetype","assignee","updated"],"entities":"{\"component\":\"Backend\",\"issuetype\":\"Bug\",\"assignee\":\"devs group\",\"updated\":\">= -3d\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::R.11","fields":{"description":"Logical composition of multiple conditions.","entities_flat":["clause1:{CLAUSE1}","clause2:{CLAUSE2}","logical:AND | OR"],"section":"R. Small Template Bank","jql_fields":["{FIELD1}","{FIELD2}"],"jql":"{CLAUSE1} {LOGICAL} {CLAUSE2}","id":"R.11","nlq":"Combine multiple clauses with AND/OR","query_summary":"Template for joining multiple JQL conditions with AND/OR.","intents":["browse","logical"],"entities":"{\"clause1\":\"{CLAUSE1}\",\"clause2\":\"{CLAUSE2}\",\"logical\":\"AND | OR\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::F.1","fields":{"description":"Sort by creation time.","why":"Useful for reviewing the most recently created issues first.","entities_flat":["created:DESC"],"synonyms":["latest issues first","newest on top"],"section":"F. Sorting & Ordering","jql_fields":["created"],"notes":"DESC means descending order, newest items appear first.","jql":"ORDER BY created DESC","id":"F.1","nlq":"Order by newest first","query_summary":"Natural query: 'Order by newest first'. Synonyms: latest issues first, newest on top. Paraphrases: 'Show issues ordered by newest first', 'Sort tickets by most recent'. This JQL sorts issues by created field in descending order. Field: created. Entity: DESC. Purpose: Useful for quickly reviewing new backlog entries.","paraphrases":["Show issues ordered by newest first","Sort tickets by most recent"],"intents":["sort","created"],"entities":"{\"created\":\"DESC\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::SLA_TIME.1","fields":{"description":"SLA breach detection with current week time filtering","why":"Essential for weekly SLA performance reporting","entities_flat":["sla_field:Time to resolution","sla_status:breached","timeframe:this week"],"synonyms":["breached resolution SLA this week","SLA failures this week"],"section":"SLA + Time Combinations","jql_fields":["Time to resolution","updated"],"notes":"Critical pattern combining SLA breach detection with weekly time boundaries","jql":"\"Time to resolution\" = breached() AND updated >= startOfWeek()","id":"SLA_TIME.1","nlq":"Customer requests that breached Time to resolution SLA this week","query_summary":"Natural query: 'Customer requests that breached Time to resolution SLA this week'. Combines SLA breach function with weekly time filtering. Purpose: Weekly SLA monitoring.","paraphrases":["Which requests breached resolution SLA this week","Show this week's SLA breaches"],"intents":["sla","breach","time","weekly"],"entities":"{\"sla_field\":\"Time to resolution\",\"sla_status\":\"breached\",\"timeframe\":\"this week\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::N.5","fields":{"description":"Triage candidates.","why":"Ensures issues are properly categorized before prioritization.","entities_flat":["component:EMPTY","labels:EMPTY"],"synonyms":["missing classification","untriaged issues"],"section":"N. Quality & Hygiene Queries","jql_fields":["component","labels"],"notes":"Combines two emptiness checks to highlight untriaged items.","jql":"component IS EMPTY AND labels IS EMPTY","id":"N.5","nlq":"No component and no labels","query_summary":"Natural query: 'No component and no labels'. Synonyms: missing classification, untriaged issues. Paraphrases: 'Show issues with no component and no labels', 'List unclassified tickets'. This JQL filters issues where both component and labels fields are empty. Fields: component, labels. Entities: EMPTY. Purpose: Useful for backlog triage.","paraphrases":["Show issues with no component and no labels","List unclassified tickets"],"intents":["browse","quality","triage"],"entities":"{\"component\":\"EMPTY\",\"labels\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::M.4","fields":{"description":"Portal request type (name varies).","why":"Helps filter requests by portal entry point, matching request types customers see.","entities_flat":["Customer Request Type:Get IT Help"],"synonyms":["portal IT help request","service desk IT help"],"section":"M. Jira Service Management (SLA & Portals)","jql_fields":["Customer Request Type"],"notes":"Customer Request Type names vary by portal configuration.","jql":"\"Customer Request Type\" = \"Get IT Help\"","id":"M.4","nlq":"Customer Request Type: Get IT Help","query_summary":"Natural query: 'Customer Request Type: Get IT Help'. Synonyms: portal IT help request, service desk IT help. Paraphrases: 'Show requests of type Get IT Help', 'List IT Help portal requests'. This JQL filters issues where Customer Request Type equals 'Get IT Help'. Field: Customer Request Type. Entity: Get IT Help. Purpose: Useful for service desk reporting.","paraphrases":["Show requests of type Get IT Help","List IT Help portal requests"],"intents":["browse","portal"],"entities":"{\"Customer Request Type\":\"Get IT Help\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::C.11","fields":{"description":"You cast a vote.","why":"Identify issues that the user has voted on for prioritization.","entities_flat":["voter:currentUser()"],"synonyms":["my votes","voted issues"],"section":"C. Logical Combinations & Set Ops","jql_fields":["voter"],"notes":"Voting must be enabled in the Jira instance.","jql":"voter = currentUser()","id":"C.11","nlq":"Issues I voted for","query_summary":"Natural query: 'Issues I voted for'. Synonyms: my votes, voted issues. Paraphrases: 'List issues I voted for', 'Tickets I have voted on'. This JQL filters issues where the voter equals the current user. Fields involved: voter. Entity value: currentUser(). Purpose: Useful for tracking issues you have expressed interest in.","paraphrases":["List issues I voted for","Tickets I have voted on"],"intents":["browse","voter"],"entities":"{\"voter\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::WV.2","fields":{"description":"Find feature requests with community support","why":"Feature prioritization and community feedback.","entities_flat":["issuetype:New Feature","votes:>= 5"],"synonyms":["popular features","voted feature requests"],"section":"I. Watchers and Voting Patterns","jql_fields":["issuetype","votes"],"notes":"votes field tracks community voting","jql":"issuetype = \"New Feature\" AND votes >= 5","id":"WV.2","nlq":"Features with at least 5 votes","query_summary":"Natural query: 'Features with at least 5 votes'. Shows feature requests with significant community voting support.","paraphrases":["Show features with votes","Find supported feature requests"],"intents":["browse","votes","features"],"entities":"{\"issuetype\":\"New Feature\",\"votes\":\">= 5\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.8","fields":{"description":"Use regex start anchor for starts-with matching","why":"Provides correct starts-with text matching syntax","entities_flat":["Draft","description"],"synonyms":["content","details"],"section":"AI. Accuracy Improvements - Text Matching","jql_fields":["description"],"notes":"Use ^ anchor for start-of-text matching in regex searches","jql":"description ~ \"^Draft\"","id":"AI.8","nlq":"Description starts with Draft","query_summary":"Natural query: 'Description starts with Draft'. Synonyms: content, details. This JQL uses regex for text matching. Fields: description. Entity: Draft.","paraphrases":["Issues starting with Draft","Draft descriptions"],"intents":["search","text"],"entities":"\"{\\\"text\\\": \\\"Draft\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.8","fields":{"description":"Search text inside a specific field or across all indexed text fields.","entities_flat":["field:{FIELD}","text:{TEXT}"],"section":"R. Small Template Bank","jql_fields":["{FIELD}","text"],"jql":"{FIELD} ~ {TEXT} OR text ~ {TEXT}","id":"R.8","nlq":"Text or field contains text","query_summary":"Template to search text in a field or across all indexed fields.","intents":["browse","textsearch"],"entities":"{\"field\":\"{FIELD}\",\"text\":\"{TEXT}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.13","fields":{"description":"Missing template marker.","why":"Identifies bugs missing reproducibility details.","entities_flat":["issuetype:Bug","description:!~ Steps to Reproduce"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","description"],"jql":"issuetype = Bug AND description !~ \"Steps to Reproduce\"","id":"S.13","nlq":"Bugs without repro steps","query_summary":"Find bugs where description does not mention 'Steps to Reproduce'.","intents":["browse","issuetype","description"],"entities":"{\"issuetype\":\"Bug\",\"description\":\"!~ Steps to Reproduce\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::I.3","fields":{"description":"If supported by your JQL dialect; otherwise use linkedIssues() with type.","why":"Used to detect all downstream issues currently blocked by other tasks.","entities_flat":["issueLinkType:is blocked by"],"synonyms":["blocked issues","dependent tasks"],"section":"I. Linking & Dependencies","jql_fields":["issueLink"],"notes":"Not all Jira instances support issueLinkType syntax; commonly replaced with linkedIssues() and explicit type.","jql":"issueLinkType = \"is blocked by\"","id":"I.3","nlq":"Issues blocked by anything","query_summary":"Natural query: 'Issues blocked by anything'. Synonyms: blocked issues, dependent tasks. Paraphrases: 'Show issues blocked by others', 'List tickets that are blocked'. This JQL retrieves issues where the link type is 'is blocked by'. Fields: issueLink. Entity: is blocked by. Purpose: Useful for identifying blocked work across the project.","paraphrases":["Show issues blocked by others","List tickets that are blocked"],"intents":["browse","linkedIssues","dependencies"],"entities":"{\"issueLinkType\":\"is blocked by\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.4","fields":{"description":"Direct attachment count syntax","why":"Provides correct attachment counting syntax","entities_flat":["3","attachments"],"synonyms":["files","uploads"],"section":"AI. Accuracy Improvements - Attachment Counting","jql_fields":["attachments"],"notes":"Use direct attachment field for counting","jql":"attachments > 3","id":"AI.4","nlq":"Issues with more than 3 attachments","query_summary":"Natural query: 'Issues with more than 3 attachments'. Synonyms: files, uploads. This JQL uses direct attachment counting. Fields: attachments. Entity: 3.","paraphrases":["Tickets with many files","Issues with multiple attachments"],"intents":["count","attachments"],"entities":"\"{\\\"count\\\": \\\"3\\\"}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.10","fields":{"description":"Doc workflow stages.","why":"Focuses on doc tasks pending review.","entities_flat":["issuetype:Documentation","status:Review","status:In Review"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","status"],"jql":"issuetype = Documentation AND status IN (Review, In Review)","id":"S.10","nlq":"Documentation tasks awaiting review","query_summary":"Show documentation tasks with status Review or In Review.","intents":["browse","issuetype","status"],"entities":"{\"issuetype\":\"Documentation\",\"status\":[\"Review\",\"In Review\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::P.7","fields":{"description":"Large in-flight work.","why":"Helps teams track large unresolved items in ongoing sprints.","entities_flat":["sprint:openSprints()","resolution:EMPTY","Story Points:>= 8"],"synonyms":["big stories in sprint","large unfinished items"],"section":"P. Examples Combining Many Concepts","jql_fields":["sprint","resolution","Story Points"],"notes":"Combines agile sprint scope with sizing and resolution status.","jql":"sprint IN openSprints() AND resolution IS EMPTY AND \"Story Points\" >= 8","id":"P.7","nlq":"In current sprint, unresolved, story points >= 8","query_summary":"Natural query: 'In current sprint, unresolved, story points >= 8'. Synonyms: big stories in sprint, large unfinished items. Paraphrases: 'Show unresolved large stories in current sprint', 'List big issues in sprint with 8+ story points'. This JQL filters issues in open sprints with resolution empty and story points >= 8. Fields: sprint, resolution, Story Points. Entities: openSprints(), EMPTY, >= 8. Purpose: Useful for sprint workload analysis.","paraphrases":["Show unresolved large stories in current sprint","List big issues in sprint with 8+ story points"],"intents":["browse","sprint","resolution","story points"],"entities":"{\"sprint\":\"openSprints()\",\"resolution\":\"EMPTY\",\"Story Points\":\">= 8\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::P.9","fields":{"description":"Replace \"\" with a filter or enumerate blockers; better: run dependency report.","why":"Helps individuals track their own blocked tasks for escalation or dependency resolution.","entities_flat":["assignee:currentUser()","issueLink:is blocked by"],"synonyms":["my blocked items","tasks waiting on dependencies"],"section":"P. Examples Combining Many Concepts","jql_fields":["assignee","issueLink"],"notes":"linkedIssues with 'is blocked by' can be combined with filter references for broader coverage.","jql":"assignee = currentUser() AND issue IN linkedIssues(\"\", \"is blocked by\")","id":"P.9","nlq":"Blocked items I own","query_summary":"Natural query: 'Blocked items I own'. Synonyms: my blocked items, tasks waiting on dependencies. Paraphrases: 'Show my items that are blocked', 'List tickets assigned to me that are blocked'. This JQL filters issues where assignee = currentUser() and issue is linked with 'is blocked by'. Fields: assignee, issueLink. Entities: currentUser(), is blocked by. Purpose: Useful for dependency tracking at individual level.","paraphrases":["Show my items that are blocked","List tickets assigned to me that are blocked"],"intents":["browse","assignee","linkedIssues","dependencies"],"entities":"{\"assignee\":\"currentUser()\",\"issueLink\":\"is blocked by\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::B.4","fields":{"description":"Previous calendar week.","why":"Finds issues that were touched in the last full week.","entities_flat":["updated:between startOfWeek(-1) and startOfWeek()"],"synonyms":["modified last week","changed last week"],"section":"B. Time & Date Filters","jql_fields":["updated"],"notes":"Uses relative startOfWeek(-1) to reference previous calendar week.","jql":"updated >= startOfWeek(-1) AND updated < startOfWeek()","id":"B.4","nlq":"Updated last week","query_summary":"Natural query: 'Updated last week'. Synonyms: modified last week, changed last week. Paraphrases: 'List issues updated during last week', 'Tickets modified in previous week', 'Items changed last calendar week'. This JQL filters issues where the updated field is between the start of last week and the start of this week. Fields involved: updated. Entity value: between startOfWeek(-1) and startOfWeek(). Purpose: Useful for retrospective reports.","paraphrases":["List issues updated during last week","Tickets modified in previous week","Items changed last calendar week"],"intents":["time","updated"],"entities":"{\"updated\":\"between startOfWeek(-1) and startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::G.5","fields":{"description":"Requires ScriptRunner. Detects scope change.","why":"Detects scope creep and late-added work in a sprint.","entities_flat":["sprint:42"],"synonyms":["scope change after sprint start","late-added issues"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint"],"notes":"Requires ScriptRunner add-on; addedAfterSprintStart() is not native JQL.","jql":"sprint = 42 AND issueFunction IN addedAfterSprintStart(42)","id":"G.5","nlq":"Moved into sprint 42 after it started","query_summary":"Natural query: 'Moved into sprint 42 after it started'. Synonyms: scope change after sprint start, late-added issues. Paraphrases: 'Show issues added to sprint 42 after it started', 'List scope creep items for sprint 42'. This JQL filters sprint 42 issues added after sprint start via ScriptRunner. Field: sprint. Entity: 42. Purpose: Useful for monitoring sprint scope changes.","paraphrases":["Show issues added to sprint 42 after it started","List scope creep items for sprint 42"],"intents":["browse","sprint","advanced"],"entities":"{\"sprint\":\"42\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::G.3","fields":{"description":"Closed iterations for a project.","why":"Used for retrospectives and post-sprint analysis in a given project.","entities_flat":["project:ALPHA","sprint:closedSprints()"],"synonyms":["past sprints of ALPHA","finished sprints in ALPHA"],"section":"G. Agile: Sprints & Boards","jql_fields":["project","sprint"],"notes":"closedSprints() returns sprints that have been completed or closed.","jql":"project = ALPHA AND sprint IN closedSprints()","id":"G.3","nlq":"Issues in closed sprints of ALPHA","query_summary":"Natural query: 'Issues in closed sprints of ALPHA'. Synonyms: past sprints of ALPHA, finished sprints in ALPHA. Paraphrases: 'Show issues from closed sprints of ALPHA', 'List tickets in ALPHA’s past sprints'. This JQL filters issues in project ALPHA with sprint in closedSprints(). Fields: project, sprint. Entities: ALPHA, closedSprints(). Purpose: Useful for retrospective reporting.","paraphrases":["Show issues from closed sprints of ALPHA","List tickets in ALPHA’s past sprints"],"intents":["browse","sprint","project"],"entities":"{\"project\":\"ALPHA\",\"sprint\":\"closedSprints()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::S.1","fields":{"description":"Replace with your bot accounts.","why":"Useful to filter out noise from automated systems.","entities_flat":["reporter:automation","reporter:buildbot"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["reporter"],"jql":"reporter IN (automation, buildbot)","id":"S.1","nlq":"Issues created by bots","query_summary":"Find issues where reporter is automation or buildbot. Useful for separating bot-created items.","intents":["browse","reporter"],"entities":"{\"reporter\":[\"automation\",\"buildbot\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TRANS.4","fields":{"description":"Stories with excessive reassignments indicating planning issues","why":"Highlights planning issues and resource allocation problems","entities_flat":["issuetype:Story","sprint:current","change_count:3"],"synonyms":["unstable assignments","excessive handoffs","assignment churn"],"section":"Status Transitions","jql_fields":["issuetype","sprint","assignee"],"notes":"Identifies stories with assignment instability in current sprint","jql":"issuetype = Story AND sprint IN openSprints() AND assignee CHANGED BY MORE THAN 3","id":"TRANS.4","nlq":"Stories reassigned more than 3 times in current sprint","query_summary":"Natural query: 'Stories reassigned more than 3 times in current sprint'. Assignment stability tracking. Purpose: Sprint planning quality monitoring.","paraphrases":["Show stories with too many reassignments","List unstable story assignments"],"intents":["reassignment","sprint","stability"],"entities":"{\"issuetype\":\"Story\",\"sprint\":\"current\",\"change_count\":\"3\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::O.3","fields":{"description":"Intersection of unreleased work and upcoming sprint planning.","why":"Helps align release pipeline with sprint planning.","entities_flat":["fixVersion:unreleasedVersions()","sprint:futureSprints()"],"synonyms":["planned for next sprint","upcoming sprint unreleased work"],"section":"O. Release & Deployment Views","jql_fields":["fixVersion","sprint"],"notes":"Requires both fixVersion release tagging and sprint assignment.","jql":"fixVersion IN unreleasedVersions() AND sprint IN futureSprints()","id":"O.3","nlq":"Unreleased issues targeted for next sprint","query_summary":"Natural query: 'Unreleased issues targeted for next sprint'. Synonyms: planned for next sprint, upcoming sprint unreleased work. Paraphrases: 'Show unreleased issues in upcoming sprint', 'List issues in future sprints that are not released'. This JQL filters issues with unreleased fixVersions and assigned to futureSprints(). Fields: fixVersion, sprint. Entities: unreleasedVersions(), futureSprints(). Purpose: Useful for aligning agile sprint scope with upcoming release plans.","paraphrases":["Show unreleased issues in upcoming sprint","List issues in future sprints that are not released"],"intents":["browse","fixVersion","sprint"],"entities":"{\"fixVersion\":\"unreleasedVersions()\",\"sprint\":\"futureSprints()\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::TIME.1","fields":{"description":"Activity tracking during business hours for previous week","why":"Analyzes work patterns and team productivity timing","entities_flat":["timeframe:last week","time_range:business hours"],"synonyms":["business hour activity","work time updates"],"section":"Advanced Time Tracking","jql_fields":["updated"],"notes":"Combines date range with time-of-day filtering for work pattern analysis","jql":"updated >= startOfWeek(-1) AND updated < startOfWeek() AND updated.time >= \"09:00\" AND updated.time <= \"17:00\"","id":"TIME.1","nlq":"Issues updated during business hours last week","query_summary":"Natural query: 'Issues updated during business hours last week'. Business hour activity tracking. Purpose: Work pattern analysis.","paraphrases":["Show activity during work hours last week","List business hour updates"],"intents":["time","business_hours","activity"],"entities":"{\"timeframe\":\"last week\",\"time_range\":\"business hours\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::J.1","fields":{"description":"Group membership.","why":"Helps find issues owned by all users in a specific team or group.","entities_flat":["assignee:membersOf(devs)"],"synonyms":["assigned to devs group","tickets owned by devs team"],"section":"J. Users, Groups, Teams","jql_fields":["assignee","group"],"notes":"membersOf() checks group membership; group must exist in Jira’s user directory.","jql":"assignee IN membersOf(\"devs\")","id":"J.1","nlq":"Assigned to any member of team devs","query_summary":"Natural query: 'Assigned to any member of team devs'. Synonyms: assigned to devs group, tickets owned by devs team. Paraphrases: 'Show issues assigned to team devs', 'List tickets owned by devs group members'. This JQL filters issues where assignee belongs to group devs using membersOf(). Fields: assignee, group. Entity: membersOf(devs). Purpose: Useful for team workload monitoring.","paraphrases":["Show issues assigned to team devs","List tickets owned by devs group members"],"intents":["browse","assignee","group"],"entities":"{\"assignee\":\"membersOf(devs)\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::C.16","fields":{"description":"Combines linked issues with resolution filter.","why":"Shows logical combination of dependency (linkedIssues) with resolution.","entities_flat":["issuetype:Task","linkedIssue:ALPHA-100","resolution:EMPTY"],"synonyms":["dependent tasks on ALPHA-100"],"section":"C. Logical Combinations & Set Ops","jql_fields":["issuetype","issueLink","resolution"],"jql":"issuetype = Task AND issue IN linkedIssues(ALPHA-100) AND resolution IS EMPTY","id":"C.16","nlq":"Tasks linked to ALPHA-100 but not yet resolved","query_summary":"Natural query: 'Tasks linked to ALPHA-100 but not yet resolved'. Synonyms: dependent tasks on ALPHA-100. Paraphrases: 'List tasks linked to ALPHA-100 that are unresolved', 'Show open tasks blocking ALPHA-100'. This JQL filters tasks linked to ALPHA-100 while ensuring resolution IS EMPTY. Fields: issuetype, linkedIssue, resolution. Purpose: Useful for dependency tracking and blockers.","paraphrases":["List tasks linked to ALPHA-100 that are unresolved","Show open tasks blocking ALPHA-100"],"intents":["browse","issuetype","linked","resolution"],"entities":"{\"issuetype\":\"Task\",\"linkedIssue\":\"ALPHA-100\",\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::TEXT.3","fields":{"description":"Bugs with technical errors but incomplete reproduction information","why":"Improves bug report quality by identifying missing information","entities_flat":["issuetype:Bug","has_content:stack trace","missing_content:reproduction steps"],"synonyms":["incomplete bug reports","technical errors missing repro"],"section":"Advanced Text Search","jql_fields":["issuetype","description"],"notes":"Combines positive and negative text matching for quality assessment","jql":"issuetype = Bug AND description ~ \"stack trace|exception|error at\" AND description !~ \"steps to reproduce|repro|reproduce\"","id":"TEXT.3","nlq":"Bugs with stack traces in description but missing steps to reproduce","query_summary":"Natural query: 'Bugs with stack traces in description but missing steps to reproduce'. Bug report quality. Purpose: Debugging information completeness.","paraphrases":["Show bugs with errors but no reproduction steps","List technical bugs needing repro info"],"intents":["text","debugging","completeness"],"entities":"{\"issuetype\":\"Bug\",\"has_content\":\"stack trace\",\"missing_content\":\"reproduction steps\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::AI.12","fields":{"description":"Find orphaned subtasks using correct subtask function","why":"Correct syntax for finding orphaned subtasks","entities_flat":["subtasks","orphaned"],"synonyms":["orphaned","unlinked"],"section":"AI. Accuracy Improvements - Subtask Validation","jql_fields":["issuetype","parent"],"notes":"Use subtaskIssueTypes() function and parent field for subtask validation","jql":"issuetype in subtaskIssueTypes() AND parent IS EMPTY","id":"AI.12","nlq":"Subtasks without parent","query_summary":"Natural query: 'Subtasks without parent'. Synonyms: orphaned, unlinked. This JQL finds orphaned subtasks correctly. Fields: issuetype, parent.","paraphrases":["Orphaned subtasks","Subtasks without parents"],"intents":["validation","subtasks"],"entities":"\"{}\"","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.2","fields":{"description":"Anything not yet resolved (regardless of status label).","why":"Captures all issues that are still unresolved regardless of their workflow status label.","entities_flat":["resolution:EMPTY"],"synonyms":["tickets","items","bugs"],"section":"A. Basic Filters","jql_fields":["resolution"],"notes":"Resolution empty is the canonical way to test unresolved state, not status name.","jql":"resolution IS EMPTY","id":"A.2","nlq":"Show unresolved issues","query_summary":"Natural query: 'Show unresolved issues'. Synonyms: tickets, items, bugs. Paraphrases: 'List unresolved tickets', 'Issues without resolution', 'Show all pending issues'. This JQL filters issues where the resolution field is empty, meaning the issue is not resolved. Fields involved: resolution. Entity value: EMPTY. Purpose: Used for identifying tickets that are still open and require action.","paraphrases":["List unresolved tickets","Issues without resolution","Show all pending issues"],"intents":["browse","status"],"entities":"{\"resolution\":\"EMPTY\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.17","fields":{"description":"CI instability.","why":"Detects flaky test or bug issues.","entities_flat":["issuetype:Bug","issuetype:Test","text:~ flaky"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","text"],"jql":"issuetype IN (Bug, Test) AND text ~ \"flaky\"","id":"S.17","nlq":"Test failures mentioning flaky","query_summary":"Show Bugs or Tests containing 'flaky' keyword in text.","intents":["browse","issuetype","textsearch"],"entities":"{\"issuetype\":[\"Bug\",\"Test\"],\"text\":\"~ flaky\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::D.8","fields":{"description":"Combines text search with structured field filter.","why":"Mixes free-text and field-based filtering for targeted searches.","entities_flat":["summary:~ error","component:Backend"],"synonyms":["title has error in backend"],"section":"D. Text & Content Search","jql_fields":["summary","component"],"jql":"summary ~ \"error\" AND component = Backend","id":"D.8","nlq":"Summary contains error and component is Backend","query_summary":"Natural query: 'Summary contains error and component is Backend'. Synonyms: title has error in backend. Paraphrases: 'Find backend issues with error in summary', 'List tickets in Backend component containing error'. This JQL filters issues where the summary includes 'error' AND the component is Backend. Fields: summary, component. Purpose: Demonstrates combining text search with structured fields.","paraphrases":["Find backend issues with error in summary","List tickets in Backend component containing error"],"intents":["search","summary","component"],"entities":"{\"summary\":\"~ error\",\"component\":\"Backend\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.30","fields":{"description":"Multi-clause advanced filter.","why":"Surfaces critical unresolved bugs recently touched but not owned by QA team.","entities_flat":["issuetype:Bug","priority:Critical","updated:>= -7d","assignee:NOT qa group","resolution:EMPTY"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["issuetype","priority","updated","assignee","resolution"],"jql":"issuetype = Bug AND priority = Critical AND updated >= -7d AND assignee NOT IN membersOf(\"qa\") AND resolution IS EMPTY","id":"S.30","nlq":"Open critical bugs updated in last 7 days not assigned to QA","query_summary":"Show open critical bugs updated in the past week that are not assigned to QA.","intents":["browse","issuetype","priority","updated","assignee","resolution"],"entities":"{\"issuetype\":\"Bug\",\"priority\":\"Critical\",\"updated\":\">= -7d\",\"assignee\":\"NOT qa group\",\"resolution\":\"EMPTY\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::H.1","fields":{"description":"Classic epic-child relation (company-managed projects).","why":"Quickly shows all stories/tasks that belong to a given epic.","entities_flat":["Epic Link:ALPHA-123"],"synonyms":["stories in epic ALPHA-123","issues linked to epic ALPHA-123"],"section":"H. Epics, Parents & Subtasks","jql_fields":["Epic Link"],"notes":"Works in company-managed projects; for team-managed, epic link is represented differently.","jql":"\"Epic Link\" = ALPHA-123","id":"H.1","nlq":"Children of epic ALPHA-123","query_summary":"Natural query: 'Children of epic ALPHA-123'. Synonyms: stories in epic ALPHA-123, issues linked to epic ALPHA-123. Paraphrases: 'Show all children of epic ALPHA-123', 'List stories under epic ALPHA-123'. This JQL filters issues where the Epic Link equals ALPHA-123. Field: Epic Link. Entity: ALPHA-123. Purpose: Useful for epic-level tracking.","paraphrases":["Show all children of epic ALPHA-123","List stories under epic ALPHA-123"],"intents":["browse","epic","parent-child"],"entities":"{\"Epic Link\":\"ALPHA-123\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::SLA.6","fields":{"description":"SLA pause duration monitoring for incidents","why":"Prevents indefinite SLA pauses and ensures process flow","entities_flat":["issuetype:Incident","sla_status:Paused","duration:3 days"],"synonyms":["long-paused SLA items","extended SLA holds"],"section":"SLA Management","jql_fields":["issuetype","SLA Status","SLA Pause Duration"],"notes":"Tracks SLA pause duration to identify stalled processes","jql":"issuetype = Incident AND \"SLA Status\" = Paused AND \"SLA Pause Duration\" > \"3d\"","id":"SLA.6","nlq":"Incidents with SLA paused for more than 3 days","query_summary":"Natural query: 'Incidents with SLA paused for more than 3 days'. Monitors SLA pause duration. Purpose: SLA pause accountability and process flow.","paraphrases":["Show incidents with SLA on hold over 3 days","List long-paused SLA incidents"],"intents":["sla","paused","duration"],"entities":"{\"issuetype\":\"Incident\",\"sla_status\":\"Paused\",\"duration\":\"3 days\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::K.1","fields":{"description":"Large tasks.","why":"Helps identify large or potentially risky tasks based on original time estimate.","entities_flat":["originalEstimate:> 8h"],"synonyms":["big tasks","long estimates"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["originalEstimate"],"notes":"Time units like h (hours), d (days), w (weeks) can be used in JQL estimates.","jql":"originalEstimate > 8h","id":"K.1","nlq":"Original estimate > 8h","query_summary":"Natural query: 'Original estimate > 8h'. Synonyms: big tasks, long estimates. Paraphrases: 'Show tasks estimated more than 8 hours', 'List issues with large original estimates'. This JQL filters issues where the originalEstimate field is greater than 8 hours. Field: originalEstimate. Entity: > 8h. Purpose: Useful for planning and breaking down oversized tasks.","paraphrases":["Show tasks estimated more than 8 hours","List issues with large original estimates"],"intents":["browse","estimate"],"entities":"{\"originalEstimate\":\"> 8h\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::RT.1","fields":{"description":"Find issues approaching completion","why":"Sprint planning and completion tracking.","entities_flat":["remainingEstimate:< 2h"],"synonyms":["almost finished work","nearly complete tasks"],"section":"N. Remaining Time and SLA Advanced","jql_fields":["remainingEstimate"],"notes":"remainingEstimate tracks estimated time left","jql":"remainingEstimate < \"2h\"","id":"RT.1","nlq":"Issues with less than 2 hours remaining time","query_summary":"Natural query: 'Issues with less than 2 hours remaining time'. Shows work that should complete soon.","paraphrases":["Show work almost done","Find nearly finished issues"],"intents":["browse","time","remaining"],"entities":"{\"remainingEstimate\":\"< 2h\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::E.5","fields":{"description":"Wildcard label search.","why":"Groups issues by label prefixes (e.g., customer-A, customer-B).","entities_flat":["labels:customer-*"],"synonyms":["customer labels","customer prefixed tags"],"section":"E. Versions, Components, Labels","jql_fields":["labels"],"notes":"Use wildcard * to match label prefixes.","jql":"labels ~ \"customer-*\"","id":"E.5","nlq":"Label contains \"customer-\" prefix","query_summary":"Natural query: 'Label contains customer- prefix'. Synonyms: customer labels, customer prefixed tags. Paraphrases: 'Find issues with customer-* labels', 'Show tickets tagged with customer prefix'. This JQL filters issues where labels match customer-* prefix. Fields: labels. Entity: customer-*. Purpose: Useful for organizing customer-specific tickets.","paraphrases":["Find issues with customer-* labels","Show tickets tagged with customer prefix"],"intents":["browse","labels"],"entities":"{\"labels\":\"customer-*\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::R.13","fields":{"description":"Slot for instance-specific custom fields.","entities_flat":["customfield:{CUSTOMFIELD}","operator:{OP}","value:{VALUE}"],"section":"R. Small Template Bank","jql_fields":["{CUSTOMFIELD}"],"jql":"\"{CUSTOMFIELD}\" {OP} {VALUE}","id":"R.13","nlq":"Filter by custom field value","query_summary":"Template for custom fields with names or IDs, using operators and values.","intents":["browse","customfield"],"entities":"{\"customfield\":\"{CUSTOMFIELD}\",\"operator\":\"{OP}\",\"value\":\"{VALUE}\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::ATT.5","fields":{"description":"High-priority security incidents without supporting evidence files","why":"Ensures security incidents have proper evidence documentation","entities_flat":["issuetype:Security Incident","attachment_status:missing","priority:high"],"synonyms":["security issues without evidence","incidents missing files"],"section":"Attachments","jql_fields":["issuetype","attachments","priority"],"notes":"Identifies critical security issues lacking supporting documentation","jql":"issuetype = \"Security Incident\" AND attachments IS EMPTY AND priority IN (High, Critical)","id":"ATT.5","nlq":"Security incidents missing evidence attachments","query_summary":"Natural query: 'Security incidents missing evidence attachments'. Identifies missing critical documentation. Purpose: Security process compliance.","paraphrases":["Show security incidents without attachments","List evidence-missing security issues"],"intents":["attachment","security","missing"],"entities":"{\"issuetype\":\"Security Incident\",\"attachment_status\":\"missing\",\"priority\":\"high\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::L.1","fields":{"description":"Numeric custom field.","why":"Helps identify large or complex stories in backlog grooming.","entities_flat":["Story Points:>= 8"],"synonyms":["large story points","big estimation"],"section":"L. Custom Fields","jql_fields":["Story Points"],"notes":"Story Points is a common Agile field but may differ by project template.","jql":"\"Story Points\" >= 8","id":"L.1","nlq":"Story Points >= 8","query_summary":"Natural query: 'Story Points >= 8'. Synonyms: large story points, big estimation. Paraphrases: 'Show issues with story points 8 or more', 'List tickets estimated at least 8 points'. This JQL filters issues where Story Points is greater than or equal to 8. Field: Story Points. Entity: >= 8. Purpose: Useful for spotting oversized stories during grooming.","paraphrases":["Show issues with story points 8 or more","List tickets estimated at least 8 points"],"intents":["browse","customfield","numeric"],"entities":"{\"Story Points\":\">= 8\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::G.4","fields":{"description":"Unsprinted items.","why":"Helps identify backlog items not yet scheduled into a sprint.","entities_flat":["sprint:EMPTY"],"synonyms":["unsprinted items","backlog items"],"section":"G. Agile: Sprints & Boards","jql_fields":["sprint"],"notes":"sprint IS EMPTY finds issues that are not part of any sprint.","jql":"sprint IS EMPTY","id":"G.4","nlq":"Not in any sprint (backlog)","query_summary":"Natural query: 'Not in any sprint (backlog)'. Synonyms: unsprinted items, backlog items. Paraphrases: 'Show issues not in any sprint', 'List backlog tickets'. This JQL filters issues where sprint field is empty. Field: sprint. Entity: EMPTY. Purpose: Useful for backlog grooming.","paraphrases":["Show issues not in any sprint","List backlog tickets"],"intents":["browse","sprint"],"entities":"{\"sprint\":\"EMPTY\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::B.9","fields":{"description":"Quarterly reporting filter using resolved date.","why":"Enables quarterly reporting for project progress.","entities_flat":["issuetype:Task","resolved_range:2024-04-01","resolved_range:2024-06-30"],"synonyms":["tasks finished in Q2 2024","quarterly task completions"],"section":"B. Time & Date Filters","jql_fields":["issuetype","resolved"],"jql":"issuetype = Task AND resolved >= \"2024-04-01\" AND resolved <= \"2024-06-30\"","id":"B.9","nlq":"Tasks resolved in Q2 2024","query_summary":"Natural query: 'Tasks resolved in Q2 2024'. Synonyms: tasks finished in Q2 2024, quarterly task completions. Paraphrases: 'Show tasks resolved Apr–Jun 2024', 'List tasks closed in Q2 2024'. This JQL filters issues where issuetype = Task and resolved date falls between April 1 and June 30, 2024. Purpose: useful for quarterly project reporting.","paraphrases":["Show tasks resolved Apr–Jun 2024","List tasks closed in Q2 2024"],"intents":["time","resolved"],"entities":"{\"issuetype\":\"Task\",\"resolved_range\":[\"2024-04-01\",\"2024-06-30\"]}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::S.5","fields":{"description":"Epic focus with severity.","why":"Focuses on higher-severity items within a given epic.","entities_flat":["Epic Link:ALPHA-500","priority:NOT IN (Low)"],"section":"S. Additional Ready-to-Use Entries","jql_fields":["Epic Link","priority"],"jql":"\"Epic Link\" = ALPHA-500 AND priority NOT IN (Low)","id":"S.5","nlq":"In Epic ALPHA-500 and priority not Low","query_summary":"Show issues under epic ALPHA-500 where priority is not Low.","intents":["browse","epic","priority"],"entities":"{\"Epic Link\":\"ALPHA-500\",\"priority\":\"NOT IN (Low)\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::TEXT.2","fields":{"description":"Stories lacking proper acceptance criteria documentation","why":"Ensures story quality and requirement completeness","entities_flat":["issuetype:Story","missing_content:acceptance criteria"],"synonyms":["incomplete stories","missing requirements","undocumented criteria"],"section":"Advanced Text Search","jql_fields":["issuetype","description"],"notes":"Uses negative text matching to find missing requirement patterns","jql":"issuetype = Story AND description !~ \"acceptance criteria|AC:|given when then\"","id":"TEXT.2","nlq":"Stories missing acceptance criteria in description","query_summary":"Natural query: 'Stories missing acceptance criteria in description'. Requirement completeness. Purpose: Story quality assurance.","paraphrases":["Show stories without acceptance criteria","List incomplete story documentation"],"intents":["text","requirements","quality"],"entities":"{\"issuetype\":\"Story\",\"missing_content\":\"acceptance criteria\"}","product":["Jira Software"]}},
{"id":"id:my_content:jql_query::K.5","fields":{"description":"Your recent logs.","why":"Helps users review their own logged work in the current week.","entities_flat":["worklogAuthor:currentUser()","worklogDate:>= startOfWeek()"],"synonyms":["my work this week","time logged by me"],"section":"K. Estimates, Time Tracking & Worklogs","jql_fields":["worklogAuthor","worklogDate"],"notes":"Combines worklogAuthor and worklogDate to filter personal contributions.","jql":"worklogAuthor = currentUser() AND worklogDate >= startOfWeek()","id":"K.5","nlq":"I logged work this week","query_summary":"Natural query: 'I logged work this week'. Synonyms: my work this week, time logged by me. Paraphrases: 'Show issues I logged work on this week', 'List tickets with my logs in current week'. This JQL filters issues where worklogAuthor is the current user and worklogDate is greater than or equal to the start of the week. Fields: worklogAuthor, worklogDate. Entities: currentUser(), >= startOfWeek(). Purpose: Useful for personal timesheet review.","paraphrases":["Show issues I logged work on this week","List tickets with my logs in current week"],"intents":["browse","worklog","user"],"entities":"{\"worklogAuthor\":\"currentUser()\",\"worklogDate\":\">= startOfWeek()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::A.11","fields":{"description":"Issues owned by the current user.","why":"Quickly find issues currently assigned to the logged-in user.","entities_flat":["assignee:currentUser()"],"synonyms":["my tickets","my tasks","self-assigned issues"],"section":"A. Basic Filters","jql_fields":["assignee"],"notes":"Uses currentUser() function to dynamically resolve to logged-in user.","jql":"assignee = currentUser()","id":"A.11","nlq":"Assigned to me","query_summary":"Natural query: 'Assigned to me'. Synonyms: my tickets, my tasks, self-assigned issues. Paraphrases: 'Show issues assigned to me', 'List my open items', 'Tickets I am responsible for'. This JQL filters issues where the assignee equals the logged-in user using currentUser(). Fields involved: assignee. Entity value: currentUser(). Purpose: Commonly used by individuals to view their personal workload.","paraphrases":["Show issues assigned to me","List my open items","Tickets I am responsible for"],"intents":["browse","assignee"],"entities":"{\"assignee\":\"currentUser()\"}","product":["Jira Core"]}},
{"id":"id:my_content:jql_query::CUSTOMER_SLA.1","fields":{"description":"High-value customer SLA breach tracking for active requests","why":"Premium customer relationship management via SLA monitoring","entities_flat":["customer_tier:Platinum","status:active","sla_status:breached"],"synonyms":["premium customer SLA failures","VIP customer breaches"],"section":"Customer + SLA Combinations","jql_fields":["Customer Tier","resolution","Time to resolution"],"notes":"Critical for managing high-value customer SLA performance","jql":"\"Customer Tier\" = Platinum AND resolution IS EMPTY AND \"Time to resolution\" = breached()","id":"CUSTOMER_SLA.1","nlq":"Platinum tier customers with active requests breaching SLA","query_summary":"Natural query: 'Platinum tier customers with active requests breaching SLA'. Premium customer SLA monitoring. Purpose: High-value customer SLA management.","paraphrases":["Show Platinum customers with SLA breaches","List premium tier SLA failures"],"intents":["customer","tier","sla","breach"],"entities":"{\"customer_tier\":\"Platinum\",\"status\":\"active\",\"sla_status\":\"breached\"}","product":["Jira Service Management"]}},
{"id":"id:my_content:jql_query::L.9","fields":{"description":"Detects missing values in a multi-select custom field.","why":"Helps identify tickets lacking customer segment classification.","entities_flat":["Customer Segment:EMPTY"],"synonyms":["segment missing","undefined customer segment"],"section":"L. Custom Fields","jql_fields":["Customer Segment"],"notes":"IS EMPTY works across multi-value fields as well as single-value.","jql":"\"Customer Segment\" IS EMPTY","id":"L.9","nlq":"Customer Segment not set","query_summary":"Natural query: 'Customer Segment not set'. Synonyms: segment missing, undefined customer segment. Paraphrases: 'Show issues where customer segment is not set', 'List tickets without customer segment'. This JQL filters issues where Customer Segment custom field is empty. Field: Customer Segment. Entity: EMPTY. Purpose: Useful for data hygiene and mandatory field enforcement.","paraphrases":["Show issues where customer segment is not set","List tickets without customer segment"],"intents":["browse","customfield","emptiness"],"entities":"{\"Customer Segment\":\"EMPTY\"}","product":["Jira Core"]}},
{}
]
