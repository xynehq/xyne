// Auto-generated by ts script on 2025-06-20T10:03:23.270Z
// Based on responses from github_mcp Connector
// Total tools processed: 51, Successfully typed: 20
// IMPORTANT: Review generated types, especially for 'any' or 'Record<string, any>'.
// Consider using a robust JSON-to-TypeScript library for better accuracy.
export interface SearchRepositoriesPayload {
  total_count: number
  incomplete_results: boolean
  items: SearchRepositoriesPayloadItemsItem[]
}

export interface SearchRepositoriesPayloadItemsItem {
  id: number
  node_id: string
  owner: SearchRepositoriesPayloadItemsItemOwnerChild
  name: string
  full_name: string
  description: string
  homepage: string
  default_branch: string
  created_at: string
  pushed_at: string
  updated_at: string
  html_url: string
  clone_url: string
  git_url: string
  ssh_url: string
  svn_url: string
  language: string
  fork: boolean
  forks_count: number
  open_issues_count: number
  open_issues: number
  stargazers_count: number
  watchers_count: number
  watchers: number
  size: number
  permissions: SearchRepositoriesPayloadItemsItemPermissionsChild
  allow_forking: boolean
  web_commit_signoff_required: boolean
  archived: boolean
  disabled: boolean
  license: SearchRepositoriesPayloadItemsItemLicenseChild
  private: boolean
  has_issues: boolean
  has_wiki: boolean
  has_pages: boolean
  has_projects: boolean
  has_downloads: boolean
  has_discussions: boolean
  is_template: boolean
  url: string
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  downloads_url: string
  events_url: string
  forks_url: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  notifications_url: string
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  trees_url: string
  teams_url: string
  visibility: string
}

export interface SearchRepositoriesPayloadItemsItemOwnerChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface SearchRepositoriesPayloadItemsItemPermissionsChild {
  admin: boolean
  maintain: boolean
  pull: boolean
  push: boolean
  triage: boolean
}

export interface SearchRepositoriesPayloadItemsItemLicenseChild {
  key: string
  name: string
  url: string
  spdx_id: string
}

export interface SearchRepositoriesResponse {
  content: SearchRepositoriesPayload[]
}

export interface GetMePayload {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  name: string
  company: string
  blog: string
  location: string
  bio: string
  public_repos: number
  public_gists: number
  followers: number
  following: number
  created_at: string
  updated_at: string
  type: string
  site_admin: boolean
  total_private_repos: number
  owned_private_repos: number
  private_gists: number
  disk_usage: number
  collaborators: number
  two_factor_authentication: boolean
  plan: GetMePayloadPlanChild
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetMePayloadPlanChild {
  name: string
  space: number
  collaborators: number
  private_repos: number
}

export interface GetMeResponse {
  content: GetMePayload[]
}

export interface GetPullRequestStatusPayload {
  state: string
  sha: string
  total_count: number
  commit_url: string
}

export interface GetPullRequestStatusResponse {
  content: GetPullRequestStatusPayload[]
}

export interface GetIssuePayload {
  id: number
  number: number
  state: string
  locked: boolean
  title: string
  body: string
  author_association: string
  user: GetIssuePayloadUserChild
  assignee: GetIssuePayloadAssigneeChild
  comments: number
  created_at: string
  updated_at: string
  url: string
  html_url: string
  comments_url: string
  events_url: string
  labels_url: string
  repository_url: string
  milestone: GetIssuePayloadMilestoneChild
  reactions: GetIssuePayloadReactionsChild
  assignees: GetIssuePayloadAssigneesItem[]
  node_id: string
}

export interface GetIssuePayloadUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetIssuePayloadAssigneeChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetIssuePayloadMilestoneChild {
  url: string
  html_url: string
  labels_url: string
  id: number
  number: number
  state: string
  title: string
  creator: GetIssuePayloadMilestoneChildCreatorChild
  open_issues: number
  closed_issues: number
  created_at: string
  updated_at: string
  node_id: string
}

export interface GetIssuePayloadMilestoneChildCreatorChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetIssuePayloadReactionsChild {
  total_count: number
  "+1": number
  "-1": number
  laugh: number
  confused: number
  heart: number
  hooray: number
  rocket: number
  eyes: number
  url: string
}

export interface GetIssuePayloadAssigneesItem {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetIssueResponse {
  content: GetIssuePayload[]
}

export interface ListIssuesPayload {
  type: string
  text: string
}

export interface ListIssuesResponse {
  content: ListIssuesPayload[]
  isError: boolean
}

export interface SearchIssuesPayload {
  total_count: number
  incomplete_results: boolean
  items: SearchIssuesPayloadItemsItem[]
}

export interface SearchIssuesPayloadItemsItem {
  id: number
  number: number
  state: string
  state_reason: string
  locked: boolean
  title: string
  body: string
  author_association: string
  user: SearchIssuesPayloadItemsItemUserChild
  comments: number
  closed_at: string
  created_at: string
  updated_at: string
  url: string
  html_url: string
  comments_url: string
  events_url: string
  labels_url: string
  repository_url: string
  reactions: SearchIssuesPayloadItemsItemReactionsChild
  node_id: string
}

export interface SearchIssuesPayloadItemsItemUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface SearchIssuesPayloadItemsItemReactionsChild {
  total_count: number
  "+1": number
  "-1": number
  laugh: number
  confused: number
  heart: number
  hooray: number
  rocket: number
  eyes: number
  url: string
}

export interface SearchIssuesResponse {
  content: SearchIssuesPayload[]
}

export type GetPullRequestFilesPayload = GetPullRequestFilesPayloadItem[]

export interface GetPullRequestFilesPayloadItem {
  sha: string
  filename: string
  additions: number
  deletions: number
  changes: number
  status: string
  patch: string
  blob_url: string
  raw_url: string
  contents_url: string
}

export interface GetPullRequestFilesResponse {
  content: GetPullRequestFilesPayload[]
}

export interface GetPullRequestPayload {
  id: number
  number: number
  state: string
  locked: boolean
  title: string
  body: string
  created_at: string
  updated_at: string
  closed_at: string
  merged_at: string
  user: GetPullRequestPayloadUserChild
  draft: boolean
  url: string
  html_url: string
  issue_url: string
  statuses_url: string
  diff_url: string
  patch_url: string
  commits_url: string
  comments_url: string
  review_comments_url: string
  review_comment_url: string
  author_association: string
  node_id: string
  merged: boolean
  mergeable_state: string
  merged_by: GetPullRequestPayloadMergedByChild
  merge_commit_sha: string
  comments: number
  commits: number
  additions: number
  deletions: number
  changed_files: number
  maintainer_can_modify: boolean
  review_comments: number
  _links: GetPullRequestPayloadLinksChild
  head: GetPullRequestPayloadHeadChild
  base: GetPullRequestPayloadBaseChild
}

export interface GetPullRequestPayloadUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestPayloadMergedByChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestPayloadLinksChild {
  self: GetPullRequestPayloadLinksChildSelfChild
  html: GetPullRequestPayloadLinksChildHtmlChild
  issue: GetPullRequestPayloadLinksChildIssueChild
  comments: GetPullRequestPayloadLinksChildCommentsChild
  review_comments: GetPullRequestPayloadLinksChildReviewCommentsChild
  review_comment: GetPullRequestPayloadLinksChildReviewCommentChild
  commits: GetPullRequestPayloadLinksChildCommitsChild
  statuses: GetPullRequestPayloadLinksChildStatusesChild
}

export interface GetPullRequestPayloadLinksChildSelfChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildHtmlChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildIssueChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildCommentsChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildReviewCommentsChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildReviewCommentChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildCommitsChild {
  href: string
}

export interface GetPullRequestPayloadLinksChildStatusesChild {
  href: string
}

export interface GetPullRequestPayloadHeadChild {
  label: string
  ref: string
  sha: string
  repo: GetPullRequestPayloadHeadChildRepoChild
  user: GetPullRequestPayloadHeadChildUserChild
}

export interface GetPullRequestPayloadHeadChildRepoChild {
  id: number
  node_id: string
  owner: GetPullRequestPayloadHeadChildRepoChildOwnerChild
  name: string
  full_name: string
  description: string
  homepage: string
  default_branch: string
  created_at: string
  pushed_at: string
  updated_at: string
  html_url: string
  clone_url: string
  git_url: string
  ssh_url: string
  svn_url: string
  language: string
  fork: boolean
  forks_count: number
  open_issues_count: number
  open_issues: number
  stargazers_count: number
  watchers_count: number
  watchers: number
  size: number
  allow_forking: boolean
  web_commit_signoff_required: boolean
  topics: string[]
  archived: boolean
  disabled: boolean
  license: GetPullRequestPayloadHeadChildRepoChildLicenseChild
  private: boolean
  has_issues: boolean
  has_wiki: boolean
  has_pages: boolean
  has_projects: boolean
  has_downloads: boolean
  has_discussions: boolean
  is_template: boolean
  url: string
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  downloads_url: string
  events_url: string
  forks_url: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  notifications_url: string
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  trees_url: string
  teams_url: string
  visibility: string
}

export interface GetPullRequestPayloadHeadChildRepoChildOwnerChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestPayloadHeadChildRepoChildLicenseChild {
  key: string
  name: string
  url: string
  spdx_id: string
}

export interface GetPullRequestPayloadHeadChildUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestPayloadBaseChild {
  label: string
  ref: string
  sha: string
  repo: GetPullRequestPayloadBaseChildRepoChild
  user: GetPullRequestPayloadBaseChildUserChild
}

export interface GetPullRequestPayloadBaseChildRepoChild {
  id: number
  node_id: string
  owner: GetPullRequestPayloadBaseChildRepoChildOwnerChild
  name: string
  full_name: string
  description: string
  homepage: string
  default_branch: string
  created_at: string
  pushed_at: string
  updated_at: string
  html_url: string
  clone_url: string
  git_url: string
  ssh_url: string
  svn_url: string
  language: string
  fork: boolean
  forks_count: number
  open_issues_count: number
  open_issues: number
  stargazers_count: number
  watchers_count: number
  watchers: number
  size: number
  allow_forking: boolean
  web_commit_signoff_required: boolean
  topics: string[]
  archived: boolean
  disabled: boolean
  license: GetPullRequestPayloadBaseChildRepoChildLicenseChild
  private: boolean
  has_issues: boolean
  has_wiki: boolean
  has_pages: boolean
  has_projects: boolean
  has_downloads: boolean
  has_discussions: boolean
  is_template: boolean
  url: string
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  downloads_url: string
  events_url: string
  forks_url: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  notifications_url: string
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  trees_url: string
  teams_url: string
  visibility: string
}

export interface GetPullRequestPayloadBaseChildRepoChildOwnerChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestPayloadBaseChildRepoChildLicenseChild {
  key: string
  name: string
  url: string
  spdx_id: string
}

export interface GetPullRequestPayloadBaseChildUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestResponse {
  content: GetPullRequestPayload[]
}

export type ListPullRequestsPayload = any[]

export interface ListPullRequestsResponse {
  content: ListPullRequestsPayload[]
}

export type ListTagsPayload = ListTagsPayloadItem[]

export interface ListTagsPayloadItem {
  name: string
  commit: ListTagsPayloadItemCommitChild
  zipball_url: string
  tarball_url: string
}

export interface ListTagsPayloadItemCommitChild {
  sha: string
  url: string
}

export interface ListTagsResponse {
  content: ListTagsPayload[]
}

export type ListBranchesPayload = ListBranchesPayloadItem[]

export interface ListBranchesPayloadItem {
  name: string
  commit: ListBranchesPayloadItemCommitChild
  protected: boolean
}

export interface ListBranchesPayloadItemCommitChild {
  sha: string
  url: string
}

export interface ListBranchesResponse {
  content: ListBranchesPayload[]
}

export interface ListNotificationsPayload {
  type: string
  text: string
}

export interface ListNotificationsResponse {
  content: ListNotificationsPayload[]
  isError: boolean
}

export interface GetCommitPayload {
  node_id: string
  sha: string
  commit: GetCommitPayloadCommitChild
  author: GetCommitPayloadAuthorChild
  committer: GetCommitPayloadCommitterChild
  parents: GetCommitPayloadParentsItem[]
  html_url: string
  url: string
  comments_url: string
  stats: GetCommitPayloadStatsChild
  files: GetCommitPayloadFilesItem[]
}

export interface GetCommitPayloadCommitChild {
  author: GetCommitPayloadCommitChildAuthorChild
  committer: GetCommitPayloadCommitChildCommitterChild
  message: string
  tree: GetCommitPayloadCommitChildTreeChild
  url: string
  verification: GetCommitPayloadCommitChildVerificationChild
  comment_count: number
}

export interface GetCommitPayloadCommitChildAuthorChild {
  date: string
  name: string
  email: string
}

export interface GetCommitPayloadCommitChildCommitterChild {
  date: string
  name: string
  email: string
}

export interface GetCommitPayloadCommitChildTreeChild {
  sha: string
}

export interface GetCommitPayloadCommitChildVerificationChild {
  verified: boolean
  reason: string
  signature: string
  payload: string
}

export interface GetCommitPayloadAuthorChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetCommitPayloadCommitterChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetCommitPayloadParentsItem {
  sha: string
  html_url: string
  url: string
}

export interface GetCommitPayloadStatsChild {
  additions: number
  deletions: number
  total: number
}

export interface GetCommitPayloadFilesItem {
  sha: string
  filename: string
  additions: number
  deletions: number
  changes: number
  status: string
  patch: string
  blob_url: string
  raw_url: string
  contents_url: string
}

export interface GetCommitResponse {
  content: GetCommitPayload[]
}

export type GetIssueCommentsPayload = GetIssueCommentsPayloadItem[]

export interface GetIssueCommentsPayloadItem {
  id: number
  node_id: string
  body: string
  user: GetIssueCommentsPayloadItemUserChild
  reactions: GetIssueCommentsPayloadItemReactionsChild
  created_at: string
  updated_at: string
  author_association: string
  url: string
  html_url: string
  issue_url: string
}

export interface GetIssueCommentsPayloadItemUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetIssueCommentsPayloadItemReactionsChild {
  total_count: number
  "+1": number
  "-1": number
  laugh: number
  confused: number
  heart: number
  hooray: number
  rocket: number
  eyes: number
  url: string
}

export interface GetIssueCommentsResponse {
  content: GetIssueCommentsPayload[]
}

export interface SearchUsersPayload {
  total_count: number
  incomplete_results: boolean
}

export interface SearchUsersResponse {
  content: SearchUsersPayload[]
}

export type GetPullRequestReviewsPayload = GetPullRequestReviewsPayloadItem[]

export interface GetPullRequestReviewsPayloadItem {
  id: number
  node_id: string
  user: GetPullRequestReviewsPayloadItemUserChild
  body: string
  submitted_at: string
  commit_id: string
  html_url: string
  pull_request_url: string
  state: string
  author_association: string
}

export interface GetPullRequestReviewsPayloadItemUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestReviewsResponse {
  content: GetPullRequestReviewsPayload[]
}

export interface SearchCodePayload {
  total_count: number
  incomplete_results: boolean
  items: SearchCodePayloadItemsItem[]
}

export interface SearchCodePayloadItemsItem {
  name: string
  path: string
  sha: string
  html_url: string
  repository: SearchCodePayloadItemsItemRepositoryChild
}

export interface SearchCodePayloadItemsItemRepositoryChild {
  id: number
  node_id: string
  owner: SearchCodePayloadItemsItemRepositoryChildOwnerChild
  name: string
  full_name: string
  description: string
  html_url: string
  fork: boolean
  private: boolean
  url: string
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  downloads_url: string
  events_url: string
  forks_url: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  notifications_url: string
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  trees_url: string
  teams_url: string
}

export interface SearchCodePayloadItemsItemRepositoryChildOwnerChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface SearchCodeResponse {
  content: SearchCodePayload[]
}

export type GetFileContentsPayload = GetFileContentsPayloadItem[]

export interface GetFileContentsPayloadItem {
  type: string
  size: number
  name: string
  path: string
  sha: string
  url: string
  git_url: string
  html_url: string
  download_url: string
}

export interface GetFileContentsResponse {
  content: GetFileContentsPayload[]
}

export type GetPullRequestCommentsPayload = GetPullRequestCommentsPayloadItem[]

export interface GetPullRequestCommentsPayloadItem {
  id: number
  node_id: string
  body: string
  path: string
  diff_hunk: string
  pull_request_review_id: number
  original_position: number
  original_line: number
  original_start_line: number
  side: string
  start_side: string
  commit_id: string
  original_commit_id: string
  user: GetPullRequestCommentsPayloadItemUserChild
  reactions: GetPullRequestCommentsPayloadItemReactionsChild
  created_at: string
  updated_at: string
  author_association: string
  url: string
  html_url: string
  pull_request_url: string
  subject_type: string
}

export interface GetPullRequestCommentsPayloadItemUserChild {
  login: string
  id: number
  node_id: string
  avatar_url: string
  html_url: string
  gravatar_id: string
  type: string
  site_admin: boolean
  url: string
  events_url: string
  following_url: string
  followers_url: string
  gists_url: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  starred_url: string
  subscriptions_url: string
}

export interface GetPullRequestCommentsPayloadItemReactionsChild {
  total_count: number
  "+1": number
  "-1": number
  laugh: number
  confused: number
  heart: number
  hooray: number
  rocket: number
  eyes: number
  url: string
}

export interface GetPullRequestCommentsResponse {
  content: GetPullRequestCommentsPayload[]
}

export interface GetPullRequestDiffPayload {
  type: string
  text: string
}

export interface GetPullRequestDiffResponse {
  content: GetPullRequestDiffPayload[]
  isError: boolean
}
