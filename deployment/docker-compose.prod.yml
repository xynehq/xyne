version: "3.9"

services:
  # app:
  #   image: xyne
  #   container_name: xyne-app
  #   build:
  #     context: ..
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - xyne-db
  #     - vespa
  #   env_file:
  #     - ../server/.env
  #   networks:
  #     - xyne
  #   restart: always

  prometheus:
    image: "prom/prometheus"
    container_name: xyne-prometheus
    user: "65534:65534"
    volumes:
      - ./prometheus-selfhosted.yml:/etc/prometheus/prometheus-selfhosted.yml
      - ./prometheus/data:/prometheus
    ports:
    - "9090:9090"
    environment:
      - METRICS_PORT=${METRICS_PORT:-3001}
    command:
      - "--config.file=/etc/prometheus/prometheus-selfhosted.yml"
    restart: always
    networks:
      - xyne
    extra_hosts:
    - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    container_name: xyne-grafana
    user: "472:472"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
    ports:
      - "3002:3000"
    restart: always
    networks:
      - xyne
    environment:
      - POSTGRES_PASSWORD=xyne

  vespa:
    image: xyne/vespa-gpu:8.583.10 # Uses the custom GPU-enabled Vespa image
    container_name: vespa
    hostname: vespa-container
    # sudo chown -R 1000:1000 ./server/vespa-data
    user: "1000:1000" # Run as vespa user
    deploy:
      resources:
        limits:
          memory: 230G
        reservations:
          devices:
            - driver: nvidia
              count: all  # or "all" for all GPUs
              capabilities: [gpu]
    ports:
      - "8080:8080"
      - "19071:19071"
    volumes:
      - ../server/vespa-data:/opt/vespa/var # Ensure this directory has correct permissions
      - ../server/vespa-logs:/opt/vespa/logs # Ensure correct permissions
    networks:
      - xyne
    ulimits:
      nproc: 409600
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility

      # Config server - reduced from 4g to free up memory for searchnode
      - VESPA_CONFIGSERVER_JVMARGS=-Xms1g -Xmx2g -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/vespa/var/crash
      - VESPA_CONFIGPROXY_JVMARGS=-Xms512m -Xmx1g -XX:+UseG1GC

      # Main query container - handles ONNX Runtime GPU inference and query processing
      - VESPA_CONTAINER_JVMARGS=-Xms10g -Xmx20g -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/vespa/var/crash -XX:MaxGCPauseMillis=200

      # Storage and search nodes - SIGNIFICANTLY INCREASED to handle 102GB dataset
      # Content node handles document storage and metadata
      - VESPA_CONTENT_JVMARGS=-Xms20g -Xmx40g -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/vespa/var/crash
      # Searchnode is the critical component - needs much more memory for embeddings and indexes
      - VESPA_SEARCHNODE_JVMARGS=-Xms160g -Xmx160g -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/vespa/var/crash

      # Support components (kept small)
      - VESPA_LOGSERVER_JVMARGS=-Xms128m -Xmx256m -XX:+UseG1GC
      - VESPA_LOGS_JVMARGS=-Xms128m -Xmx256m -XX:+UseG1GC
      - VESPA_CLUSTER_CONTROLLER_JVMARGS=-Xms128m -Xmx256m -XX:+UseG1GC
      - VESPA_METRICS_JVMARGS=-Xms256m -Xmx512m -XX:+UseG1GC

  xyne-db:
    image: postgres:15-alpine
    container_name: xyne-db
    environment:
      POSTGRES_USER: xyne
      POSTGRES_PASSWORD: xyne
      POSTGRES_DB: xyne
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ../server/xyne-data:/var/lib/postgresql/data
    ports:
      - "${XYNE_DB_PORT:-5432}:5432"
    networks:
      - xyne
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xyne -d xyne"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    user: "10001:10001"
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/mnt/config/loki-config.yaml
      - ./loki:/tmp/loki
    command: --config.file=/mnt/config/loki-config.yaml
    restart: unless-stopped
    networks:
      - xyne

  nginx:
    image: nginx:1.26-alpine
    container_name: xyne-nginx
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "3443:3443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_DOMAIN=${NGINX_DOMAIN:-localhost}
      - NGINX_PORT=${NGINX_PORT:-3000}
      - APP_PORT=${APP_PORT:-3001}
    networks:
      - xyne
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
      envsubst '$$NGINX_DOMAIN $$NGINX_PORT $$APP_PORT' < /etc/nginx/nginx.conf > /tmp/nginx.conf &&
      nginx -g 'daemon off;' -c /tmp/nginx.conf
      "

networks:
  xyne:
    driver: bridge
volumes:
  vespa-data:
    driver: local
  grafana-storage:
    driver: local
