version: "3.9"

services:
  # app:
  # image: xyne
  # container_name: xyne-app
  # build:
  #   context: ..
  #   dockerfile: Dockerfile
  # ports:
  #   - "3000:3000"
  # depends_on:
  #   - xyne-db
  #   - vespa
  # env_file:
  #   - .env
  # networks:
  #   - xyne
  # restart: always
  
  prometheus:
    image: "prom/prometheus"
    container_name: xyne-prometheus
    user: "65534:65534"
    volumes:
      - ./prometheus-selfhosted.yml:/etc/prometheus/prometheus-template.yml
    ports:
    - "9090:9090"
    environment:
      - METRICS_PORT=${METRICS_PORT:-3001}
    command:
      - sh
      - -c
      - |
        envsubst < /etc/prometheus/prometheus-template.yml > /etc/prometheus/prometheus.yml
        exec prometheus --config.file=/etc/prometheus/prometheus.yml
    restart: always
    networks:
      - xyne
    extra_hosts:
    - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    container_name: xyne-grafana
    user: "472:472"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana-storage:/var/lib/grafana 
    ports:
      - "3002:3000"
    restart: always
    networks:
      - xyne
    environment:
      - POSTGRES_PASSWORD=xyne

  vespa:
    image: vespaengine/vespa
    container_name: vespa
    user: "1000:1000"
    hostname: vespa-container
    deploy:
      resources:
        limits:
          memory: 20G
    ulimits:
      nproc: 409600
    ports:
      - "8080:8080"
      - "19071:19071"
    volumes:
      - ../server/vespa-data:/opt/vespa/var
    networks:
      - xyne
    environment:
      - VESPA_CONFIGSERVER_JVMARGS=-Xms1g -Xmx16g -XX:+UseG1GC -XX:G1HeapRegionSize=32M
      - VESPA_CONFIGPROXY_JVMARGS=-Xms512m -Xmx8g -XX:+UseG1GC



    restart: always
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  xyne-db:
    image: postgres:15-alpine
    container_name: xyne-db
    environment:
      POSTGRES_USER: xyne
      POSTGRES_PASSWORD: xyne
      POSTGRES_DB: xyne
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ../server/xyne-data:/var/lib/postgresql/data
    ports:
      - "${XYNE_DB_PORT:-5432}:5432"
    networks:
      - xyne
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xyne -d xyne"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    
  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    user: "10001:10001"
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/mnt/config/loki-config.yaml
      - ./loki:/tmp/loki
    command: --config.file=/mnt/config/loki-config.yaml
    restart: unless-stopped
    networks:
      - xyne

  livekit:
    image: livekit/livekit-server:latest
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
    environment:
      LIVEKIT_KEYS: "devkey: devsecret"
    networks:
      - xyne
   

networks:
  xyne:
    driver: bridge
volumes:
  vespa-data:
    driver: local
  grafana-storage:  
    driver: local
